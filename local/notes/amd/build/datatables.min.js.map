{"version":3,"file":"datatables.min.js","sources":["../src/datatables.js"],"sourcesContent":["/*! DataTables 2.1.4\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     2.1.4\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - https://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: https://www.datatables.net\n */\n\n(function (factory) {\n  \"use strict\";\n\n  if (typeof define === \"function\" && define.amd) {\n    // AMD\n    define([\"jquery\"], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === \"object\") {\n    // CommonJS\n    // jQuery's factory checks for a global window - if it isn't present then it\n    // returns a factory function that expects the window object\n    var jq = require(\"jquery\");\n\n    if (typeof window === \"undefined\") {\n      module.exports = function (root, $) {\n        if (!root) {\n          // CommonJS environments without a window global must pass a\n          // root. This will give an error otherwise\n          root = window;\n        }\n\n        if (!$) {\n          $ = jq(root);\n        }\n\n        return factory($, root, root.document);\n      };\n    } else {\n      module.exports = factory(jq, window, window.document);\n    }\n  } else {\n    // Browser\n    window.DataTable = factory(jQuery, window, document);\n  }\n})(function ($, window, document) {\n  \"use strict\";\n\n  var DataTable = function (selector, options) {\n    // Check if called with a window or jQuery object for DOM less applications\n    // This is for backwards compatibility\n    if (DataTable.factory(selector, options)) {\n      return DataTable;\n    }\n\n    // When creating with `new`, create a new DataTable, returning the API instance\n    if (this instanceof DataTable) {\n      return $(selector).DataTable(options);\n    } else {\n      // Argument switching\n      options = selector;\n    }\n\n    var _that = this;\n    var emptyInit = options === undefined;\n    var len = this.length;\n\n    if (emptyInit) {\n      options = {};\n    }\n\n    // Method to get DT API instance from jQuery object\n    this.api = function () {\n      return new _Api(this);\n    };\n\n    this.each(function () {\n      // For each initialisation we want to give it a clean initialisation\n      // object that can be bashed around\n      var o = {};\n      var oInit =\n        len > 1 // optimisation for single table case\n          ? _fnExtend(o, options, true)\n          : options;\n\n      var i = 0,\n        iLen;\n      var sId = this.getAttribute(\"id\");\n      var defaults = DataTable.defaults;\n      var $this = $(this);\n\n      /* Sanity check */\n      if (this.nodeName.toLowerCase() != \"table\") {\n        _fnLog(\n          null,\n          0,\n          \"Non-table node initialisation (\" + this.nodeName + \")\",\n          2\n        );\n        return;\n      }\n\n      $(this).trigger(\"options.dt\", oInit);\n\n      /* Backwards compatibility for the defaults */\n      _fnCompatOpts(defaults);\n      _fnCompatCols(defaults.column);\n\n      /* Convert the camel-case defaults to Hungarian */\n      _fnCamelToHungarian(defaults, defaults, true);\n      _fnCamelToHungarian(defaults.column, defaults.column, true);\n\n      /* Setting up the initialisation object */\n      _fnCamelToHungarian(defaults, $.extend(oInit, $this.data()), true);\n\n      /* Check to see if we are re-initialising a table */\n      var allSettings = DataTable.settings;\n      for (i = 0, iLen = allSettings.length; i < iLen; i++) {\n        var s = allSettings[i];\n\n        /* Base check on table node */\n        if (\n          s.nTable == this ||\n          (s.nTHead && s.nTHead.parentNode == this) ||\n          (s.nTFoot && s.nTFoot.parentNode == this)\n        ) {\n          var bRetrieve =\n            oInit.bRetrieve !== undefined\n              ? oInit.bRetrieve\n              : defaults.bRetrieve;\n          var bDestroy =\n            oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\n          if (emptyInit || bRetrieve) {\n            return s.oInstance;\n          } else if (bDestroy) {\n            new DataTable.Api(s).destroy();\n            break;\n          } else {\n            _fnLog(s, 0, \"Cannot reinitialise DataTable\", 3);\n            return;\n          }\n        }\n\n        /* If the element we are initialising has the same ID as a table which was previously\n         * initialised, but the table nodes don't match (from before) then we destroy the old\n         * instance by simply deleting it. This is under the assumption that the table has been\n         * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n         */\n        if (s.sTableId == this.id) {\n          allSettings.splice(i, 1);\n          break;\n        }\n      }\n\n      /* Ensure the table has an ID - required for accessibility */\n      if (sId === null || sId === \"\") {\n        sId = \"DataTables_Table_\" + DataTable.ext._unique++;\n        this.id = sId;\n      }\n\n      /* Create the settings object for this table and set some of the default parameters */\n      var oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n        sDestroyWidth: $this[0].style.width,\n        sInstance: sId,\n        sTableId: sId,\n        colgroup: $(\"<colgroup>\").prependTo(this),\n        fastData: function (row, column, type) {\n          return _fnGetCellData(oSettings, row, column, type);\n        },\n      });\n      oSettings.nTable = this;\n      oSettings.oInit = oInit;\n\n      allSettings.push(oSettings);\n\n      // Make a single API instance available for internal handling\n      oSettings.api = new _Api(oSettings);\n\n      // Need to add the instance after the instance after the settings object has been added\n      // to the settings array, so we can self reference the table instance if more than one\n      oSettings.oInstance = _that.length === 1 ? _that : $this.dataTable();\n\n      // Backwards compatibility, before we apply all the defaults\n      _fnCompatOpts(oInit);\n\n      // If the length menu is given, but the init display length is not, use the length menu\n      if (oInit.aLengthMenu && !oInit.iDisplayLength) {\n        oInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0])\n          ? oInit.aLengthMenu[0][0]\n          : $.isPlainObject(oInit.aLengthMenu[0])\n          ? oInit.aLengthMenu[0].value\n          : oInit.aLengthMenu[0];\n      }\n\n      // Apply the defaults and init options to make a single init object will all\n      // options defined from defaults and instance options.\n      oInit = _fnExtend($.extend(true, {}, defaults), oInit);\n\n      // Map the initialisation options onto the settings object\n      _fnMap(oSettings.oFeatures, oInit, [\n        \"bPaginate\",\n        \"bLengthChange\",\n        \"bFilter\",\n        \"bSort\",\n        \"bSortMulti\",\n        \"bInfo\",\n        \"bProcessing\",\n        \"bAutoWidth\",\n        \"bSortClasses\",\n        \"bServerSide\",\n        \"bDeferRender\",\n      ]);\n      _fnMap(oSettings, oInit, [\n        \"ajax\",\n        \"fnFormatNumber\",\n        \"sServerMethod\",\n        \"aaSorting\",\n        \"aaSortingFixed\",\n        \"aLengthMenu\",\n        \"sPaginationType\",\n        \"iStateDuration\",\n        \"bSortCellsTop\",\n        \"iTabIndex\",\n        \"sDom\",\n        \"fnStateLoadCallback\",\n        \"fnStateSaveCallback\",\n        \"renderer\",\n        \"searchDelay\",\n        \"rowId\",\n        \"caption\",\n        \"layout\",\n        \"orderDescReverse\",\n        [\"iCookieDuration\", \"iStateDuration\"], // backwards compat\n        [\"oSearch\", \"oPreviousSearch\"],\n        [\"aoSearchCols\", \"aoPreSearchCols\"],\n        [\"iDisplayLength\", \"_iDisplayLength\"],\n      ]);\n      _fnMap(oSettings.oScroll, oInit, [\n        [\"sScrollX\", \"sX\"],\n        [\"sScrollXInner\", \"sXInner\"],\n        [\"sScrollY\", \"sY\"],\n        [\"bScrollCollapse\", \"bCollapse\"],\n      ]);\n      _fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n\n      /* Callback functions which are array driven */\n      _fnCallbackReg(oSettings, \"aoDrawCallback\", oInit.fnDrawCallback);\n      _fnCallbackReg(oSettings, \"aoStateSaveParams\", oInit.fnStateSaveParams);\n      _fnCallbackReg(oSettings, \"aoStateLoadParams\", oInit.fnStateLoadParams);\n      _fnCallbackReg(oSettings, \"aoStateLoaded\", oInit.fnStateLoaded);\n      _fnCallbackReg(oSettings, \"aoRowCallback\", oInit.fnRowCallback);\n      _fnCallbackReg(oSettings, \"aoRowCreatedCallback\", oInit.fnCreatedRow);\n      _fnCallbackReg(oSettings, \"aoHeaderCallback\", oInit.fnHeaderCallback);\n      _fnCallbackReg(oSettings, \"aoFooterCallback\", oInit.fnFooterCallback);\n      _fnCallbackReg(oSettings, \"aoInitComplete\", oInit.fnInitComplete);\n      _fnCallbackReg(oSettings, \"aoPreDrawCallback\", oInit.fnPreDrawCallback);\n\n      oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);\n\n      /* Browser support detection */\n      _fnBrowserDetect(oSettings);\n\n      var oClasses = oSettings.oClasses;\n\n      $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n      $this.addClass(oClasses.table);\n\n      if (!oSettings.oFeatures.bPaginate) {\n        oInit.iDisplayStart = 0;\n      }\n\n      if (oSettings.iInitDisplayStart === undefined) {\n        /* Display start point, taking into account the save saving */\n        oSettings.iInitDisplayStart = oInit.iDisplayStart;\n        oSettings._iDisplayStart = oInit.iDisplayStart;\n      }\n\n      var defer = oInit.iDeferLoading;\n      if (defer !== null) {\n        oSettings.deferLoading = true;\n\n        var tmp = Array.isArray(defer);\n        oSettings._iRecordsDisplay = tmp ? defer[0] : defer;\n        oSettings._iRecordsTotal = tmp ? defer[1] : defer;\n      }\n\n      /*\n       * Columns\n       * See if we should load columns automatically or use defined ones\n       */\n      var columnsInit = [];\n      var thead = this.getElementsByTagName(\"thead\");\n      var initHeaderLayout = _fnDetectHeader(oSettings, thead[0]);\n\n      // If we don't have a columns array, then generate one with nulls\n      if (oInit.aoColumns) {\n        columnsInit = oInit.aoColumns;\n      } else if (initHeaderLayout.length) {\n        for (i = 0, iLen = initHeaderLayout[0].length; i < iLen; i++) {\n          columnsInit.push(null);\n        }\n      }\n\n      // Add the columns\n      for (i = 0, iLen = columnsInit.length; i < iLen; i++) {\n        _fnAddColumn(oSettings);\n      }\n\n      // Apply the column definitions\n      _fnApplyColumnDefs(\n        oSettings,\n        oInit.aoColumnDefs,\n        columnsInit,\n        initHeaderLayout,\n        function (iCol, oDef) {\n          _fnColumnOptions(oSettings, iCol, oDef);\n        }\n      );\n\n      /* HTML5 attribute detection - build an mData object automatically if the\n       * attributes are found\n       */\n      var rowOne = $this.children(\"tbody\").find(\"tr\").eq(0);\n\n      if (rowOne.length) {\n        var a = function (cell, name) {\n          return cell.getAttribute(\"data-\" + name) !== null ? name : null;\n        };\n\n        $(rowOne[0])\n          .children(\"th, td\")\n          .each(function (i, cell) {\n            var col = oSettings.aoColumns[i];\n\n            if (!col) {\n              _fnLog(oSettings, 0, \"Incorrect column count\", 18);\n            }\n\n            if (col.mData === i) {\n              var sort = a(cell, \"sort\") || a(cell, \"order\");\n              var filter = a(cell, \"filter\") || a(cell, \"search\");\n\n              if (sort !== null || filter !== null) {\n                col.mData = {\n                  _: i + \".display\",\n                  sort: sort !== null ? i + \".@data-\" + sort : undefined,\n                  type: sort !== null ? i + \".@data-\" + sort : undefined,\n                  filter: filter !== null ? i + \".@data-\" + filter : undefined,\n                };\n                col._isArrayHost = true;\n\n                _fnColumnOptions(oSettings, i);\n              }\n            }\n          });\n      }\n\n      // Must be done after everything which can be overridden by the state saving!\n      _fnCallbackReg(oSettings, \"aoDrawCallback\", _fnSaveState);\n\n      var features = oSettings.oFeatures;\n      if (oInit.bStateSave) {\n        features.bStateSave = true;\n      }\n\n      // If aaSorting is not defined, then we use the first indicator in asSorting\n      // in case that has been altered, so the default sort reflects that option\n      if (oInit.aaSorting === undefined) {\n        var sorting = oSettings.aaSorting;\n        for (i = 0, iLen = sorting.length; i < iLen; i++) {\n          sorting[i][1] = oSettings.aoColumns[i].asSorting[0];\n        }\n      }\n\n      // Do a first pass on the sorting classes (allows any size changes to be taken into\n      // account, and also will apply sorting disabled classes if disabled\n      _fnSortingClasses(oSettings);\n\n      _fnCallbackReg(oSettings, \"aoDrawCallback\", function () {\n        if (\n          oSettings.bSorted ||\n          _fnDataSource(oSettings) === \"ssp\" ||\n          features.bDeferRender\n        ) {\n          _fnSortingClasses(oSettings);\n        }\n      });\n\n      /*\n       * Table HTML init\n       * Cache the header, body and footer as required, creating them if needed\n       */\n      var caption = $this.children(\"caption\");\n\n      if (oSettings.caption) {\n        if (caption.length === 0) {\n          caption = $(\"<caption/>\").appendTo($this);\n        }\n\n        caption.html(oSettings.caption);\n      }\n\n      // Store the caption side, so we can remove the element from the document\n      // when creating the element\n      if (caption.length) {\n        caption[0]._captionSide = caption.css(\"caption-side\");\n        oSettings.captionNode = caption[0];\n      }\n\n      if (thead.length === 0) {\n        thead = $(\"<thead/>\").appendTo($this);\n      }\n      oSettings.nTHead = thead[0];\n      $(\"tr\", thead).addClass(oClasses.thead.row);\n\n      var tbody = $this.children(\"tbody\");\n      if (tbody.length === 0) {\n        tbody = $(\"<tbody/>\").insertAfter(thead);\n      }\n      oSettings.nTBody = tbody[0];\n\n      var tfoot = $this.children(\"tfoot\");\n      if (tfoot.length === 0) {\n        // If we are a scrolling table, and no footer has been given, then we need to create\n        // a tfoot element for the caption element to be appended to\n        tfoot = $(\"<tfoot/>\").appendTo($this);\n      }\n      oSettings.nTFoot = tfoot[0];\n      $(\"tr\", tfoot).addClass(oClasses.tfoot.row);\n\n      // Copy the data index array\n      oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\n      // Initialisation complete - table can be drawn\n      oSettings.bInitialised = true;\n\n      // Language definitions\n      var oLanguage = oSettings.oLanguage;\n      $.extend(true, oLanguage, oInit.oLanguage);\n\n      if (oLanguage.sUrl) {\n        // Get the language definitions from a file\n        $.ajax({\n          dataType: \"json\",\n          url: oLanguage.sUrl,\n          success: function (json) {\n            _fnCamelToHungarian(defaults.oLanguage, json);\n            $.extend(true, oLanguage, json, oSettings.oInit.oLanguage);\n\n            _fnCallbackFire(oSettings, null, \"i18n\", [oSettings], true);\n            _fnInitialise(oSettings);\n          },\n          error: function () {\n            // Error occurred loading language file\n            _fnLog(oSettings, 0, \"i18n file loading error\", 21);\n\n            // Continue on as best we can\n            _fnInitialise(oSettings);\n          },\n        });\n      } else {\n        _fnCallbackFire(oSettings, null, \"i18n\", [oSettings]);\n        _fnInitialise(oSettings);\n      }\n    });\n    _that = null;\n    return this;\n  };\n\n  /**\n   * DataTables extensions\n   *\n   * This namespace acts as a collection area for plug-ins that can be used to\n   * extend DataTables capabilities. Indeed many of the build in methods\n   * use this method to provide their own capabilities (sorting methods for\n   * example).\n   *\n   * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n   * reasons\n   *\n   *  @namespace\n   */\n  DataTable.ext = _ext = {\n    /**\n     * Buttons. For use with the Buttons extension for DataTables. This is\n     * defined here so other extensions can define buttons regardless of load\n     * order. It is _not_ used by DataTables core.\n     *\n     *  @type object\n     *  @default {}\n     */\n    buttons: {},\n\n    /**\n     * Element class names\n     *\n     *  @type object\n     *  @default {}\n     */\n    classes: {},\n\n    /**\n     * DataTables build type (expanded by the download builder)\n     *\n     *  @type string\n     */\n    builder: \"-source-\",\n\n    /**\n     * Error reporting.\n     *\n     * How should DataTables report an error. Can take the value 'alert',\n     * 'throw', 'none' or a function.\n     *\n     *  @type string|function\n     *  @default alert\n     */\n    errMode: \"alert\",\n\n    /**\n     * Legacy so v1 plug-ins don't throw js errors on load\n     */\n    feature: [],\n\n    /**\n     * Feature plug-ins.\n     *\n     * This is an object of callbacks which provide the features for DataTables\n     * to be initialised via the `layout` option.\n     */\n    features: {},\n\n    /**\n     * Row searching.\n     *\n     * This method of searching is complimentary to the default type based\n     * searching, and a lot more comprehensive as it allows you complete control\n     * over the searching logic. Each element in this array is a function\n     * (parameters described below) that is called for every row in the table,\n     * and your logic decides if it should be included in the searching data set\n     * or not.\n     *\n     * Searching functions have the following input parameters:\n     *\n     * 1. `{object}` DataTables settings object: see\n     *    {@link DataTable.models.oSettings}\n     * 2. `{array|object}` Data for the row to be processed (same as the\n     *    original format that was passed in as the data source, or an array\n     *    from a DOM data source\n     * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n     *    can be useful to retrieve the `TR` element if you need DOM interaction.\n     *\n     * And the following return is expected:\n     *\n     * * {boolean} Include the row in the searched result set (true) or not\n     *   (false)\n     *\n     * Note that as with the main search ability in DataTables, technically this\n     * is \"filtering\", since it is subtractive. However, for consistency in\n     * naming we call it searching here.\n     *\n     *  @type array\n     *  @default []\n     *\n     *  @example\n     *    // The following example shows custom search being applied to the\n     *    // fourth column (i.e. the data[3] index) based on two input values\n     *    // from the end-user, matching the data in a certain range.\n     *    $.fn.dataTable.ext.search.push(\n     *      function( settings, data, dataIndex ) {\n     *        var min = document.getElementById('min').value * 1;\n     *        var max = document.getElementById('max').value * 1;\n     *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n     *\n     *        if ( min == \"\" && max == \"\" ) {\n     *          return true;\n     *        }\n     *        else if ( min == \"\" && version < max ) {\n     *          return true;\n     *        }\n     *        else if ( min < version && \"\" == max ) {\n     *          return true;\n     *        }\n     *        else if ( min < version && version < max ) {\n     *          return true;\n     *        }\n     *        return false;\n     *      }\n     *    );\n     */\n    search: [],\n\n    /**\n     * Selector extensions\n     *\n     * The `selector` option can be used to extend the options available for the\n     * selector modifier options (`selector-modifier` object data type) that\n     * each of the three built in selector types offer (row, column and cell +\n     * their plural counterparts). For example the Select extension uses this\n     * mechanism to provide an option to select only rows, columns and cells\n     * that have been marked as selected by the end user (`{selected: true}`),\n     * which can be used in conjunction with the existing built in selector\n     * options.\n     *\n     * Each property is an array to which functions can be pushed. The functions\n     * take three attributes:\n     *\n     * * Settings object for the host table\n     * * Options object (`selector-modifier` object type)\n     * * Array of selected item indexes\n     *\n     * The return is an array of the resulting item indexes after the custom\n     * selector has been applied.\n     *\n     *  @type object\n     */\n    selector: {\n      cell: [],\n      column: [],\n      row: [],\n    },\n\n    /**\n     * Legacy configuration options. Enable and disable legacy options that\n     * are available in DataTables.\n     *\n     *  @type object\n     */\n    legacy: {\n      /**\n       * Enable / disable DataTables 1.9 compatible server-side processing\n       * requests\n       *\n       *  @type boolean\n       *  @default null\n       */\n      ajax: null,\n    },\n\n    /**\n     * Pagination plug-in methods.\n     *\n     * Each entry in this object is a function and defines which buttons should\n     * be shown by the pagination rendering method that is used for the table:\n     * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n     * buttons are displayed in the document, while the functions here tell it\n     * what buttons to display. This is done by returning an array of button\n     * descriptions (what each button will do).\n     *\n     * Pagination types (the four built in options and any additional plug-in\n     * options defined here) can be used through the `paginationType`\n     * initialisation parameter.\n     *\n     * The functions defined take two parameters:\n     *\n     * 1. `{int} page` The current page index\n     * 2. `{int} pages` The number of pages in the table\n     *\n     * Each function is expected to return an array where each element of the\n     * array can be one of:\n     *\n     * * `first` - Jump to first page when activated\n     * * `last` - Jump to last page when activated\n     * * `previous` - Show previous page when activated\n     * * `next` - Show next page when activated\n     * * `{int}` - Show page of the index given\n     * * `{array}` - A nested array containing the above elements to add a\n     *   containing 'DIV' element (might be useful for styling).\n     *\n     * Note that DataTables v1.9- used this object slightly differently whereby\n     * an object with two functions would be defined for each plug-in. That\n     * ability is still supported by DataTables 1.10+ to provide backwards\n     * compatibility, but this option of use is now decremented and no longer\n     * documented in DataTables 1.10+.\n     *\n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    // Show previous, next and current page buttons only\n     *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n     *      return [ 'previous', page, 'next' ];\n     *    };\n     */\n    pager: {},\n\n    renderer: {\n      pageButton: {},\n      header: {},\n    },\n\n    /**\n     * Ordering plug-ins - custom data source\n     *\n     * The extension options for ordering of data available here is complimentary\n     * to the default type based ordering that DataTables typically uses. It\n     * allows much greater control over the the data that is being used to\n     * order a column, but is necessarily therefore more complex.\n     *\n     * This type of ordering is useful if you want to do ordering based on data\n     * live from the DOM (for example the contents of an 'input' element) rather\n     * than just the static string that DataTables knows of.\n     *\n     * The way these plug-ins work is that you create an array of the values you\n     * wish to be ordering for the column in question and then return that\n     * array. The data in the array much be in the index order of the rows in\n     * the table (not the currently ordering order!). Which order data gathering\n     * function is run here depends on the `dt-init columns.orderDataType`\n     * parameter that is used for the column (if any).\n     *\n     * The functions defined take two parameters:\n     *\n     * 1. `{object}` DataTables settings object: see\n     *    {@link DataTable.models.oSettings}\n     * 2. `{int}` Target column index\n     *\n     * Each function is expected to return an array:\n     *\n     * * `{array}` Data for the column to be ordering upon\n     *\n     *  @type array\n     *\n     *  @example\n     *    // Ordering using `input` node values\n     *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n     *    {\n     *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n     *        return $('input', td).val();\n     *      } );\n     *    }\n     */\n    order: {},\n\n    /**\n     * Type based plug-ins.\n     *\n     * Each column in DataTables has a type assigned to it, either by automatic\n     * detection or by direct assignment using the `type` option for the column.\n     * The type of a column will effect how it is ordering and search (plug-ins\n     * can also make use of the column type if required).\n     *\n     * @namespace\n     */\n    type: {\n      /**\n       * Automatic column class assignment\n       */\n      className: {},\n\n      /**\n       * Type detection functions.\n       *\n       * The functions defined in this object are used to automatically detect\n       * a column's type, making initialisation of DataTables super easy, even\n       * when complex data is in the table.\n       *\n       * The functions defined take two parameters:\n       *\n       *  1. `{*}` Data from the column cell to be analysed\n       *  2. `{settings}` DataTables settings object. This can be used to\n       *     perform context specific type detection - for example detection\n       *     based on language settings such as using a comma for a decimal\n       *     place. Generally speaking the options from the settings will not\n       *     be required\n       *\n       * Each function is expected to return:\n       *\n       * * `{string|null}` Data type detected, or null if unknown (and thus\n       *   pass it on to the other type detection functions.\n       *\n       *  @type array\n       *\n       *  @example\n       *    // Currency type detection plug-in:\n       *    $.fn.dataTable.ext.type.detect.push(\n       *      function ( data, settings ) {\n       *        // Check the numeric part\n       *        if ( ! data.substring(1).match(/[0-9]/) ) {\n       *          return null;\n       *        }\n       *\n       *        // Check prefixed by currency\n       *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n       *          return 'currency';\n       *        }\n       *        return null;\n       *      }\n       *    );\n       */\n      detect: [],\n\n      /**\n       * Automatic renderer assignment\n       */\n      render: {},\n\n      /**\n       * Type based search formatting.\n       *\n       * The type based searching functions can be used to pre-format the\n       * data to be search on. For example, it can be used to strip HTML\n       * tags or to de-format telephone numbers for numeric only searching.\n       *\n       * Note that is a search is not defined for a column of a given type,\n       * no search formatting will be performed.\n       *\n       * Pre-processing of searching data plug-ins - When you assign the sType\n       * for a column (or have it automatically detected for you by DataTables\n       * or a type detection plug-in), you will typically be using this for\n       * custom sorting, but it can also be used to provide custom searching\n       * by allowing you to pre-processing the data and returning the data in\n       * the format that should be searched upon. This is done by adding\n       * functions this object with a parameter name which matches the sType\n       * for that target column. This is the corollary of <i>afnSortData</i>\n       * for searching data.\n       *\n       * The functions defined take a single parameter:\n       *\n       *  1. `{*}` Data from the column cell to be prepared for searching\n       *\n       * Each function is expected to return:\n       *\n       * * `{string|null}` Formatted string that will be used for the searching.\n       *\n       *  @type object\n       *  @default {}\n       *\n       *  @example\n       *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n       *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n       *    }\n       */\n      search: {},\n\n      /**\n       * Type based ordering.\n       *\n       * The column type tells DataTables what ordering to apply to the table\n       * when a column is sorted upon. The order for each type that is defined,\n       * is defined by the functions available in this object.\n       *\n       * Each ordering option can be described by three properties added to\n       * this object:\n       *\n       * * `{type}-pre` - Pre-formatting function\n       * * `{type}-asc` - Ascending order function\n       * * `{type}-desc` - Descending order function\n       *\n       * All three can be used together, only `{type}-pre` or only\n       * `{type}-asc` and `{type}-desc` together. It is generally recommended\n       * that only `{type}-pre` is used, as this provides the optimal\n       * implementation in terms of speed, although the others are provided\n       * for compatibility with existing Javascript sort functions.\n       *\n       * `{type}-pre`: Functions defined take a single parameter:\n       *\n       *  1. `{*}` Data from the column cell to be prepared for ordering\n       *\n       * And return:\n       *\n       * * `{*}` Data to be sorted upon\n       *\n       * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n       * functions, taking two parameters:\n       *\n       *  1. `{*}` Data to compare to the second parameter\n       *  2. `{*}` Data to compare to the first parameter\n       *\n       * And returning:\n       *\n       * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n       *   than the second parameter, ===0 if the two parameters are equal and\n       *   >0 if the first parameter should be sorted height than the second\n       *   parameter.\n       *\n       *  @type object\n       *  @default {}\n       *\n       *  @example\n       *    // Numeric ordering of formatted numbers with a pre-formatter\n       *    $.extend( $.fn.dataTable.ext.type.order, {\n       *      \"string-pre\": function(x) {\n       *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n       *        return parseFloat( a );\n       *      }\n       *    } );\n       *\n       *  @example\n       *    // Case-sensitive string ordering, with no pre-formatting method\n       *    $.extend( $.fn.dataTable.ext.order, {\n       *      \"string-case-asc\": function(x,y) {\n       *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n       *      },\n       *      \"string-case-desc\": function(x,y) {\n       *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n       *      }\n       *    } );\n       */\n      order: {},\n    },\n\n    /**\n     * Unique DataTables instance counter\n     *\n     * @type int\n     * @private\n     */\n    _unique: 0,\n\n    //\n    // Depreciated\n    // The following properties are retained for backwards compatibility only.\n    // The should not be used in new projects and will be removed in a future\n    // version\n    //\n\n    /**\n     * Version check function.\n     *  @type function\n     *  @depreciated Since 1.10\n     */\n    fnVersionCheck: DataTable.fnVersionCheck,\n\n    /**\n     * Index for what 'this' index API functions should use\n     *  @type int\n     *  @deprecated Since v1.10\n     */\n    iApiIndex: 0,\n\n    /**\n     * Software version\n     *  @type string\n     *  @deprecated Since v1.10\n     */\n    sVersion: DataTable.version,\n  };\n\n  //\n  // Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n  //\n  $.extend(_ext, {\n    afnFiltering: _ext.search,\n    aTypes: _ext.type.detect,\n    ofnSearch: _ext.type.search,\n    oSort: _ext.type.order,\n    afnSortData: _ext.order,\n    aoFeatures: _ext.feature,\n    oStdClasses: _ext.classes,\n    oPagination: _ext.pager,\n  });\n\n  $.extend(DataTable.ext.classes, {\n    container: \"dt-container\",\n    empty: {\n      row: \"dt-empty\",\n    },\n    info: {\n      container: \"dt-info\",\n    },\n    layout: {\n      row: \"dt-layout-row\",\n      cell: \"dt-layout-cell\",\n      tableRow: \"dt-layout-table\",\n      tableCell: \"\",\n      start: \"dt-layout-start\",\n      end: \"dt-layout-end\",\n      full: \"dt-layout-full\",\n    },\n    length: {\n      container: \"dt-length\",\n      select: \"dt-input\",\n    },\n    order: {\n      canAsc: \"dt-orderable-asc\",\n      canDesc: \"dt-orderable-desc\",\n      isAsc: \"dt-ordering-asc\",\n      isDesc: \"dt-ordering-desc\",\n      none: \"dt-orderable-none\",\n      position: \"sorting_\",\n    },\n    processing: {\n      container: \"dt-processing\",\n    },\n    scrolling: {\n      body: \"dt-scroll-body\",\n      container: \"dt-scroll\",\n      footer: {\n        self: \"dt-scroll-foot\",\n        inner: \"dt-scroll-footInner\",\n      },\n      header: {\n        self: \"dt-scroll-head\",\n        inner: \"dt-scroll-headInner\",\n      },\n    },\n    search: {\n      container: \"dt-search\",\n      input: \"dt-input\",\n    },\n    table: \"dataTable\",\n    tbody: {\n      cell: \"\",\n      row: \"\",\n    },\n    thead: {\n      cell: \"\",\n      row: \"\",\n    },\n    tfoot: {\n      cell: \"\",\n      row: \"\",\n    },\n    paging: {\n      active: \"current\",\n      button: \"dt-paging-button\",\n      container: \"dt-paging\",\n      disabled: \"disabled\",\n    },\n  });\n\n  /*\n   * It is useful to have variables which are scoped locally so only the\n   * DataTables functions can access them and they don't leak into global space.\n   * At the same time these functions are often useful over multiple files in the\n   * core and API, so we list, or at least document, all variables which are used\n   * by DataTables as private variables here. This also ensures that there is no\n   * clashing of variable names and that they can easily referenced for reuse.\n   */\n\n  // Defined else where\n  //  _selector_run\n  //  _selector_opts\n  //  _selector_row_indexes\n\n  var _ext; // DataTable.ext\n  var _Api; // DataTable.Api\n  var _api_register; // DataTable.Api.register\n  var _api_registerPlural; // DataTable.Api.registerPlural\n\n  var _re_dic = {};\n  var _re_new_lines = /[\\r\\n\\u2028]/g;\n  var _re_html = /<([^>]*>)/g;\n  var _max_str_len = Math.pow(2, 28);\n\n  // This is not strict ISO8601 - Date.parse() is quite lax, although\n  // implementations differ between browsers.\n  var _re_date =\n    /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/;\n\n  // Escape regular expression special characters\n  var _re_escape_regex = new RegExp(\n    \"(\\\\\" +\n      [\n        \"/\",\n        \".\",\n        \"*\",\n        \"+\",\n        \"?\",\n        \"|\",\n        \"(\",\n        \")\",\n        \"[\",\n        \"]\",\n        \"{\",\n        \"}\",\n        \"\\\\\",\n        \"$\",\n        \"^\",\n        \"-\",\n      ].join(\"|\\\\\") +\n      \")\",\n    \"g\"\n  );\n\n  // https://en.wikipedia.org/wiki/Foreign_exchange_market\n  // - \\u20BD - Russian ruble.\n  // - \\u20a9 - South Korean Won\n  // - \\u20BA - Turkish Lira\n  // - \\u20B9 - Indian Rupee\n  // - R - Brazil (R$) and South Africa\n  // - fr - Swiss Franc\n  // - kr - Swedish krona, Norwegian krone and Danish krone\n  // - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n  // - É - Bitcoin\n  // - Î - Ethereum\n  //   standards as thousands separators.\n  var _re_formatted_numeric =\n    /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\n\n  var _empty = function (d) {\n    return !d || d === true || d === \"-\" ? true : false;\n  };\n\n  var _intVal = function (s) {\n    var integer = parseInt(s, 10);\n    return !isNaN(integer) && isFinite(s) ? integer : null;\n  };\n\n  // Convert from a formatted number with characters other than `.` as the\n  // decimal place, to a Javascript number\n  var _numToDecimal = function (num, decimalPoint) {\n    // Cache created regular expressions for speed as this function is called often\n    if (!_re_dic[decimalPoint]) {\n      _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), \"g\");\n    }\n    return typeof num === \"string\" && decimalPoint !== \".\"\n      ? num.replace(/\\./g, \"\").replace(_re_dic[decimalPoint], \".\")\n      : num;\n  };\n\n  var _isNumber = function (d, decimalPoint, formatted, allowEmpty) {\n    var type = typeof d;\n    var strType = type === \"string\";\n\n    if (type === \"number\" || type === \"bigint\") {\n      return true;\n    }\n\n    // If empty return immediately so there must be a number if it is a\n    // formatted string (this stops the string \"k\", or \"kr\", etc being detected\n    // as a formatted number for currency\n    if (allowEmpty && _empty(d)) {\n      return true;\n    }\n\n    if (decimalPoint && strType) {\n      d = _numToDecimal(d, decimalPoint);\n    }\n\n    if (formatted && strType) {\n      d = d.replace(_re_formatted_numeric, \"\");\n    }\n\n    return !isNaN(parseFloat(d)) && isFinite(d);\n  };\n\n  // A string without HTML in it can be considered to be HTML still\n  var _isHtml = function (d) {\n    return _empty(d) || typeof d === \"string\";\n  };\n\n  // Is a string a number surrounded by HTML?\n  var _htmlNumeric = function (d, decimalPoint, formatted, allowEmpty) {\n    if (allowEmpty && _empty(d)) {\n      return true;\n    }\n\n    // input and select strings mean that this isn't just a number\n    if (typeof d === \"string\" && d.match(/<(input|select)/i)) {\n      return null;\n    }\n\n    var html = _isHtml(d);\n    return !html\n      ? null\n      : _isNumber(_stripHtml(d), decimalPoint, formatted, allowEmpty)\n      ? true\n      : null;\n  };\n\n  var _pluck = function (a, prop, prop2) {\n    var out = [];\n    var i = 0,\n      ien = a.length;\n\n    // Could have the test in the loop for slightly smaller code, but speed\n    // is essential here\n    if (prop2 !== undefined) {\n      for (; i < ien; i++) {\n        if (a[i] && a[i][prop]) {\n          out.push(a[i][prop][prop2]);\n        }\n      }\n    } else {\n      for (; i < ien; i++) {\n        if (a[i]) {\n          out.push(a[i][prop]);\n        }\n      }\n    }\n\n    return out;\n  };\n\n  // Basically the same as _pluck, but rather than looping over `a` we use `order`\n  // as the indexes to pick from `a`\n  var _pluck_order = function (a, order, prop, prop2) {\n    var out = [];\n    var i = 0,\n      ien = order.length;\n\n    // Could have the test in the loop for slightly smaller code, but speed\n    // is essential here\n    if (prop2 !== undefined) {\n      for (; i < ien; i++) {\n        if (a[order[i]][prop]) {\n          out.push(a[order[i]][prop][prop2]);\n        }\n      }\n    } else {\n      for (; i < ien; i++) {\n        if (a[order[i]]) {\n          out.push(a[order[i]][prop]);\n        }\n      }\n    }\n\n    return out;\n  };\n\n  var _range = function (len, start) {\n    var out = [];\n    var end;\n\n    if (start === undefined) {\n      start = 0;\n      end = len;\n    } else {\n      end = start;\n      start = len;\n    }\n\n    for (var i = start; i < end; i++) {\n      out.push(i);\n    }\n\n    return out;\n  };\n\n  var _removeEmpty = function (a) {\n    var out = [];\n\n    for (var i = 0, ien = a.length; i < ien; i++) {\n      if (a[i]) {\n        // careful - will remove all falsy values!\n        out.push(a[i]);\n      }\n    }\n\n    return out;\n  };\n\n  // Replaceable function in api.util\n  var _stripHtml = function (input) {\n    if (!input || typeof input !== \"string\") {\n      return input;\n    }\n\n    // Irrelevant check to workaround CodeQL's false positive on the regex\n    if (input.length > _max_str_len) {\n      throw new Error(\"Exceeded max str len\");\n    }\n\n    var previous;\n\n    input = input.replace(_re_html, \"\"); // Complete tags\n\n    // Safety for incomplete script tag - use do / while to ensure that\n    // we get all instances\n    do {\n      previous = input;\n      input = input.replace(/<script/i, \"\");\n    } while (input !== previous);\n\n    return previous;\n  };\n\n  // Replaceable function in api.util\n  var _escapeHtml = function (d) {\n    if (Array.isArray(d)) {\n      d = d.join(\",\");\n    }\n\n    return typeof d === \"string\"\n      ? d\n          .replace(/&/g, \"&amp;\")\n          .replace(/</g, \"&lt;\")\n          .replace(/>/g, \"&gt;\")\n          .replace(/\"/g, \"&quot;\")\n      : d;\n  };\n\n  // Remove diacritics from a string by decomposing it and then removing\n  // non-ascii characters\n  var _normalize = function (str, both) {\n    if (typeof str !== \"string\") {\n      return str;\n    }\n\n    // It is faster to just run `normalize` than it is to check if\n    // we need to with a regex!\n    var res = str.normalize(\"NFD\");\n\n    // Equally, here we check if a regex is needed or not\n    return res.length !== str.length\n      ? (both === true ? str + \" \" : \"\") + res.replace(/[\\u0300-\\u036f]/g, \"\")\n      : res;\n  };\n\n  /**\n   * Determine if all values in the array are unique. This means we can short\n   * cut the _unique method at the cost of a single loop. A sorted array is used\n   * to easily check the values.\n   *\n   * @param  {array} src Source array\n   * @return {boolean} true if all unique, false otherwise\n   * @ignore\n   */\n  var _areAllUnique = function (src) {\n    if (src.length < 2) {\n      return true;\n    }\n\n    var sorted = src.slice().sort();\n    var last = sorted[0];\n\n    for (var i = 1, ien = sorted.length; i < ien; i++) {\n      if (sorted[i] === last) {\n        return false;\n      }\n\n      last = sorted[i];\n    }\n\n    return true;\n  };\n\n  /**\n   * Find the unique elements in a source array.\n   *\n   * @param  {array} src Source array\n   * @return {array} Array of unique items\n   * @ignore\n   */\n  var _unique = function (src) {\n    if (Array.from && Set) {\n      return Array.from(new Set(src));\n    }\n\n    if (_areAllUnique(src)) {\n      return src.slice();\n    }\n\n    // A faster unique method is to use object keys to identify used values,\n    // but this doesn't work with arrays or objects, which we must also\n    // consider. See jsperf.app/compare-array-unique-versions/4 for more\n    // information.\n    var out = [],\n      val,\n      i,\n      ien = src.length,\n      j,\n      k = 0;\n\n    again: for (i = 0; i < ien; i++) {\n      val = src[i];\n\n      for (j = 0; j < k; j++) {\n        if (out[j] === val) {\n          continue again;\n        }\n      }\n\n      out.push(val);\n      k++;\n    }\n\n    return out;\n  };\n\n  // Surprisingly this is faster than [].concat.apply\n  // https://jsperf.com/flatten-an-array-loop-vs-reduce/2\n  var _flatten = function (out, val) {\n    if (Array.isArray(val)) {\n      for (var i = 0; i < val.length; i++) {\n        _flatten(out, val[i]);\n      }\n    } else {\n      out.push(val);\n    }\n\n    return out;\n  };\n\n  // Similar to jQuery's addClass, but use classList.add\n  function _addClass(el, name) {\n    if (name) {\n      name.split(\" \").forEach(function (n) {\n        if (n) {\n          // `add` does deduplication, so no need to check `contains`\n          el.classList.add(n);\n        }\n      });\n    }\n  }\n\n  /**\n   * DataTables utility methods\n   *\n   * This namespace provides helper methods that DataTables uses internally to\n   * create a DataTable, but which are not exclusively used only for DataTables.\n   * These methods can be used by extension authors to save the duplication of\n   * code.\n   *\n   *  @namespace\n   */\n  DataTable.util = {\n    /**\n     * Return a string with diacritic characters decomposed\n     * @param {*} mixed Function or string to normalize\n     * @param {*} both Return original string and the normalized string\n     * @returns String or undefined\n     */\n    diacritics: function (mixed, both) {\n      var type = typeof mixed;\n\n      if (type !== \"function\") {\n        return _normalize(mixed, both);\n      }\n      _normalize = mixed;\n    },\n\n    /**\n     * Debounce a function\n     *\n     * @param {function} fn Function to be called\n     * @param {integer} freq Call frequency in mS\n     * @return {function} Wrapped function\n     */\n    debounce: function (fn, timeout) {\n      var timer;\n\n      return function () {\n        var that = this;\n        var args = arguments;\n\n        clearTimeout(timer);\n\n        timer = setTimeout(function () {\n          fn.apply(that, args);\n        }, timeout || 250);\n      };\n    },\n\n    /**\n     * Throttle the calls to a function. Arguments and context are maintained\n     * for the throttled function.\n     *\n     * @param {function} fn Function to be called\n     * @param {integer} freq Call frequency in mS\n     * @return {function} Wrapped function\n     */\n    throttle: function (fn, freq) {\n      var frequency = freq !== undefined ? freq : 200,\n        last,\n        timer;\n\n      return function () {\n        var that = this,\n          now = +new Date(),\n          args = arguments;\n\n        if (last && now < last + frequency) {\n          clearTimeout(timer);\n\n          timer = setTimeout(function () {\n            last = undefined;\n            fn.apply(that, args);\n          }, frequency);\n        } else {\n          last = now;\n          fn.apply(that, args);\n        }\n      };\n    },\n\n    /**\n     * Escape a string such that it can be used in a regular expression\n     *\n     *  @param {string} val string to escape\n     *  @returns {string} escaped string\n     */\n    escapeRegex: function (val) {\n      return val.replace(_re_escape_regex, \"\\\\$1\");\n    },\n\n    /**\n     * Create a function that will write to a nested object or array\n     * @param {*} source JSON notation string\n     * @returns Write function\n     */\n    set: function (source) {\n      if ($.isPlainObject(source)) {\n        /* Unlike get, only the underscore (global) option is used for for\n         * setting data since we don't know the type here. This is why an object\n         * option is not documented for `mData` (which is read/write), but it is\n         * for `mRender` which is read only.\n         */\n        return DataTable.util.set(source._);\n      } else if (source === null) {\n        // Nothing to do when the data source is null\n        return function () {};\n      } else if (typeof source === \"function\") {\n        return function (data, val, meta) {\n          source(data, \"set\", val, meta);\n        };\n      } else if (\n        typeof source === \"string\" &&\n        (source.indexOf(\".\") !== -1 ||\n          source.indexOf(\"[\") !== -1 ||\n          source.indexOf(\"(\") !== -1)\n      ) {\n        // Like the get, we need to get data from a nested object\n        var setData = function (data, val, src) {\n          var a = _fnSplitObjNotation(src),\n            b;\n          var aLast = a[a.length - 1];\n          var arrayNotation, funcNotation, o, innerSrc;\n\n          for (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n            // Protect against prototype pollution\n            if (a[i] === \"__proto__\" || a[i] === \"constructor\") {\n              throw new Error(\"Cannot set prototype values\");\n            }\n\n            // Check if we are dealing with an array notation request\n            arrayNotation = a[i].match(__reArray);\n            funcNotation = a[i].match(__reFn);\n\n            if (arrayNotation) {\n              a[i] = a[i].replace(__reArray, \"\");\n              data[a[i]] = [];\n\n              // Get the remainder of the nested object to set so we can recurse\n              b = a.slice();\n              b.splice(0, i + 1);\n              innerSrc = b.join(\".\");\n\n              // Traverse each entry in the array setting the properties requested\n              if (Array.isArray(val)) {\n                for (var j = 0, jLen = val.length; j < jLen; j++) {\n                  o = {};\n                  setData(o, val[j], innerSrc);\n                  data[a[i]].push(o);\n                }\n              } else {\n                // We've been asked to save data to an array, but it\n                // isn't array data to be saved. Best that can be done\n                // is to just save the value.\n                data[a[i]] = val;\n              }\n\n              // The inner call to setData has already traversed through the remainder\n              // of the source and has set the data, thus we can exit here\n              return;\n            } else if (funcNotation) {\n              // Function call\n              a[i] = a[i].replace(__reFn, \"\");\n              data = data[a[i]](val);\n            }\n\n            // If the nested object doesn't currently exist - since we are\n            // trying to set the value - create it\n            if (data[a[i]] === null || data[a[i]] === undefined) {\n              data[a[i]] = {};\n            }\n            data = data[a[i]];\n          }\n\n          // Last item in the input - i.e, the actual set\n          if (aLast.match(__reFn)) {\n            // Function call\n            data = data[aLast.replace(__reFn, \"\")](val);\n          } else {\n            // If array notation is used, we just want to strip it and use the property name\n            // and assign the value. If it isn't used, then we get the result we want anyway\n            data[aLast.replace(__reArray, \"\")] = val;\n          }\n        };\n\n        return function (data, val) {\n          // meta is also passed in, but not used\n          return setData(data, val, source);\n        };\n      } else {\n        // Array or flat object mapping\n        return function (data, val) {\n          // meta is also passed in, but not used\n          data[source] = val;\n        };\n      }\n    },\n\n    /**\n     * Create a function that will read nested objects from arrays, based on JSON notation\n     * @param {*} source JSON notation string\n     * @returns Value read\n     */\n    get: function (source) {\n      if ($.isPlainObject(source)) {\n        // Build an object of get functions, and wrap them in a single call\n        var o = {};\n        $.each(source, function (key, val) {\n          if (val) {\n            o[key] = DataTable.util.get(val);\n          }\n        });\n\n        return function (data, type, row, meta) {\n          var t = o[type] || o._;\n          return t !== undefined ? t(data, type, row, meta) : data;\n        };\n      } else if (source === null) {\n        // Give an empty string for rendering / sorting etc\n        return function (data) {\n          // type, row and meta also passed, but not used\n          return data;\n        };\n      } else if (typeof source === \"function\") {\n        return function (data, type, row, meta) {\n          return source(data, type, row, meta);\n        };\n      } else if (\n        typeof source === \"string\" &&\n        (source.indexOf(\".\") !== -1 ||\n          source.indexOf(\"[\") !== -1 ||\n          source.indexOf(\"(\") !== -1)\n      ) {\n        /* If there is a . in the source string then the data source is in a\n         * nested object so we loop over the data for each level to get the next\n         * level down. On each loop we test for undefined, and if found immediately\n         * return. This allows entire objects to be missing and sDefaultContent to\n         * be used if defined, rather than throwing an error\n         */\n        var fetchData = function (data, type, src) {\n          var arrayNotation, funcNotation, out, innerSrc;\n\n          if (src !== \"\") {\n            var a = _fnSplitObjNotation(src);\n\n            for (var i = 0, iLen = a.length; i < iLen; i++) {\n              // Check if we are dealing with special notation\n              arrayNotation = a[i].match(__reArray);\n              funcNotation = a[i].match(__reFn);\n\n              if (arrayNotation) {\n                // Array notation\n                a[i] = a[i].replace(__reArray, \"\");\n\n                // Condition allows simply [] to be passed in\n                if (a[i] !== \"\") {\n                  data = data[a[i]];\n                }\n                out = [];\n\n                // Get the remainder of the nested object to get\n                a.splice(0, i + 1);\n                innerSrc = a.join(\".\");\n\n                // Traverse each entry in the array getting the properties requested\n                if (Array.isArray(data)) {\n                  for (var j = 0, jLen = data.length; j < jLen; j++) {\n                    out.push(fetchData(data[j], type, innerSrc));\n                  }\n                }\n\n                // If a string is given in between the array notation indicators, that\n                // is used to join the strings together, otherwise an array is returned\n                var join = arrayNotation[0].substring(\n                  1,\n                  arrayNotation[0].length - 1\n                );\n                data = join === \"\" ? out : out.join(join);\n\n                // The inner call to fetchData has already traversed through the remainder\n                // of the source requested, so we exit from the loop\n                break;\n              } else if (funcNotation) {\n                // Function call\n                a[i] = a[i].replace(__reFn, \"\");\n                data = data[a[i]]();\n                continue;\n              }\n\n              if (data === null || data[a[i]] === null) {\n                return null;\n              } else if (data === undefined || data[a[i]] === undefined) {\n                return undefined;\n              }\n\n              data = data[a[i]];\n            }\n          }\n\n          return data;\n        };\n\n        return function (data, type) {\n          // row and meta also passed, but not used\n          return fetchData(data, type, source);\n        };\n      } else {\n        // Array or flat object mapping\n        return function (data) {\n          // row and meta also passed, but not used\n          return data[source];\n        };\n      }\n    },\n\n    stripHtml: function (mixed) {\n      var type = typeof mixed;\n\n      if (type === \"function\") {\n        _stripHtml = mixed;\n        return;\n      } else if (type === \"string\") {\n        return _stripHtml(mixed);\n      }\n      return mixed;\n    },\n\n    escapeHtml: function (mixed) {\n      var type = typeof mixed;\n\n      if (type === \"function\") {\n        _escapeHtml = mixed;\n        return;\n      } else if (type === \"string\" || Array.isArray(mixed)) {\n        return _escapeHtml(mixed);\n      }\n      return mixed;\n    },\n\n    unique: _unique,\n  };\n\n  /**\n   * Create a mapping object that allows camel case parameters to be looked up\n   * for their Hungarian counterparts. The mapping is stored in a private\n   * parameter called `_hungarianMap` which can be accessed on the source object.\n   *  @param {object} o\n   *  @memberof DataTable#oApi\n   */\n  function _fnHungarianMap(o) {\n    var hungarian = \"a aa ai ao as b fn i m o s \",\n      match,\n      newKey,\n      map = {};\n\n    $.each(o, function (key) {\n      match = key.match(/^([^A-Z]+?)([A-Z])/);\n\n      if (match && hungarian.indexOf(match[1] + \" \") !== -1) {\n        newKey = key.replace(match[0], match[2].toLowerCase());\n        map[newKey] = key;\n\n        if (match[1] === \"o\") {\n          _fnHungarianMap(o[key]);\n        }\n      }\n    });\n\n    o._hungarianMap = map;\n  }\n\n  /**\n   * Convert from camel case parameters to Hungarian, based on a Hungarian map\n   * created by _fnHungarianMap.\n   *  @param {object} src The model object which holds all parameters that can be\n   *    mapped.\n   *  @param {object} user The object to convert from camel case to Hungarian.\n   *  @param {boolean} force When set to `true`, properties which already have a\n   *    Hungarian value in the `user` object will be overwritten. Otherwise they\n   *    won't be.\n   *  @memberof DataTable#oApi\n   */\n  function _fnCamelToHungarian(src, user, force) {\n    if (!src._hungarianMap) {\n      _fnHungarianMap(src);\n    }\n\n    var hungarianKey;\n\n    $.each(user, function (key) {\n      hungarianKey = src._hungarianMap[key];\n\n      if (\n        hungarianKey !== undefined &&\n        (force || user[hungarianKey] === undefined)\n      ) {\n        // For objects, we need to buzz down into the object to copy parameters\n        if (hungarianKey.charAt(0) === \"o\") {\n          // Copy the camelCase options over to the hungarian\n          if (!user[hungarianKey]) {\n            user[hungarianKey] = {};\n          }\n          $.extend(true, user[hungarianKey], user[key]);\n\n          _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n        } else {\n          user[hungarianKey] = user[key];\n        }\n      }\n    });\n  }\n\n  /**\n   * Map one parameter onto another\n   *  @param {object} o Object to map\n   *  @param {*} knew The new parameter name\n   *  @param {*} old The old parameter name\n   */\n  var _fnCompatMap = function (o, knew, old) {\n    if (o[knew] !== undefined) {\n      o[old] = o[knew];\n    }\n  };\n\n  /**\n   * Provide backwards compatibility for the main DT options. Note that the new\n   * options are mapped onto the old parameters, so this is an external interface\n   * change only.\n   *  @param {object} init Object to map\n   */\n  function _fnCompatOpts(init) {\n    _fnCompatMap(init, \"ordering\", \"bSort\");\n    _fnCompatMap(init, \"orderMulti\", \"bSortMulti\");\n    _fnCompatMap(init, \"orderClasses\", \"bSortClasses\");\n    _fnCompatMap(init, \"orderCellsTop\", \"bSortCellsTop\");\n    _fnCompatMap(init, \"order\", \"aaSorting\");\n    _fnCompatMap(init, \"orderFixed\", \"aaSortingFixed\");\n    _fnCompatMap(init, \"paging\", \"bPaginate\");\n    _fnCompatMap(init, \"pagingType\", \"sPaginationType\");\n    _fnCompatMap(init, \"pageLength\", \"iDisplayLength\");\n    _fnCompatMap(init, \"searching\", \"bFilter\");\n\n    // Boolean initialisation of x-scrolling\n    if (typeof init.sScrollX === \"boolean\") {\n      init.sScrollX = init.sScrollX ? \"100%\" : \"\";\n    }\n    if (typeof init.scrollX === \"boolean\") {\n      init.scrollX = init.scrollX ? \"100%\" : \"\";\n    }\n\n    // Column search objects are in an array, so it needs to be converted\n    // element by element\n    var searchCols = init.aoSearchCols;\n\n    if (searchCols) {\n      for (var i = 0, ien = searchCols.length; i < ien; i++) {\n        if (searchCols[i]) {\n          _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n        }\n      }\n    }\n\n    // Enable search delay if server-side processing is enabled\n    if (init.serverSide && !init.searchDelay) {\n      init.searchDelay = 400;\n    }\n  }\n\n  /**\n   * Provide backwards compatibility for column options. Note that the new options\n   * are mapped onto the old parameters, so this is an external interface change\n   * only.\n   *  @param {object} init Object to map\n   */\n  function _fnCompatCols(init) {\n    _fnCompatMap(init, \"orderable\", \"bSortable\");\n    _fnCompatMap(init, \"orderData\", \"aDataSort\");\n    _fnCompatMap(init, \"orderSequence\", \"asSorting\");\n    _fnCompatMap(init, \"orderDataType\", \"sortDataType\");\n\n    // orderData can be given as an integer\n    var dataSort = init.aDataSort;\n    if (typeof dataSort === \"number\" && !Array.isArray(dataSort)) {\n      init.aDataSort = [dataSort];\n    }\n  }\n\n  /**\n   * Browser feature detection for capabilities, quirks\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnBrowserDetect(settings) {\n    // We don't need to do this every time DataTables is constructed, the values\n    // calculated are specific to the browser and OS configuration which we\n    // don't expect to change between initialisations\n    if (!DataTable.__browser) {\n      var browser = {};\n      DataTable.__browser = browser;\n\n      // Scrolling feature / quirks detection\n      var n = $(\"<div/>\")\n        .css({\n          position: \"fixed\",\n          top: 0,\n          left: -1 * window.pageXOffset, // allow for scrolling\n          height: 1,\n          width: 1,\n          overflow: \"hidden\",\n        })\n        .append(\n          $(\"<div/>\")\n            .css({\n              position: \"absolute\",\n              top: 1,\n              left: 1,\n              width: 100,\n              overflow: \"scroll\",\n            })\n            .append(\n              $(\"<div/>\").css({\n                width: \"100%\",\n                height: 10,\n              })\n            )\n        )\n        .appendTo(\"body\");\n\n      var outer = n.children();\n      var inner = outer.children();\n\n      // Get scrollbar width\n      browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n      // In rtl text layout, some browsers (most, but not all) will place the\n      // scrollbar on the left, rather than the right.\n      browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;\n\n      n.remove();\n    }\n\n    $.extend(settings.oBrowser, DataTable.__browser);\n    settings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n  }\n\n  /**\n   * Add a column to the list used for the table with default values\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnAddColumn(oSettings) {\n    // Add column to aoColumns array\n    var oDefaults = DataTable.defaults.column;\n    var iCol = oSettings.aoColumns.length;\n    var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n      aDataSort: oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n      mData: oDefaults.mData ? oDefaults.mData : iCol,\n      idx: iCol,\n      searchFixed: {},\n      colEl: $(\"<col>\").attr(\"data-dt-column\", iCol),\n    });\n    oSettings.aoColumns.push(oCol);\n\n    // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n    // passed into extend can be undefined. This allows the user to give a default\n    // with only some of the parameters defined, and also not give a default\n    var searchCols = oSettings.aoPreSearchCols;\n    searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]);\n  }\n\n  /**\n   * Apply options for a column\n   *  @param {object} oSettings dataTables settings object\n   *  @param {int} iCol column index to consider\n   *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n   *  @memberof DataTable#oApi\n   */\n  function _fnColumnOptions(oSettings, iCol, oOptions) {\n    var oCol = oSettings.aoColumns[iCol];\n\n    /* User specified column options */\n    if (oOptions !== undefined && oOptions !== null) {\n      // Backwards compatibility\n      _fnCompatCols(oOptions);\n\n      // Map camel case parameters to their Hungarian counterparts\n      _fnCamelToHungarian(DataTable.defaults.column, oOptions, true);\n\n      /* Backwards compatibility for mDataProp */\n      if (oOptions.mDataProp !== undefined && !oOptions.mData) {\n        oOptions.mData = oOptions.mDataProp;\n      }\n\n      if (oOptions.sType) {\n        oCol._sManualType = oOptions.sType;\n      }\n\n      // `class` is a reserved word in Javascript, so we need to provide\n      // the ability to use a valid name for the camel case input\n      if (oOptions.className && !oOptions.sClass) {\n        oOptions.sClass = oOptions.className;\n      }\n\n      var origClass = oCol.sClass;\n\n      $.extend(oCol, oOptions);\n      _fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\");\n\n      // Merge class from previously defined classes with this one, rather than just\n      // overwriting it in the extend above\n      if (origClass !== oCol.sClass) {\n        oCol.sClass = origClass + \" \" + oCol.sClass;\n      }\n\n      /* iDataSort to be applied (backwards compatibility), but aDataSort will take\n       * priority if defined\n       */\n      if (oOptions.iDataSort !== undefined) {\n        oCol.aDataSort = [oOptions.iDataSort];\n      }\n      _fnMap(oCol, oOptions, \"aDataSort\");\n    }\n\n    /* Cache the data get and set functions for speed */\n    var mDataSrc = oCol.mData;\n    var mData = _fnGetObjectDataFn(mDataSrc);\n\n    // The `render` option can be given as an array to access the helper rendering methods.\n    // The first element is the rendering method to use, the rest are the parameters to pass\n    if (oCol.mRender && Array.isArray(oCol.mRender)) {\n      var copy = oCol.mRender.slice();\n      var name = copy.shift();\n\n      oCol.mRender = DataTable.render[name].apply(window, copy);\n    }\n\n    oCol._render = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n\n    var attrTest = function (src) {\n      return typeof src === \"string\" && src.indexOf(\"@\") !== -1;\n    };\n    oCol._bAttrSrc =\n      $.isPlainObject(mDataSrc) &&\n      (attrTest(mDataSrc.sort) ||\n        attrTest(mDataSrc.type) ||\n        attrTest(mDataSrc.filter));\n    oCol._setter = null;\n\n    oCol.fnGetData = function (rowData, type, meta) {\n      var innerData = mData(rowData, type, undefined, meta);\n\n      return oCol._render && type\n        ? oCol._render(innerData, type, rowData, meta)\n        : innerData;\n    };\n    oCol.fnSetData = function (rowData, val, meta) {\n      return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n    };\n\n    // Indicate if DataTables should read DOM data as an object or array\n    // Used in _fnGetRowElements\n    if (typeof mDataSrc !== \"number\" && !oCol._isArrayHost) {\n      oSettings._rowReadObject = true;\n    }\n\n    /* Feature sorting overrides column specific when off */\n    if (!oSettings.oFeatures.bSort) {\n      oCol.bSortable = false;\n    }\n  }\n\n  /**\n   * Adjust the table column widths for new data. Note: you would probably want to\n   * do a redraw after calling this function!\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnAdjustColumnSizing(settings) {\n    _fnCalculateColumnWidths(settings);\n    _fnColumnSizes(settings);\n\n    var scroll = settings.oScroll;\n    if (scroll.sY !== \"\" || scroll.sX !== \"\") {\n      _fnScrollDraw(settings);\n    }\n\n    _fnCallbackFire(settings, null, \"column-sizing\", [settings]);\n  }\n\n  /**\n   * Apply column sizes\n   *\n   * @param {*} settings DataTables settings object\n   */\n  function _fnColumnSizes(settings) {\n    var cols = settings.aoColumns;\n\n    for (var i = 0; i < cols.length; i++) {\n      var width = _fnColumnsSumWidth(settings, [i], false, false);\n\n      cols[i].colEl.css(\"width\", width);\n    }\n  }\n\n  /**\n   * Convert the index of a visible column to the index in the data array (take account\n   * of hidden columns)\n   *  @param {object} oSettings dataTables settings object\n   *  @param {int} iMatch Visible column index to lookup\n   *  @returns {int} i the data index\n   *  @memberof DataTable#oApi\n   */\n  function _fnVisibleToColumnIndex(oSettings, iMatch) {\n    var aiVis = _fnGetColumns(oSettings, \"bVisible\");\n\n    return typeof aiVis[iMatch] === \"number\" ? aiVis[iMatch] : null;\n  }\n\n  /**\n   * Convert the index of an index in the data array and convert it to the visible\n   *   column index (take account of hidden columns)\n   *  @param {int} iMatch Column index to lookup\n   *  @param {object} oSettings dataTables settings object\n   *  @returns {int} i the data index\n   *  @memberof DataTable#oApi\n   */\n  function _fnColumnIndexToVisible(oSettings, iMatch) {\n    var aiVis = _fnGetColumns(oSettings, \"bVisible\");\n    var iPos = aiVis.indexOf(iMatch);\n\n    return iPos !== -1 ? iPos : null;\n  }\n\n  /**\n   * Get the number of visible columns\n   *  @param {object} oSettings dataTables settings object\n   *  @returns {int} i the number of visible columns\n   *  @memberof DataTable#oApi\n   */\n  function _fnVisbleColumns(settings) {\n    var layout = settings.aoHeader;\n    var columns = settings.aoColumns;\n    var vis = 0;\n\n    if (layout.length) {\n      for (var i = 0, ien = layout[0].length; i < ien; i++) {\n        if (\n          columns[i].bVisible &&\n          $(layout[0][i].cell).css(\"display\") !== \"none\"\n        ) {\n          vis++;\n        }\n      }\n    }\n\n    return vis;\n  }\n\n  /**\n   * Get an array of column indexes that match a given property\n   *  @param {object} oSettings dataTables settings object\n   *  @param {string} sParam Parameter in aoColumns to look for - typically\n   *    bVisible or bSearchable\n   *  @returns {array} Array of indexes with matched properties\n   *  @memberof DataTable#oApi\n   */\n  function _fnGetColumns(oSettings, sParam) {\n    var a = [];\n\n    oSettings.aoColumns.map(function (val, i) {\n      if (val[sParam]) {\n        a.push(i);\n      }\n    });\n\n    return a;\n  }\n\n  /**\n   * Allow the result from a type detection function to be `true` while\n   * translating that into a string. Old type detection functions will\n   * return the type name if it passes. An obect store would be better,\n   * but not backwards compatible.\n   *\n   * @param {*} typeDetect Object or function for type detection\n   * @param {*} res Result from the type detection function\n   * @returns Type name or false\n   */\n  function _typeResult(typeDetect, res) {\n    return res === true ? typeDetect.name : res;\n  }\n\n  /**\n   * Calculate the 'type' of a column\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnColumnTypes(settings) {\n    var columns = settings.aoColumns;\n    var data = settings.aoData;\n    var types = DataTable.ext.type.detect;\n    var i, ien, j, jen, k, ken;\n    var col, detectedType, cache;\n\n    // If SSP then we don't have the full data set, so any type detection would be\n    // unreliable and error prone\n    if (_fnDataSource(settings) === \"ssp\") {\n      return;\n    }\n\n    // For each column, spin over the data type detection functions, seeing if one matches\n    for (i = 0, ien = columns.length; i < ien; i++) {\n      col = columns[i];\n      cache = [];\n\n      if (!col.sType && col._sManualType) {\n        col.sType = col._sManualType;\n      } else if (!col.sType) {\n        for (j = 0, jen = types.length; j < jen; j++) {\n          var typeDetect = types[j];\n\n          // There can be either one, or three type detection functions\n          var oneOf = typeDetect.oneOf;\n          var allOf = typeDetect.allOf || typeDetect;\n          var init = typeDetect.init;\n          var one = false;\n\n          detectedType = null;\n\n          // Fast detect based on column assignment\n          if (init) {\n            detectedType = _typeResult(typeDetect, init(settings, col, i));\n\n            if (detectedType) {\n              col.sType = detectedType;\n              break;\n            }\n          }\n\n          for (k = 0, ken = data.length; k < ken; k++) {\n            if (!data[k]) {\n              continue;\n            }\n\n            // Use a cache array so we only need to get the type data\n            // from the formatter once (when using multiple detectors)\n            if (cache[k] === undefined) {\n              cache[k] = _fnGetCellData(settings, k, i, \"type\");\n            }\n\n            // Only one data point in the column needs to match this function\n            if (oneOf && !one) {\n              one = _typeResult(typeDetect, oneOf(cache[k], settings));\n            }\n\n            // All data points need to match this function\n            detectedType = _typeResult(typeDetect, allOf(cache[k], settings));\n\n            // If null, then this type can't apply to this column, so\n            // rather than testing all cells, break out. There is an\n            // exception for the last type which is `html`. We need to\n            // scan all rows since it is possible to mix string and HTML\n            // types\n            if (!detectedType && j !== types.length - 3) {\n              break;\n            }\n\n            // Only a single match is needed for html type since it is\n            // bottom of the pile and very similar to string - but it\n            // must not be empty\n            if (detectedType === \"html\" && !_empty(cache[k])) {\n              break;\n            }\n          }\n\n          // Type is valid for all data points in the column - use this\n          // type\n          if ((oneOf && one && detectedType) || (!oneOf && detectedType)) {\n            col.sType = detectedType;\n            break;\n          }\n        }\n\n        // Fall back - if no type was detected, always use string\n        if (!col.sType) {\n          col.sType = \"string\";\n        }\n      }\n\n      // Set class names for header / footer for auto type classes\n      var autoClass = _ext.type.className[col.sType];\n\n      if (autoClass) {\n        _columnAutoClass(settings.aoHeader, i, autoClass);\n        _columnAutoClass(settings.aoFooter, i, autoClass);\n      }\n\n      var renderer = _ext.type.render[col.sType];\n\n      // This can only happen once! There is no way to remove\n      // a renderer. After the first time the renderer has\n      // already been set so createTr will run the renderer itself.\n      if (renderer && !col._render) {\n        col._render = DataTable.util.get(renderer);\n\n        _columnAutoRender(settings, i);\n      }\n    }\n  }\n\n  /**\n   * Apply an auto detected renderer to data which doesn't yet have\n   * a renderer\n   */\n  function _columnAutoRender(settings, colIdx) {\n    var data = settings.aoData;\n\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].nTr) {\n        // We have to update the display here since there is no\n        // invalidation check for the data\n        var display = _fnGetCellData(settings, i, colIdx, \"display\");\n\n        data[i].displayData[colIdx] = display;\n        _fnWriteCell(data[i].anCells[colIdx], display);\n\n        // No need to update sort / filter data since it has\n        // been invalidated and will be re-read with the\n        // renderer now applied\n      }\n    }\n  }\n\n  /**\n   * Apply a class name to a column's header cells\n   */\n  function _columnAutoClass(container, colIdx, className) {\n    container.forEach(function (row) {\n      if (row[colIdx] && row[colIdx].unique) {\n        _addClass(row[colIdx].cell, className);\n      }\n    });\n  }\n\n  /**\n   * Take the column definitions and static columns arrays and calculate how\n   * they relate to column indexes. The callback function will then apply the\n   * definition found for a column to a suitable configuration object.\n   *  @param {object} oSettings dataTables settings object\n   *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n   *  @param {array} aoCols The aoColumns array that defines columns individually\n   *  @param {array} headerLayout Layout for header as it was loaded\n   *  @param {function} fn Callback function - takes two parameters, the calculated\n   *    column index and the definition for that column.\n   *  @memberof DataTable#oApi\n   */\n  function _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, headerLayout, fn) {\n    var i, iLen, j, jLen, k, kLen, def;\n    var columns = oSettings.aoColumns;\n\n    if (aoCols) {\n      for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n        if (aoCols[i] && aoCols[i].name) {\n          columns[i].sName = aoCols[i].name;\n        }\n      }\n    }\n\n    // Column definitions with aTargets\n    if (aoColDefs) {\n      /* Loop over the definitions array - loop in reverse so first instance has priority */\n      for (i = aoColDefs.length - 1; i >= 0; i--) {\n        def = aoColDefs[i];\n\n        /* Each definition can target multiple columns, as it is an array */\n        var aTargets =\n          def.target !== undefined\n            ? def.target\n            : def.targets !== undefined\n            ? def.targets\n            : def.aTargets;\n\n        if (!Array.isArray(aTargets)) {\n          aTargets = [aTargets];\n        }\n\n        for (j = 0, jLen = aTargets.length; j < jLen; j++) {\n          var target = aTargets[j];\n\n          if (typeof target === \"number\" && target >= 0) {\n            /* Add columns that we don't yet know about */\n            while (columns.length <= target) {\n              _fnAddColumn(oSettings);\n            }\n\n            /* Integer, basic index */\n            fn(target, def);\n          } else if (typeof target === \"number\" && target < 0) {\n            /* Negative integer, right to left column counting */\n            fn(columns.length + target, def);\n          } else if (typeof target === \"string\") {\n            for (k = 0, kLen = columns.length; k < kLen; k++) {\n              if (target === \"_all\") {\n                // Apply to all columns\n                fn(k, def);\n              } else if (target.indexOf(\":name\") !== -1) {\n                // Column selector\n                if (columns[k].sName === target.replace(\":name\", \"\")) {\n                  fn(k, def);\n                }\n              } else {\n                // Cell selector\n                headerLayout.forEach(function (row) {\n                  if (row[k]) {\n                    var cell = $(row[k].cell);\n\n                    // Legacy support. Note that it means that we don't support\n                    // an element name selector only, since they are treated as\n                    // class names for 1.x compat.\n                    if (target.match(/^[a-z][\\w-]*$/i)) {\n                      target = \".\" + target;\n                    }\n\n                    if (cell.is(target)) {\n                      fn(k, def);\n                    }\n                  }\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Statically defined columns array\n    if (aoCols) {\n      for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n        fn(i, aoCols[i]);\n      }\n    }\n  }\n\n  /**\n   * Get the width for a given set of columns\n   *\n   * @param {*} settings DataTables settings object\n   * @param {*} targets Columns - comma separated string or array of numbers\n   * @param {*} original Use the original width (true) or calculated (false)\n   * @param {*} incVisible Include visible columns (true) or not (false)\n   * @returns Combined CSS value\n   */\n  function _fnColumnsSumWidth(settings, targets, original, incVisible) {\n    if (!Array.isArray(targets)) {\n      targets = _fnColumnsFromHeader(targets);\n    }\n\n    var sum = 0;\n    var unit;\n    var columns = settings.aoColumns;\n\n    for (var i = 0, ien = targets.length; i < ien; i++) {\n      var column = columns[targets[i]];\n      var definedWidth = original ? column.sWidthOrig : column.sWidth;\n\n      if (!incVisible && column.bVisible === false) {\n        continue;\n      }\n\n      if (definedWidth === null || definedWidth === undefined) {\n        return null; // can't determine a defined width - browser defined\n      } else if (typeof definedWidth === \"number\") {\n        unit = \"px\";\n        sum += definedWidth;\n      } else {\n        var matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\n\n        if (matched) {\n          sum += matched[1] * 1;\n          unit = matched.length === 3 ? matched[2] : \"px\";\n        }\n      }\n    }\n\n    return sum + unit;\n  }\n\n  function _fnColumnsFromHeader(cell) {\n    var attr = $(cell).closest(\"[data-dt-column]\").attr(\"data-dt-column\");\n\n    if (!attr) {\n      return [];\n    }\n\n    return attr.split(\",\").map(function (val) {\n      return val * 1;\n    });\n  }\n  /**\n   * Add a data array to the table, creating DOM node etc. This is the parallel to\n   * _fnGatherData, but for adding rows from a Javascript source, rather than a\n   * DOM source.\n   *  @param {object} settings dataTables settings object\n   *  @param {array} data data array to be added\n   *  @param {node} [tr] TR element to add to the table - optional. If not given,\n   *    DataTables will create a row automatically\n   *  @param {array} [tds] Array of TD|TH elements for the row - must be given\n   *    if nTr is.\n   *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n   *  @memberof DataTable#oApi\n   */\n  function _fnAddData(settings, dataIn, tr, tds) {\n    /* Create the object for storing information about this new row */\n    var rowIdx = settings.aoData.length;\n    var rowModel = $.extend(true, {}, DataTable.models.oRow, {\n      src: tr ? \"dom\" : \"data\",\n      idx: rowIdx,\n    });\n\n    rowModel._aData = dataIn;\n    settings.aoData.push(rowModel);\n\n    var columns = settings.aoColumns;\n\n    for (var i = 0, iLen = columns.length; i < iLen; i++) {\n      // Invalidate the column types as the new data needs to be revalidated\n      columns[i].sType = null;\n    }\n\n    /* Add to the display array */\n    settings.aiDisplayMaster.push(rowIdx);\n\n    var id = settings.rowIdFn(dataIn);\n    if (id !== undefined) {\n      settings.aIds[id] = rowModel;\n    }\n\n    /* Create the DOM information, or register it if already present */\n    if (tr || !settings.oFeatures.bDeferRender) {\n      _fnCreateTr(settings, rowIdx, tr, tds);\n    }\n\n    return rowIdx;\n  }\n\n  /**\n   * Add one or more TR elements to the table. Generally we'd expect to\n   * use this for reading data from a DOM sourced table, but it could be\n   * used for an TR element. Note that if a TR is given, it is used (i.e.\n   * it is not cloned).\n   *  @param {object} settings dataTables settings object\n   *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n   *  @returns {array} Array of indexes for the added rows\n   *  @memberof DataTable#oApi\n   */\n  function _fnAddTr(settings, trs) {\n    var row;\n\n    // Allow an individual node to be passed in\n    if (!(trs instanceof $)) {\n      trs = $(trs);\n    }\n\n    return trs.map(function (i, el) {\n      row = _fnGetRowElements(settings, el);\n      return _fnAddData(settings, row.data, el, row.cells);\n    });\n  }\n\n  /**\n   * Get the data for a given cell from the internal cache, taking into account data mapping\n   *  @param {object} settings dataTables settings object\n   *  @param {int} rowIdx aoData row id\n   *  @param {int} colIdx Column index\n   *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n   *  @returns {*} Cell data\n   *  @memberof DataTable#oApi\n   */\n  function _fnGetCellData(settings, rowIdx, colIdx, type) {\n    if (type === \"search\") {\n      type = \"filter\";\n    } else if (type === \"order\") {\n      type = \"sort\";\n    }\n\n    var row = settings.aoData[rowIdx];\n\n    if (!row) {\n      return undefined;\n    }\n\n    var draw = settings.iDraw;\n    var col = settings.aoColumns[colIdx];\n    var rowData = row._aData;\n    var defaultContent = col.sDefaultContent;\n    var cellData = col.fnGetData(rowData, type, {\n      settings: settings,\n      row: rowIdx,\n      col: colIdx,\n    });\n\n    // Allow for a node being returned for non-display types\n    if (\n      type !== \"display\" &&\n      cellData &&\n      typeof cellData === \"object\" &&\n      cellData.nodeName\n    ) {\n      cellData = cellData.innerHTML;\n    }\n\n    if (cellData === undefined) {\n      if (settings.iDrawError != draw && defaultContent === null) {\n        _fnLog(\n          settings,\n          0,\n          \"Requested unknown parameter \" +\n            (typeof col.mData == \"function\"\n              ? \"{function}\"\n              : \"'\" + col.mData + \"'\") +\n            \" for row \" +\n            rowIdx +\n            \", column \" +\n            colIdx,\n          4\n        );\n        settings.iDrawError = draw;\n      }\n      return defaultContent;\n    }\n\n    // When the data source is null and a specific data type is requested (i.e.\n    // not the original data), we can use default column data\n    if (\n      (cellData === rowData || cellData === null) &&\n      defaultContent !== null &&\n      type !== undefined\n    ) {\n      cellData = defaultContent;\n    } else if (typeof cellData === \"function\") {\n      // If the data source is a function, then we run it and use the return,\n      // executing in the scope of the data object (for instances)\n      return cellData.call(rowData);\n    }\n\n    if (cellData === null && type === \"display\") {\n      return \"\";\n    }\n\n    if (type === \"filter\") {\n      var fomatters = DataTable.ext.type.search;\n\n      if (fomatters[col.sType]) {\n        cellData = fomatters[col.sType](cellData);\n      }\n    }\n\n    return cellData;\n  }\n\n  /**\n   * Set the value for a specific cell, into the internal data cache\n   *  @param {object} settings dataTables settings object\n   *  @param {int} rowIdx aoData row id\n   *  @param {int} colIdx Column index\n   *  @param {*} val Value to set\n   *  @memberof DataTable#oApi\n   */\n  function _fnSetCellData(settings, rowIdx, colIdx, val) {\n    var col = settings.aoColumns[colIdx];\n    var rowData = settings.aoData[rowIdx]._aData;\n\n    col.fnSetData(rowData, val, {\n      settings: settings,\n      row: rowIdx,\n      col: colIdx,\n    });\n  }\n\n  /**\n   * Write a value to a cell\n   * @param {*} td Cell\n   * @param {*} val Value\n   */\n  function _fnWriteCell(td, val) {\n    if (val && typeof val === \"object\" && val.nodeName) {\n      $(td).empty().append(val);\n    } else {\n      td.innerHTML = val;\n    }\n  }\n\n  // Private variable that is used to match action syntax in the data property object\n  var __reArray = /\\[.*?\\]$/;\n  var __reFn = /\\(\\)$/;\n\n  /**\n   * Split string on periods, taking into account escaped periods\n   * @param  {string} str String to split\n   * @return {array} Split string\n   */\n  function _fnSplitObjNotation(str) {\n    var parts = str.match(/(\\\\.|[^.])+/g) || [\"\"];\n\n    return parts.map(function (s) {\n      return s.replace(/\\\\\\./g, \".\");\n    });\n  }\n\n  /**\n   * Return a function that can be used to get data from a source object, taking\n   * into account the ability to use nested objects as a source\n   *  @param {string|int|function} mSource The data source for the object\n   *  @returns {function} Data get function\n   *  @memberof DataTable#oApi\n   */\n  var _fnGetObjectDataFn = DataTable.util.get;\n\n  /**\n   * Return a function that can be used to set data from a source object, taking\n   * into account the ability to use nested objects as a source\n   *  @param {string|int|function} mSource The data source for the object\n   *  @returns {function} Data set function\n   *  @memberof DataTable#oApi\n   */\n  var _fnSetObjectDataFn = DataTable.util.set;\n\n  /**\n   * Return an array with the full table data\n   *  @param {object} oSettings dataTables settings object\n   *  @returns array {array} aData Master data array\n   *  @memberof DataTable#oApi\n   */\n  function _fnGetDataMaster(settings) {\n    return _pluck(settings.aoData, \"_aData\");\n  }\n\n  /**\n   * Nuke the table\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnClearTable(settings) {\n    settings.aoData.length = 0;\n    settings.aiDisplayMaster.length = 0;\n    settings.aiDisplay.length = 0;\n    settings.aIds = {};\n  }\n\n  /**\n   * Mark cached data as invalid such that a re-read of the data will occur when\n   * the cached data is next requested. Also update from the data source object.\n   *\n   * @param {object} settings DataTables settings object\n   * @param {int}    rowIdx   Row index to invalidate\n   * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n   *     or 'data'\n   * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n   *     row will be invalidated\n   * @memberof DataTable#oApi\n   *\n   * @todo For the modularisation of v1.11 this will need to become a callback, so\n   *   the sort and filter methods can subscribe to it. That will required\n   *   initialisation options for sorting, which is why it is not already baked in\n   */\n  function _fnInvalidate(settings, rowIdx, src, colIdx) {\n    var row = settings.aoData[rowIdx];\n    var i, ien;\n\n    // Remove the cached data for the row\n    row._aSortData = null;\n    row._aFilterData = null;\n    row.displayData = null;\n\n    // Are we reading last data from DOM or the data object?\n    if (src === \"dom\" || ((!src || src === \"auto\") && row.src === \"dom\")) {\n      // Read the data from the DOM\n      row._aData = _fnGetRowElements(\n        settings,\n        row,\n        colIdx,\n        colIdx === undefined ? undefined : row._aData\n      ).data;\n    } else {\n      // Reading from data object, update the DOM\n      var cells = row.anCells;\n      var display = _fnGetRowDisplay(settings, rowIdx);\n\n      if (cells) {\n        if (colIdx !== undefined) {\n          _fnWriteCell(cells[colIdx], display[colIdx]);\n        } else {\n          for (i = 0, ien = cells.length; i < ien; i++) {\n            _fnWriteCell(cells[i], display[i]);\n          }\n        }\n      }\n    }\n\n    // Column specific invalidation\n    var cols = settings.aoColumns;\n    if (colIdx !== undefined) {\n      // Type - the data might have changed\n      cols[colIdx].sType = null;\n\n      // Max length string. Its a fairly cheep recalculation, so not worth\n      // something more complicated\n      cols[colIdx].maxLenString = null;\n    } else {\n      for (i = 0, ien = cols.length; i < ien; i++) {\n        cols[i].sType = null;\n        cols[i].maxLenString = null;\n      }\n\n      // Update DataTables special `DT_*` attributes for the row\n      _fnRowAttributes(settings, row);\n    }\n  }\n\n  /**\n   * Build a data source object from an HTML row, reading the contents of the\n   * cells that are in the row.\n   *\n   * @param {object} settings DataTables settings object\n   * @param {node|object} TR element from which to read data or existing row\n   *   object from which to re-read the data from the cells\n   * @param {int} [colIdx] Optional column index\n   * @param {array|object} [d] Data source object. If `colIdx` is given then this\n   *   parameter should also be given and will be used to write the data into.\n   *   Only the column in question will be written\n   * @returns {object} Object with two parameters: `data` the data read, in\n   *   document order, and `cells` and array of nodes (they can be useful to the\n   *   caller, so rather than needing a second traversal to get them, just return\n   *   them from here).\n   * @memberof DataTable#oApi\n   */\n  function _fnGetRowElements(settings, row, colIdx, d) {\n    var tds = [],\n      td = row.firstChild,\n      name,\n      col,\n      i = 0,\n      contents,\n      columns = settings.aoColumns,\n      objectRead = settings._rowReadObject;\n\n    // Allow the data object to be passed in, or construct\n    d = d !== undefined ? d : objectRead ? {} : [];\n\n    var attr = function (str, td) {\n      if (typeof str === \"string\") {\n        var idx = str.indexOf(\"@\");\n\n        if (idx !== -1) {\n          var attr = str.substring(idx + 1);\n          var setter = _fnSetObjectDataFn(str);\n          setter(d, td.getAttribute(attr));\n        }\n      }\n    };\n\n    // Read data from a cell and store into the data object\n    var cellProcess = function (cell) {\n      if (colIdx === undefined || colIdx === i) {\n        col = columns[i];\n        contents = cell.innerHTML.trim();\n\n        if (col && col._bAttrSrc) {\n          var setter = _fnSetObjectDataFn(col.mData._);\n          setter(d, contents);\n\n          attr(col.mData.sort, cell);\n          attr(col.mData.type, cell);\n          attr(col.mData.filter, cell);\n        } else {\n          // Depending on the `data` option for the columns the data can\n          // be read to either an object or an array.\n          if (objectRead) {\n            if (!col._setter) {\n              // Cache the setter function\n              col._setter = _fnSetObjectDataFn(col.mData);\n            }\n            col._setter(d, contents);\n          } else {\n            d[i] = contents;\n          }\n        }\n      }\n\n      i++;\n    };\n\n    if (td) {\n      // `tr` element was passed in\n      while (td) {\n        name = td.nodeName.toUpperCase();\n\n        if (name == \"TD\" || name == \"TH\") {\n          cellProcess(td);\n          tds.push(td);\n        }\n\n        td = td.nextSibling;\n      }\n    } else {\n      // Existing row object passed in\n      tds = row.anCells;\n\n      for (var j = 0, jen = tds.length; j < jen; j++) {\n        cellProcess(tds[j]);\n      }\n    }\n\n    // Read the ID from the DOM if present\n    var rowNode = row.firstChild ? row : row.nTr;\n\n    if (rowNode) {\n      var id = rowNode.getAttribute(\"id\");\n\n      if (id) {\n        _fnSetObjectDataFn(settings.rowId)(d, id);\n      }\n    }\n\n    return {\n      data: d,\n      cells: tds,\n    };\n  }\n\n  /**\n   * Render and cache a row's display data for the columns, if required\n   * @returns\n   */\n  function _fnGetRowDisplay(settings, rowIdx) {\n    let rowModal = settings.aoData[rowIdx];\n    let columns = settings.aoColumns;\n\n    if (!rowModal.displayData) {\n      // Need to render and cache\n      rowModal.displayData = [];\n\n      for (var colIdx = 0, len = columns.length; colIdx < len; colIdx++) {\n        rowModal.displayData.push(\n          _fnGetCellData(settings, rowIdx, colIdx, \"display\")\n        );\n      }\n    }\n\n    return rowModal.displayData;\n  }\n\n  /**\n   * Create a new TR element (and it's TD children) for a row\n   *  @param {object} oSettings dataTables settings object\n   *  @param {int} iRow Row to consider\n   *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n   *    DataTables will create a row automatically\n   *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n   *    if nTr is.\n   *  @memberof DataTable#oApi\n   */\n  function _fnCreateTr(oSettings, iRow, nTrIn, anTds) {\n    var row = oSettings.aoData[iRow],\n      rowData = row._aData,\n      cells = [],\n      nTr,\n      nTd,\n      oCol,\n      i,\n      iLen,\n      create,\n      trClass = oSettings.oClasses.tbody.row;\n\n    if (row.nTr === null) {\n      nTr = nTrIn || document.createElement(\"tr\");\n\n      row.nTr = nTr;\n      row.anCells = cells;\n\n      _addClass(nTr, trClass);\n\n      /* Use a private property on the node to allow reserve mapping from the node\n       * to the aoData array for fast look up\n       */\n      nTr._DT_RowIndex = iRow;\n\n      /* Special parameters can be given by the data source to be used on the row */\n      _fnRowAttributes(oSettings, row);\n\n      /* Process each column */\n      for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n        oCol = oSettings.aoColumns[i];\n        create = nTrIn && anTds[i] ? false : true;\n\n        nTd = create ? document.createElement(oCol.sCellType) : anTds[i];\n\n        if (!nTd) {\n          _fnLog(oSettings, 0, \"Incorrect column count\", 18);\n        }\n\n        nTd._DT_CellIndex = {\n          row: iRow,\n          column: i,\n        };\n\n        cells.push(nTd);\n\n        var display = _fnGetRowDisplay(oSettings, iRow);\n\n        // Need to create the HTML if new, or if a rendering function is defined\n        if (\n          create ||\n          ((oCol.mRender || oCol.mData !== i) &&\n            (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + \".display\"))\n        ) {\n          _fnWriteCell(nTd, display[i]);\n        }\n\n        // Visibility - add or remove as required\n        if (oCol.bVisible && create) {\n          nTr.appendChild(nTd);\n        } else if (!oCol.bVisible && !create) {\n          nTd.parentNode.removeChild(nTd);\n        }\n\n        if (oCol.fnCreatedCell) {\n          oCol.fnCreatedCell.call(\n            oSettings.oInstance,\n            nTd,\n            _fnGetCellData(oSettings, iRow, i),\n            rowData,\n            iRow,\n            i\n          );\n        }\n      }\n\n      _fnCallbackFire(oSettings, \"aoRowCreatedCallback\", \"row-created\", [\n        nTr,\n        rowData,\n        iRow,\n        cells,\n      ]);\n    } else {\n      _addClass(row.nTr, trClass);\n    }\n  }\n\n  /**\n   * Add attributes to a row based on the special `DT_*` parameters in a data\n   * source object.\n   *  @param {object} settings DataTables settings object\n   *  @param {object} DataTables row object for the row to be modified\n   *  @memberof DataTable#oApi\n   */\n  function _fnRowAttributes(settings, row) {\n    var tr = row.nTr;\n    var data = row._aData;\n\n    if (tr) {\n      var id = settings.rowIdFn(data);\n\n      if (id) {\n        tr.id = id;\n      }\n\n      if (data.DT_RowClass) {\n        // Remove any classes added by DT_RowClass before\n        var a = data.DT_RowClass.split(\" \");\n        row.__rowc = row.__rowc ? _unique(row.__rowc.concat(a)) : a;\n\n        $(tr).removeClass(row.__rowc.join(\" \")).addClass(data.DT_RowClass);\n      }\n\n      if (data.DT_RowAttr) {\n        $(tr).attr(data.DT_RowAttr);\n      }\n\n      if (data.DT_RowData) {\n        $(tr).data(data.DT_RowData);\n      }\n    }\n  }\n\n  /**\n   * Create the HTML header for the table\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnBuildHead(settings, side) {\n    var classes = settings.oClasses;\n    var columns = settings.aoColumns;\n    var i, ien, row;\n    var target = side === \"header\" ? settings.nTHead : settings.nTFoot;\n    var titleProp = side === \"header\" ? \"sTitle\" : side;\n\n    // Footer might be defined\n    if (!target) {\n      return;\n    }\n\n    // If no cells yet and we have content for them, then create\n    if (side === \"header\" || _pluck(settings.aoColumns, titleProp).join(\"\")) {\n      row = $(\"tr\", target);\n\n      // Add a row if needed\n      if (!row.length) {\n        row = $(\"<tr/>\").appendTo(target);\n      }\n\n      // Add the number of cells needed to make up to the number of columns\n      if (row.length === 1) {\n        var cells = $(\"td, th\", row);\n\n        for (i = cells.length, ien = columns.length; i < ien; i++) {\n          $(\"<th/>\")\n            .html(columns[i][titleProp] || \"\")\n            .appendTo(row);\n        }\n      }\n    }\n\n    var detected = _fnDetectHeader(settings, target, true);\n\n    if (side === \"header\") {\n      settings.aoHeader = detected;\n    } else {\n      settings.aoFooter = detected;\n    }\n\n    // ARIA role for the rows\n    $(target).children(\"tr\").attr(\"role\", \"row\");\n\n    // Every cell needs to be passed through the renderer\n    $(target)\n      .children(\"tr\")\n      .children(\"th, td\")\n      .each(function () {\n        _fnRenderer(settings, side)(settings, $(this), classes);\n      });\n  }\n\n  /**\n   * Build a layout structure for a header or footer\n   *\n   * @param {*} settings DataTables settings\n   * @param {*} source Source layout array\n   * @param {*} incColumns What columns should be included\n   * @returns Layout array\n   */\n  function _fnHeaderLayout(settings, source, incColumns) {\n    var row, column, cell;\n    var local = [];\n    var structure = [];\n    var columns = settings.aoColumns;\n    var columnCount = columns.length;\n    var rowspan, colspan;\n\n    if (!source) {\n      return;\n    }\n\n    // Default is to work on only visible columns\n    if (!incColumns) {\n      incColumns = _range(columnCount).filter(function (idx) {\n        return columns[idx].bVisible;\n      });\n    }\n\n    // Make a copy of the master layout array, but with only the columns we want\n    for (row = 0; row < source.length; row++) {\n      // Remove any columns we haven't selected\n      local[row] = source[row].slice().filter(function (cell, i) {\n        return incColumns.includes(i);\n      });\n\n      // Prep the structure array - it needs an element for each row\n      structure.push([]);\n    }\n\n    for (row = 0; row < local.length; row++) {\n      for (column = 0; column < local[row].length; column++) {\n        rowspan = 1;\n        colspan = 1;\n\n        // Check to see if there is already a cell (row/colspan) covering our target\n        // insert point. If there is, then there is nothing to do.\n        if (structure[row][column] === undefined) {\n          cell = local[row][column].cell;\n\n          // Expand for rowspan\n          while (\n            local[row + rowspan] !== undefined &&\n            local[row][column].cell == local[row + rowspan][column].cell\n          ) {\n            structure[row + rowspan][column] = null;\n            rowspan++;\n          }\n\n          // And for colspan\n          while (\n            local[row][column + colspan] !== undefined &&\n            local[row][column].cell == local[row][column + colspan].cell\n          ) {\n            // Which also needs to go over rows\n            for (var k = 0; k < rowspan; k++) {\n              structure[row + k][column + colspan] = null;\n            }\n\n            colspan++;\n          }\n\n          var titleSpan = $(\"span.dt-column-title\", cell);\n\n          structure[row][column] = {\n            cell: cell,\n            colspan: colspan,\n            rowspan: rowspan,\n            title: titleSpan.length ? titleSpan.html() : $(cell).html(),\n          };\n        }\n      }\n    }\n\n    return structure;\n  }\n\n  /**\n   * Draw the header (or footer) element based on the column visibility states.\n   *\n   *  @param object oSettings dataTables settings object\n   *  @param array aoSource Layout array from _fnDetectHeader\n   *  @memberof DataTable#oApi\n   */\n  function _fnDrawHead(settings, source) {\n    var layout = _fnHeaderLayout(settings, source);\n    var tr, n;\n\n    for (var row = 0; row < source.length; row++) {\n      tr = source[row].row;\n\n      // All cells are going to be replaced, so empty out the row\n      // Can't use $().empty() as that kills event handlers\n      if (tr) {\n        while ((n = tr.firstChild)) {\n          tr.removeChild(n);\n        }\n      }\n\n      for (var column = 0; column < layout[row].length; column++) {\n        var point = layout[row][column];\n\n        if (point) {\n          $(point.cell)\n            .appendTo(tr)\n            .attr(\"rowspan\", point.rowspan)\n            .attr(\"colspan\", point.colspan);\n        }\n      }\n    }\n  }\n\n  /**\n   * Insert the required TR nodes into the table for display\n   *  @param {object} oSettings dataTables settings object\n   *  @param ajaxComplete true after ajax call to complete rendering\n   *  @memberof DataTable#oApi\n   */\n  function _fnDraw(oSettings, ajaxComplete) {\n    // Allow for state saving and a custom start position\n    _fnStart(oSettings);\n\n    /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n    var aPreDraw = _fnCallbackFire(oSettings, \"aoPreDrawCallback\", \"preDraw\", [\n      oSettings,\n    ]);\n    if (aPreDraw.indexOf(false) !== -1) {\n      _fnProcessingDisplay(oSettings, false);\n      return;\n    }\n\n    var anRows = [];\n    var iRowCount = 0;\n    var bServerSide = _fnDataSource(oSettings) == \"ssp\";\n    var aiDisplay = oSettings.aiDisplay;\n    var iDisplayStart = oSettings._iDisplayStart;\n    var iDisplayEnd = oSettings.fnDisplayEnd();\n    var columns = oSettings.aoColumns;\n    var body = $(oSettings.nTBody);\n\n    oSettings.bDrawing = true;\n\n    /* Server-side processing draw intercept */\n    if (oSettings.deferLoading) {\n      oSettings.deferLoading = false;\n      oSettings.iDraw++;\n      _fnProcessingDisplay(oSettings, false);\n    } else if (!bServerSide) {\n      oSettings.iDraw++;\n    } else if (!oSettings.bDestroying && !ajaxComplete) {\n      // Show loading message for server-side processing\n      if (oSettings.iDraw === 0) {\n        body.empty().append(_emptyRow(oSettings));\n      }\n\n      _fnAjaxUpdate(oSettings);\n      return;\n    }\n\n    if (aiDisplay.length !== 0) {\n      var iStart = bServerSide ? 0 : iDisplayStart;\n      var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n      for (var j = iStart; j < iEnd; j++) {\n        var iDataIndex = aiDisplay[j];\n        var aoData = oSettings.aoData[iDataIndex];\n        if (aoData.nTr === null) {\n          _fnCreateTr(oSettings, iDataIndex);\n        }\n\n        var nRow = aoData.nTr;\n\n        // Add various classes as needed\n        for (var i = 0; i < columns.length; i++) {\n          var col = columns[i];\n          var td = aoData.anCells[i];\n\n          _addClass(td, _ext.type.className[col.sType]); // auto class\n          _addClass(td, col.sClass); // column class\n          _addClass(td, oSettings.oClasses.tbody.cell); // all cells\n        }\n\n        // Row callback functions - might want to manipulate the row\n        // iRowCount and j are not currently documented. Are they at all\n        // useful?\n        _fnCallbackFire(oSettings, \"aoRowCallback\", null, [\n          nRow,\n          aoData._aData,\n          iRowCount,\n          j,\n          iDataIndex,\n        ]);\n\n        anRows.push(nRow);\n        iRowCount++;\n      }\n    } else {\n      anRows[0] = _emptyRow(oSettings);\n    }\n\n    /* Header and footer callbacks */\n    _fnCallbackFire(oSettings, \"aoHeaderCallback\", \"header\", [\n      $(oSettings.nTHead).children(\"tr\")[0],\n      _fnGetDataMaster(oSettings),\n      iDisplayStart,\n      iDisplayEnd,\n      aiDisplay,\n    ]);\n\n    _fnCallbackFire(oSettings, \"aoFooterCallback\", \"footer\", [\n      $(oSettings.nTFoot).children(\"tr\")[0],\n      _fnGetDataMaster(oSettings),\n      iDisplayStart,\n      iDisplayEnd,\n      aiDisplay,\n    ]);\n\n    // replaceChildren is faster, but only became widespread in 2020,\n    // so a fall back in jQuery is provided for older browsers.\n    if (body[0].replaceChildren) {\n      body[0].replaceChildren.apply(body[0], anRows);\n    } else {\n      body.children().detach();\n      body.append($(anRows));\n    }\n\n    // Empty table needs a specific class\n    $(oSettings.nTableWrapper).toggleClass(\n      \"dt-empty-footer\",\n      $(\"tr\", oSettings.nTFoot).length === 0\n    );\n\n    /* Call all required callback functions for the end of a draw */\n    _fnCallbackFire(oSettings, \"aoDrawCallback\", \"draw\", [oSettings], true);\n\n    /* Draw is complete, sorting and filtering must be as well */\n    oSettings.bSorted = false;\n    oSettings.bFiltered = false;\n    oSettings.bDrawing = false;\n  }\n\n  /**\n   * Redraw the table - taking account of the various features which are enabled\n   *  @param {object} oSettings dataTables settings object\n   *  @param {boolean} [holdPosition] Keep the current paging position. By default\n   *    the paging is reset to the first page\n   *  @memberof DataTable#oApi\n   */\n  function _fnReDraw(settings, holdPosition, recompute) {\n    var features = settings.oFeatures,\n      sort = features.bSort,\n      filter = features.bFilter;\n\n    if (recompute === undefined || recompute === true) {\n      // Resolve any column types that are unknown due to addition or invalidation\n      _fnColumnTypes(settings);\n\n      if (sort) {\n        _fnSort(settings);\n      }\n\n      if (filter) {\n        _fnFilterComplete(settings, settings.oPreviousSearch);\n      } else {\n        // No filtering, so we want to just use the display master\n        settings.aiDisplay = settings.aiDisplayMaster.slice();\n      }\n    }\n\n    if (holdPosition !== true) {\n      settings._iDisplayStart = 0;\n    }\n\n    // Let any modules know about the draw hold position state (used by\n    // scrolling internally)\n    settings._drawHold = holdPosition;\n\n    _fnDraw(settings);\n\n    settings._drawHold = false;\n  }\n\n  /*\n   * Table is empty - create a row with an empty message in it\n   */\n  function _emptyRow(settings) {\n    var oLang = settings.oLanguage;\n    var zero = oLang.sZeroRecords;\n    var dataSrc = _fnDataSource(settings);\n\n    if (\n      (settings.iDraw < 1 && dataSrc === \"ssp\") ||\n      (settings.iDraw <= 1 && dataSrc === \"ajax\")\n    ) {\n      zero = oLang.sLoadingRecords;\n    } else if (oLang.sEmptyTable && settings.fnRecordsTotal() === 0) {\n      zero = oLang.sEmptyTable;\n    }\n\n    return $(\"<tr/>\").append(\n      $(\"<td />\", {\n        colSpan: _fnVisbleColumns(settings),\n        class: settings.oClasses.empty.row,\n      }).html(zero)\n    )[0];\n  }\n\n  /**\n   * Expand the layout items into an object for the rendering function\n   */\n  function _layoutItems(row, align, items) {\n    if (Array.isArray(items)) {\n      for (var i = 0; i < items.length; i++) {\n        _layoutItems(row, align, items[i]);\n      }\n\n      return;\n    }\n\n    var rowCell = row[align];\n\n    // If it is an object, then there can be multiple features contained in it\n    if ($.isPlainObject(items)) {\n      // A feature plugin cannot be named \"features\" due to this check\n      if (items.features) {\n        if (items.rowId) {\n          row.id = items.rowId;\n        }\n        if (items.rowClass) {\n          row.className = items.rowClass;\n        }\n\n        rowCell.id = items.id;\n        rowCell.className = items.className;\n\n        _layoutItems(row, align, items.features);\n      } else {\n        Object.keys(items).map(function (key) {\n          rowCell.contents.push({\n            feature: key,\n            opts: items[key],\n          });\n        });\n      }\n    } else {\n      rowCell.contents.push(items);\n    }\n  }\n\n  /**\n   * Find, or create a layout row\n   */\n  function _layoutGetRow(rows, rowNum, align) {\n    var row;\n\n    // Find existing rows\n    for (var i = 0; i < rows.length; i++) {\n      row = rows[i];\n\n      if (row.rowNum === rowNum) {\n        // full is on its own, but start and end share a row\n        if (\n          (align === \"full\" && row.full) ||\n          ((align === \"start\" || align === \"end\") && (row.start || row.end))\n        ) {\n          if (!row[align]) {\n            row[align] = {\n              contents: [],\n            };\n          }\n\n          return row;\n        }\n      }\n    }\n\n    // If we get this far, then there was no match, create a new row\n    row = {\n      rowNum: rowNum,\n    };\n\n    row[align] = {\n      contents: [],\n    };\n\n    rows.push(row);\n\n    return row;\n  }\n\n  /**\n   * Convert a `layout` object given by a user to the object structure needed\n   * for the renderer. This is done twice, once for above and once for below\n   * the table. Ordering must also be considered.\n   *\n   * @param {*} settings DataTables settings object\n   * @param {*} layout Layout object to convert\n   * @param {string} side `top` or `bottom`\n   * @returns Converted array structure - one item for each row.\n   */\n  function _layoutArray(settings, layout, side) {\n    var rows = [];\n\n    // Split out into an array\n    $.each(layout, function (pos, items) {\n      if (items === null) {\n        return;\n      }\n\n      var parts = pos.match(/^([a-z]+)([0-9]*)([A-Za-z]*)$/);\n      var rowNum = parts[2] ? parts[2] * 1 : 0;\n      var align = parts[3] ? parts[3].toLowerCase() : \"full\";\n\n      // Filter out the side we aren't interested in\n      if (parts[1] !== side) {\n        return;\n      }\n\n      // Get or create the row we should attach to\n      var row = _layoutGetRow(rows, rowNum, align);\n\n      _layoutItems(row, align, items);\n    });\n\n    // Order by item identifier\n    rows.sort(function (a, b) {\n      var order1 = a.rowNum;\n      var order2 = b.rowNum;\n\n      // If both in the same row, then the row with `full` comes first\n      if (order1 === order2) {\n        var ret = a.full && !b.full ? -1 : 1;\n\n        return side === \"bottom\" ? ret * -1 : ret;\n      }\n\n      return order2 - order1;\n    });\n\n    // Invert for below the table\n    if (side === \"bottom\") {\n      rows.reverse();\n    }\n\n    for (var row = 0; row < rows.length; row++) {\n      delete rows[row].rowNum;\n\n      _layoutResolve(settings, rows[row]);\n    }\n\n    return rows;\n  }\n\n  /**\n   * Convert the contents of a row's layout object to nodes that can be inserted\n   * into the document by a renderer. Execute functions, look up plug-ins, etc.\n   *\n   * @param {*} settings DataTables settings object\n   * @param {*} row Layout object for this row\n   */\n  function _layoutResolve(settings, row) {\n    var getFeature = function (feature, opts) {\n      if (!_ext.features[feature]) {\n        _fnLog(settings, 0, \"Unknown feature: \" + feature);\n      }\n\n      return _ext.features[feature].apply(this, [settings, opts]);\n    };\n\n    var resolve = function (item) {\n      if (!row[item]) {\n        return;\n      }\n\n      var line = row[item].contents;\n\n      for (var i = 0, ien = line.length; i < ien; i++) {\n        if (!line[i]) {\n          continue;\n        } else if (typeof line[i] === \"string\") {\n          line[i] = getFeature(line[i], null);\n        } else if ($.isPlainObject(line[i])) {\n          // If it's an object, it just has feature and opts properties from\n          // the transform in _layoutArray\n          line[i] = getFeature(line[i].feature, line[i].opts);\n        } else if (typeof line[i].node === \"function\") {\n          line[i] = line[i].node(settings);\n        } else if (typeof line[i] === \"function\") {\n          var inst = line[i](settings);\n\n          line[i] = typeof inst.node === \"function\" ? inst.node() : inst;\n        }\n      }\n    };\n\n    resolve(\"start\");\n    resolve(\"end\");\n    resolve(\"full\");\n  }\n\n  /**\n   * Add the options to the page HTML for the table\n   *  @param {object} settings DataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnAddOptionsHtml(settings) {\n    var classes = settings.oClasses;\n    var table = $(settings.nTable);\n\n    // Wrapper div around everything DataTables controls\n    var insert = $(\"<div/>\")\n      .attr({\n        id: settings.sTableId + \"_wrapper\",\n        class: classes.container,\n      })\n      .insertBefore(table);\n\n    settings.nTableWrapper = insert[0];\n\n    if (settings.sDom) {\n      // Legacy\n      _fnLayoutDom(settings, settings.sDom, insert);\n    } else {\n      var top = _layoutArray(settings, settings.layout, \"top\");\n      var bottom = _layoutArray(settings, settings.layout, \"bottom\");\n      var renderer = _fnRenderer(settings, \"layout\");\n\n      // Everything above - the renderer will actually insert the contents into the document\n      top.forEach(function (item) {\n        renderer(settings, insert, item);\n      });\n\n      // The table - always the center of attention\n      renderer(settings, insert, {\n        full: {\n          table: true,\n          contents: [_fnFeatureHtmlTable(settings)],\n        },\n      });\n\n      // Everything below\n      bottom.forEach(function (item) {\n        renderer(settings, insert, item);\n      });\n    }\n\n    // Processing floats on top, so it isn't an inserted feature\n    _processingHtml(settings);\n  }\n\n  /**\n   * Draw the table with the legacy DOM property\n   * @param {*} settings DT settings object\n   * @param {*} dom DOM string\n   * @param {*} insert Insert point\n   */\n  function _fnLayoutDom(settings, dom, insert) {\n    var parts = dom.match(/(\".*?\")|('.*?')|./g);\n    var featureNode, option, newNode, next, attr;\n\n    for (var i = 0; i < parts.length; i++) {\n      featureNode = null;\n      option = parts[i];\n\n      if (option == \"<\") {\n        // New container div\n        newNode = $(\"<div/>\");\n\n        // Check to see if we should append an id and/or a class name to the container\n        next = parts[i + 1];\n\n        if (next[0] == \"'\" || next[0] == '\"') {\n          attr = next.replace(/['\"]/g, \"\");\n\n          var id = \"\",\n            className;\n\n          /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n           * breaks the string into parts and applies them as needed\n           */\n          if (attr.indexOf(\".\") != -1) {\n            var split = attr.split(\".\");\n\n            id = split[0];\n            className = split[1];\n          } else if (attr[0] == \"#\") {\n            id = attr;\n          } else {\n            className = attr;\n          }\n\n          newNode.attr(\"id\", id.substring(1)).addClass(className);\n\n          i++; // Move along the position array\n        }\n\n        insert.append(newNode);\n        insert = newNode;\n      } else if (option == \">\") {\n        // End container div\n        insert = insert.parent();\n      } else if (option == \"t\") {\n        // Table\n        featureNode = _fnFeatureHtmlTable(settings);\n      } else {\n        DataTable.ext.feature.forEach(function (feature) {\n          if (option == feature.cFeature) {\n            featureNode = feature.fnInit(settings);\n          }\n        });\n      }\n\n      // Add to the display\n      if (featureNode) {\n        insert.append(featureNode);\n      }\n    }\n  }\n\n  /**\n   * Use the DOM source to create up an array of header cells. The idea here is to\n   * create a layout grid (array) of rows x columns, which contains a reference\n   * to the cell that that point in the grid (regardless of col/rowspan), such that\n   * any column / row could be removed and the new grid constructed\n   *  @param {node} thead The header/footer element for the table\n   *  @returns {array} Calculated layout array\n   *  @memberof DataTable#oApi\n   */\n  function _fnDetectHeader(settings, thead, write) {\n    var columns = settings.aoColumns;\n    var rows = $(thead).children(\"tr\");\n    var row, cell;\n    var i, k, l, iLen, shifted, column, colspan, rowspan;\n    var isHeader = thead && thead.nodeName.toLowerCase() === \"thead\";\n    var layout = [];\n    var unique;\n    var shift = function (a, i, j) {\n      var k = a[i];\n      while (k[j]) {\n        j++;\n      }\n      return j;\n    };\n\n    // We know how many rows there are in the layout - so prep it\n    for (i = 0, iLen = rows.length; i < iLen; i++) {\n      layout.push([]);\n    }\n\n    for (i = 0, iLen = rows.length; i < iLen; i++) {\n      row = rows[i];\n      column = 0;\n\n      // For every cell in the row..\n      cell = row.firstChild;\n      while (cell) {\n        if (\n          cell.nodeName.toUpperCase() == \"TD\" ||\n          cell.nodeName.toUpperCase() == \"TH\"\n        ) {\n          var cols = [];\n\n          // Get the col and rowspan attributes from the DOM and sanitise them\n          colspan = cell.getAttribute(\"colspan\") * 1;\n          rowspan = cell.getAttribute(\"rowspan\") * 1;\n          colspan = !colspan || colspan === 0 || colspan === 1 ? 1 : colspan;\n          rowspan = !rowspan || rowspan === 0 || rowspan === 1 ? 1 : rowspan;\n\n          // There might be colspan cells already in this row, so shift our target\n          // accordingly\n          shifted = shift(layout, i, column);\n\n          // Cache calculation for unique columns\n          unique = colspan === 1 ? true : false;\n\n          // Perform header setup\n          if (write) {\n            if (unique) {\n              // Allow column options to be set from HTML attributes\n              _fnColumnOptions(settings, shifted, $(cell).data());\n\n              // Get the width for the column. This can be defined from the\n              // width attribute, style attribute or `columns.width` option\n              var columnDef = columns[shifted];\n              var width = cell.getAttribute(\"width\") || null;\n              var t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\n              if (t) {\n                width = t[1];\n              }\n\n              columnDef.sWidthOrig = columnDef.sWidth || width;\n\n              if (isHeader) {\n                // Column title handling - can be user set, or read from the DOM\n                // This happens before the render, so the original is still in place\n                if (columnDef.sTitle !== null && !columnDef.autoTitle) {\n                  cell.innerHTML = columnDef.sTitle;\n                }\n\n                if (!columnDef.sTitle && unique) {\n                  columnDef.sTitle = _stripHtml(cell.innerHTML);\n                  columnDef.autoTitle = true;\n                }\n              } else {\n                // Footer specific operations\n                if (columnDef.footer) {\n                  cell.innerHTML = columnDef.footer;\n                }\n              }\n\n              // Fall back to the aria-label attribute on the table header if no ariaTitle is\n              // provided.\n              if (!columnDef.ariaTitle) {\n                columnDef.ariaTitle =\n                  $(cell).attr(\"aria-label\") || columnDef.sTitle;\n              }\n\n              // Column specific class names\n              if (columnDef.className) {\n                $(cell).addClass(columnDef.className);\n              }\n            }\n\n            // Wrap the column title so we can write to it in future\n            if ($(\"span.dt-column-title\", cell).length === 0) {\n              $(\"<span>\")\n                .addClass(\"dt-column-title\")\n                .append(cell.childNodes)\n                .appendTo(cell);\n            }\n\n            if (isHeader && $(\"span.dt-column-order\", cell).length === 0) {\n              $(\"<span>\").addClass(\"dt-column-order\").appendTo(cell);\n            }\n          }\n\n          // If there is col / rowspan, copy the information into the layout grid\n          for (l = 0; l < colspan; l++) {\n            for (k = 0; k < rowspan; k++) {\n              layout[i + k][shifted + l] = {\n                cell: cell,\n                unique: unique,\n              };\n\n              layout[i + k].row = row;\n            }\n\n            cols.push(shifted + l);\n          }\n\n          // Assign an attribute so spanning cells can still be identified\n          // as belonging to a column\n          cell.setAttribute(\"data-dt-column\", _unique(cols).join(\",\"));\n        }\n\n        cell = cell.nextSibling;\n      }\n    }\n\n    return layout;\n  }\n\n  /**\n   * Set the start position for draw\n   *  @param {object} oSettings dataTables settings object\n   */\n  function _fnStart(oSettings) {\n    var bServerSide = _fnDataSource(oSettings) == \"ssp\";\n    var iInitDisplayStart = oSettings.iInitDisplayStart;\n\n    // Check and see if we have an initial draw position from state saving\n    if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n      oSettings._iDisplayStart = bServerSide\n        ? iInitDisplayStart\n        : iInitDisplayStart >= oSettings.fnRecordsDisplay()\n        ? 0\n        : iInitDisplayStart;\n\n      oSettings.iInitDisplayStart = -1;\n    }\n  }\n\n  /**\n   * Create an Ajax call based on the table's settings, taking into account that\n   * parameters can have multiple forms, and backwards compatibility.\n   *\n   * @param {object} oSettings dataTables settings object\n   * @param {array} data Data to send to the server, required by\n   *     DataTables - may be augmented by developer callbacks\n   * @param {function} fn Callback function to run when data is obtained\n   */\n  function _fnBuildAjax(oSettings, data, fn) {\n    var ajaxData;\n    var ajax = oSettings.ajax;\n    var instance = oSettings.oInstance;\n    var callback = function (json) {\n      var status = oSettings.jqXHR ? oSettings.jqXHR.status : null;\n\n      if (json === null || (typeof status === \"number\" && status == 204)) {\n        json = {};\n        _fnAjaxDataSrc(oSettings, json, []);\n      }\n\n      var error = json.error || json.sError;\n      if (error) {\n        _fnLog(oSettings, 0, error);\n      }\n\n      // Microsoft often wrap JSON as a string in another JSON object\n      // Let's handle that automatically\n      if (json.d && typeof json.d === \"string\") {\n        try {\n          json = JSON.parse(json.d);\n        } catch (e) {\n          // noop\n        }\n      }\n\n      oSettings.json = json;\n\n      _fnCallbackFire(\n        oSettings,\n        null,\n        \"xhr\",\n        [oSettings, json, oSettings.jqXHR],\n        true\n      );\n      fn(json);\n    };\n\n    if ($.isPlainObject(ajax) && ajax.data) {\n      ajaxData = ajax.data;\n\n      var newData =\n        typeof ajaxData === \"function\"\n          ? ajaxData(data, oSettings) // fn can manipulate data or return\n          : ajaxData; // an object object or array to merge\n\n      // If the function returned something, use that alone\n      data =\n        typeof ajaxData === \"function\" && newData\n          ? newData\n          : $.extend(true, data, newData);\n\n      // Remove the data property as we've resolved it already and don't want\n      // jQuery to do it again (it is restored at the end of the function)\n      delete ajax.data;\n    }\n\n    var baseAjax = {\n      url: typeof ajax === \"string\" ? ajax : \"\",\n      data: data,\n      success: callback,\n      dataType: \"json\",\n      cache: false,\n      type: oSettings.sServerMethod,\n      error: function (xhr, error) {\n        var ret = _fnCallbackFire(\n          oSettings,\n          null,\n          \"xhr\",\n          [oSettings, null, oSettings.jqXHR],\n          true\n        );\n\n        if (ret.indexOf(true) === -1) {\n          if (error == \"parsererror\") {\n            _fnLog(oSettings, 0, \"Invalid JSON response\", 1);\n          } else if (xhr.readyState === 4) {\n            _fnLog(oSettings, 0, \"Ajax error\", 7);\n          }\n        }\n\n        _fnProcessingDisplay(oSettings, false);\n      },\n    };\n\n    // If `ajax` option is an object, extend and override our default base\n    if ($.isPlainObject(ajax)) {\n      $.extend(baseAjax, ajax);\n    }\n\n    // Store the data submitted for the API\n    oSettings.oAjaxData = data;\n\n    // Allow plug-ins and external processes to modify the data\n    _fnCallbackFire(\n      oSettings,\n      null,\n      \"preXhr\",\n      [oSettings, data, baseAjax],\n      true\n    );\n\n    if (typeof ajax === \"function\") {\n      // Is a function - let the caller define what needs to be done\n      oSettings.jqXHR = ajax.call(instance, data, callback, oSettings);\n    } else if (ajax.url === \"\") {\n      // No url, so don't load any data. Just apply an empty data array\n      // to the object for the callback.\n      var empty = {};\n\n      DataTable.util.set(ajax.dataSrc)(empty, []);\n      callback(empty);\n    } else {\n      // Object to extend the base settings\n      oSettings.jqXHR = $.ajax(baseAjax);\n    }\n\n    // Restore for next time around\n    if (ajaxData) {\n      ajax.data = ajaxData;\n    }\n  }\n\n  /**\n   * Update the table using an Ajax call\n   *  @param {object} settings dataTables settings object\n   *  @returns {boolean} Block the table drawing or not\n   *  @memberof DataTable#oApi\n   */\n  function _fnAjaxUpdate(settings) {\n    settings.iDraw++;\n    _fnProcessingDisplay(settings, true);\n\n    _fnBuildAjax(settings, _fnAjaxParameters(settings), function (json) {\n      _fnAjaxUpdateDraw(settings, json);\n    });\n  }\n\n  /**\n   * Build up the parameters in an object needed for a server-side processing\n   * request.\n   *  @param {object} oSettings dataTables settings object\n   *  @returns {bool} block the table drawing or not\n   *  @memberof DataTable#oApi\n   */\n  function _fnAjaxParameters(settings) {\n    var columns = settings.aoColumns,\n      features = settings.oFeatures,\n      preSearch = settings.oPreviousSearch,\n      preColSearch = settings.aoPreSearchCols,\n      colData = function (idx, prop) {\n        return typeof columns[idx][prop] === \"function\"\n          ? \"function\"\n          : columns[idx][prop];\n      };\n\n    return {\n      draw: settings.iDraw,\n      columns: columns.map(function (column, i) {\n        return {\n          data: colData(i, \"mData\"),\n          name: column.sName,\n          searchable: column.bSearchable,\n          orderable: column.bSortable,\n          search: {\n            value: preColSearch[i].search,\n            regex: preColSearch[i].regex,\n            fixed: Object.keys(column.searchFixed).map(function (name) {\n              return {\n                name: name,\n                term: column.searchFixed[name].toString(),\n              };\n            }),\n          },\n        };\n      }),\n      order: _fnSortFlatten(settings).map(function (val) {\n        return {\n          column: val.col,\n          dir: val.dir,\n          name: colData(val.col, \"sName\"),\n        };\n      }),\n      start: settings._iDisplayStart,\n      length: features.bPaginate ? settings._iDisplayLength : -1,\n      search: {\n        value: preSearch.search,\n        regex: preSearch.regex,\n        fixed: Object.keys(settings.searchFixed).map(function (name) {\n          return {\n            name: name,\n            term: settings.searchFixed[name].toString(),\n          };\n        }),\n      },\n    };\n  }\n\n  /**\n   * Data the data from the server (nuking the old) and redraw the table\n   *  @param {object} oSettings dataTables settings object\n   *  @param {object} json json data return from the server.\n   *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n   *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n   *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n   *  @param {array} json.aaData The data to display on this page\n   *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n   *  @memberof DataTable#oApi\n   */\n  function _fnAjaxUpdateDraw(settings, json) {\n    var data = _fnAjaxDataSrc(settings, json);\n    var draw = _fnAjaxDataSrcParam(settings, \"draw\", json);\n    var recordsTotal = _fnAjaxDataSrcParam(settings, \"recordsTotal\", json);\n    var recordsFiltered = _fnAjaxDataSrcParam(\n      settings,\n      \"recordsFiltered\",\n      json\n    );\n\n    if (draw !== undefined) {\n      // Protect against out of sequence returns\n      if (draw * 1 < settings.iDraw) {\n        return;\n      }\n      settings.iDraw = draw * 1;\n    }\n\n    // No data in returned object, so rather than an array, we show an empty table\n    if (!data) {\n      data = [];\n    }\n\n    _fnClearTable(settings);\n    settings._iRecordsTotal = parseInt(recordsTotal, 10);\n    settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n    for (var i = 0, ien = data.length; i < ien; i++) {\n      _fnAddData(settings, data[i]);\n    }\n    settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n    _fnDraw(settings, true);\n    _fnInitComplete(settings);\n    _fnProcessingDisplay(settings, false);\n  }\n\n  /**\n   * Get the data from the JSON data source to use for drawing a table. Using\n   * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n   * source object, or from a processing function.\n   *  @param {object} settings dataTables settings object\n   *  @param  {object} json Data source object / array from the server\n   *  @return {array} Array of data to use\n   */\n  function _fnAjaxDataSrc(settings, json, write) {\n    var dataProp = \"data\";\n\n    if ($.isPlainObject(settings.ajax) && settings.ajax.dataSrc !== undefined) {\n      // Could in inside a `dataSrc` object, or not!\n      var dataSrc = settings.ajax.dataSrc;\n\n      // string, function and object are valid types\n      if (typeof dataSrc === \"string\" || typeof dataSrc === \"function\") {\n        dataProp = dataSrc;\n      } else if (dataSrc.data !== undefined) {\n        dataProp = dataSrc.data;\n      }\n    }\n\n    if (!write) {\n      if (dataProp === \"data\") {\n        // If the default, then we still want to support the old style, and safely ignore\n        // it if possible\n        return json.aaData || json[dataProp];\n      }\n\n      return dataProp !== \"\" ? _fnGetObjectDataFn(dataProp)(json) : json;\n    }\n\n    // set\n    _fnSetObjectDataFn(dataProp)(json, write);\n  }\n\n  /**\n   * Very similar to _fnAjaxDataSrc, but for the other SSP properties\n   * @param {*} settings DataTables settings object\n   * @param {*} param Target parameter\n   * @param {*} json JSON data\n   * @returns Resolved value\n   */\n  function _fnAjaxDataSrcParam(settings, param, json) {\n    var dataSrc = $.isPlainObject(settings.ajax) ? settings.ajax.dataSrc : null;\n\n    if (dataSrc && dataSrc[param]) {\n      // Get from custom location\n      return _fnGetObjectDataFn(dataSrc[param])(json);\n    }\n\n    // else - Default behaviour\n    var old = \"\";\n\n    // Legacy support\n    if (param === \"draw\") {\n      old = \"sEcho\";\n    } else if (param === \"recordsTotal\") {\n      old = \"iTotalRecords\";\n    } else if (param === \"recordsFiltered\") {\n      old = \"iTotalDisplayRecords\";\n    }\n\n    return json[old] !== undefined ? json[old] : json[param];\n  }\n\n  /**\n   * Filter the table using both the global filter and column based filtering\n   *  @param {object} settings dataTables settings object\n   *  @param {object} input search information\n   *  @memberof DataTable#oApi\n   */\n  function _fnFilterComplete(settings, input) {\n    var columnsSearch = settings.aoPreSearchCols;\n\n    // In server-side processing all filtering is done by the server, so no point hanging around here\n    if (_fnDataSource(settings) != \"ssp\") {\n      // Check if any of the rows were invalidated\n      _fnFilterData(settings);\n\n      // Start from the full data set\n      settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n      // Global filter first\n      _fnFilter(settings.aiDisplay, settings, input.search, input);\n\n      $.each(settings.searchFixed, function (name, term) {\n        _fnFilter(settings.aiDisplay, settings, term, {});\n      });\n\n      // Then individual column filters\n      for (var i = 0; i < columnsSearch.length; i++) {\n        var col = columnsSearch[i];\n\n        _fnFilter(settings.aiDisplay, settings, col.search, col, i);\n\n        $.each(settings.aoColumns[i].searchFixed, function (name, term) {\n          _fnFilter(settings.aiDisplay, settings, term, {}, i);\n        });\n      }\n\n      // And finally global filtering\n      _fnFilterCustom(settings);\n    }\n\n    // Tell the draw function we have been filtering\n    settings.bFiltered = true;\n\n    _fnCallbackFire(settings, null, \"search\", [settings]);\n  }\n\n  /**\n   * Apply custom filtering functions\n   *\n   * This is legacy now that we have named functions, but it is widely used\n   * from 1.x, so it is not yet deprecated.\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnFilterCustom(settings) {\n    var filters = DataTable.ext.search;\n    var displayRows = settings.aiDisplay;\n    var row, rowIdx;\n\n    for (var i = 0, ien = filters.length; i < ien; i++) {\n      var rows = [];\n\n      // Loop over each row and see if it should be included\n      for (var j = 0, jen = displayRows.length; j < jen; j++) {\n        rowIdx = displayRows[j];\n        row = settings.aoData[rowIdx];\n\n        if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n          rows.push(rowIdx);\n        }\n      }\n\n      // So the array reference doesn't break set the results into the\n      // existing array\n      displayRows.length = 0;\n      displayRows.push.apply(displayRows, rows);\n    }\n  }\n\n  /**\n   * Filter the data table based on user input and draw the table\n   */\n  function _fnFilter(searchRows, settings, input, options, column) {\n    if (input === \"\") {\n      return;\n    }\n\n    var i = 0;\n    var matched = [];\n\n    // Search term can be a function, regex or string - if a string we apply our\n    // smart filtering regex (assuming the options require that)\n    var searchFunc = typeof input === \"function\" ? input : null;\n    var rpSearch =\n      input instanceof RegExp\n        ? input\n        : searchFunc\n        ? null\n        : _fnFilterCreateSearch(input, options);\n\n    // Then for each row, does the test pass. If not, lop the row from the array\n    for (i = 0; i < searchRows.length; i++) {\n      var row = settings.aoData[searchRows[i]];\n      var data =\n        column === undefined ? row._sFilterRow : row._aFilterData[column];\n\n      if (\n        (searchFunc && searchFunc(data, row._aData, searchRows[i], column)) ||\n        (rpSearch && rpSearch.test(data))\n      ) {\n        matched.push(searchRows[i]);\n      }\n    }\n\n    // Mutate the searchRows array\n    searchRows.length = matched.length;\n\n    for (i = 0; i < matched.length; i++) {\n      searchRows[i] = matched[i];\n    }\n  }\n\n  /**\n   * Build a regular expression object suitable for searching a table\n   *  @param {string} sSearch string to search for\n   *  @param {bool} bRegex treat as a regular expression or not\n   *  @param {bool} bSmart perform smart filtering or not\n   *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n   *  @returns {RegExp} constructed object\n   *  @memberof DataTable#oApi\n   */\n  function _fnFilterCreateSearch(search, inOpts) {\n    var not = [];\n    var options = $.extend(\n      {},\n      {\n        boundary: false,\n        caseInsensitive: true,\n        exact: false,\n        regex: false,\n        smart: true,\n      },\n      inOpts\n    );\n\n    if (typeof search !== \"string\") {\n      search = search.toString();\n    }\n\n    // Remove diacritics if normalize is set up to do so\n    search = _normalize(search);\n\n    if (options.exact) {\n      return new RegExp(\n        \"^\" + _fnEscapeRegex(search) + \"$\",\n        options.caseInsensitive ? \"i\" : \"\"\n      );\n    }\n\n    search = options.regex ? search : _fnEscapeRegex(search);\n\n    if (options.smart) {\n      /* For smart filtering we want to allow the search to work regardless of\n       * word order. We also want double quoted text to be preserved, so word\n       * order is important - a la google. And a negative look around for\n       * finding rows which don't contain a given string.\n       *\n       * So this is the sort of thing we want to generate:\n       *\n       * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n       */\n      var parts = search.match(/!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g) || [\n        \"\",\n      ];\n      var a = parts.map(function (word) {\n        var negative = false;\n        var m;\n\n        // Determine if it is a \"does not include\"\n        if (word.charAt(0) === \"!\") {\n          negative = true;\n          word = word.substring(1);\n        }\n\n        // Strip the quotes from around matched phrases\n        if (word.charAt(0) === '\"') {\n          m = word.match(/^\"(.*)\"$/);\n          word = m ? m[1] : word;\n        } else if (word.charAt(0) === \"\\u201C\") {\n          // Smart quote match (iPhone users)\n          m = word.match(/^\\u201C(.*)\\u201D$/);\n          word = m ? m[1] : word;\n        }\n\n        // For our \"not\" case, we need to modify the string that is\n        // allowed to match at the end of the expression.\n        if (negative) {\n          if (word.length > 1) {\n            not.push(\"(?!\" + word + \")\");\n          }\n\n          word = \"\";\n        }\n\n        return word.replace(/\"/g, \"\");\n      });\n\n      var match = not.length ? not.join(\"\") : \"\";\n\n      var boundary = options.boundary ? \"\\\\b\" : \"\";\n\n      search =\n        \"^(?=.*?\" +\n        boundary +\n        a.join(\")(?=.*?\" + boundary) +\n        \")(\" +\n        match +\n        \".)*$\";\n    }\n\n    return new RegExp(search, options.caseInsensitive ? \"i\" : \"\");\n  }\n\n  /**\n   * Escape a string such that it can be used in a regular expression\n   *  @param {string} sVal string to escape\n   *  @returns {string} escaped string\n   *  @memberof DataTable#oApi\n   */\n  var _fnEscapeRegex = DataTable.util.escapeRegex;\n\n  var __filter_div = $(\"<div>\")[0];\n  var __filter_div_textContent = __filter_div.textContent !== undefined;\n\n  // Update the filtering data for each row if needed (by invalidation or first run)\n  function _fnFilterData(settings) {\n    var columns = settings.aoColumns;\n    var data = settings.aoData;\n    var column;\n    var j, jen, filterData, cellData, row;\n    var wasInvalidated = false;\n\n    for (var rowIdx = 0; rowIdx < data.length; rowIdx++) {\n      if (!data[rowIdx]) {\n        continue;\n      }\n\n      row = data[rowIdx];\n\n      if (!row._aFilterData) {\n        filterData = [];\n\n        for (j = 0, jen = columns.length; j < jen; j++) {\n          column = columns[j];\n\n          if (column.bSearchable) {\n            cellData = _fnGetCellData(settings, rowIdx, j, \"filter\");\n\n            // Search in DataTables is string based\n            if (cellData === null) {\n              cellData = \"\";\n            }\n\n            if (typeof cellData !== \"string\" && cellData.toString) {\n              cellData = cellData.toString();\n            }\n          } else {\n            cellData = \"\";\n          }\n\n          // If it looks like there is an HTML entity in the string,\n          // attempt to decode it so sorting works as expected. Note that\n          // we could use a single line of jQuery to do this, but the DOM\n          // method used here is much faster https://jsperf.com/html-decode\n          if (cellData.indexOf && cellData.indexOf(\"&\") !== -1) {\n            __filter_div.innerHTML = cellData;\n            cellData = __filter_div_textContent\n              ? __filter_div.textContent\n              : __filter_div.innerText;\n          }\n\n          if (cellData.replace) {\n            cellData = cellData.replace(/[\\r\\n\\u2028]/g, \"\");\n          }\n\n          filterData.push(cellData);\n        }\n\n        row._aFilterData = filterData;\n        row._sFilterRow = filterData.join(\"  \");\n        wasInvalidated = true;\n      }\n    }\n\n    return wasInvalidated;\n  }\n\n  /**\n   * Draw the table for the first time, adding all required features\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnInitialise(settings) {\n    var i;\n    var init = settings.oInit;\n    var deferLoading = settings.deferLoading;\n    var dataSrc = _fnDataSource(settings);\n\n    // Ensure that the table data is fully initialised\n    if (!settings.bInitialised) {\n      setTimeout(function () {\n        _fnInitialise(settings);\n      }, 200);\n      return;\n    }\n\n    // Build the header / footer for the table\n    _fnBuildHead(settings, \"header\");\n    _fnBuildHead(settings, \"footer\");\n\n    // Load the table's state (if needed) and then render around it and draw\n    _fnLoadState(settings, init, function () {\n      // Then draw the header / footer\n      _fnDrawHead(settings, settings.aoHeader);\n      _fnDrawHead(settings, settings.aoFooter);\n\n      // Cache the paging start point, as the first redraw will reset it\n      var iAjaxStart = settings.iInitDisplayStart;\n\n      // Local data load\n      // Check if there is data passing into the constructor\n      if (init.aaData) {\n        for (i = 0; i < init.aaData.length; i++) {\n          _fnAddData(settings, init.aaData[i]);\n        }\n      } else if (deferLoading || dataSrc == \"dom\") {\n        // Grab the data from the page\n        _fnAddTr(settings, $(settings.nTBody).children(\"tr\"));\n      }\n\n      // Filter not yet applied - copy the display master\n      settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n      // Enable features\n      _fnAddOptionsHtml(settings);\n      _fnSortInit(settings);\n\n      _colGroup(settings);\n\n      /* Okay to show that something is going on now */\n      _fnProcessingDisplay(settings, true);\n\n      _fnCallbackFire(settings, null, \"preInit\", [settings], true);\n\n      // If there is default sorting required - let's do it. The sort function\n      // will do the drawing for us. Otherwise we draw the table regardless of the\n      // Ajax source - this allows the table to look initialised for Ajax sourcing\n      // data (show 'loading' message possibly)\n      _fnReDraw(settings);\n\n      // Server-side processing init complete is done by _fnAjaxUpdateDraw\n      if (dataSrc != \"ssp\" || deferLoading) {\n        // if there is an ajax source load the data\n        if (dataSrc == \"ajax\") {\n          _fnBuildAjax(\n            settings,\n            {},\n            function (json) {\n              var aData = _fnAjaxDataSrc(settings, json);\n\n              // Got the data - add it to the table\n              for (i = 0; i < aData.length; i++) {\n                _fnAddData(settings, aData[i]);\n              }\n\n              // Reset the init display for cookie saving. We've already done\n              // a filter, and therefore cleared it before. So we need to make\n              // it appear 'fresh'\n              settings.iInitDisplayStart = iAjaxStart;\n\n              _fnReDraw(settings);\n              _fnProcessingDisplay(settings, false);\n              _fnInitComplete(settings);\n            },\n            settings\n          );\n        } else {\n          _fnInitComplete(settings);\n          _fnProcessingDisplay(settings, false);\n        }\n      }\n    });\n  }\n\n  /**\n   * Draw the table for the first time, adding all required features\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnInitComplete(settings) {\n    if (settings._bInitComplete) {\n      return;\n    }\n\n    var args = [settings, settings.json];\n\n    settings._bInitComplete = true;\n\n    // Table is fully set up and we have data, so calculate the\n    // column widths\n    _fnAdjustColumnSizing(settings);\n\n    _fnCallbackFire(settings, null, \"plugin-init\", args, true);\n    _fnCallbackFire(settings, \"aoInitComplete\", \"init\", args, true);\n  }\n\n  function _fnLengthChange(settings, val) {\n    var len = parseInt(val, 10);\n    settings._iDisplayLength = len;\n\n    _fnLengthOverflow(settings);\n\n    // Fire length change event\n    _fnCallbackFire(settings, null, \"length\", [settings, len]);\n  }\n\n  /**\n   * Alter the display settings to change the page\n   *  @param {object} settings DataTables settings object\n   *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n   *    \"next\" or \"last\" or page number to jump to (integer)\n   *  @param [bool] redraw Automatically draw the update or not\n   *  @returns {bool} true page has changed, false - no change\n   *  @memberof DataTable#oApi\n   */\n  function _fnPageChange(settings, action, redraw) {\n    var start = settings._iDisplayStart,\n      len = settings._iDisplayLength,\n      records = settings.fnRecordsDisplay();\n\n    if (records === 0 || len === -1) {\n      start = 0;\n    } else if (typeof action === \"number\") {\n      start = action * len;\n\n      if (start > records) {\n        start = 0;\n      }\n    } else if (action == \"first\") {\n      start = 0;\n    } else if (action == \"previous\") {\n      start = len >= 0 ? start - len : 0;\n\n      if (start < 0) {\n        start = 0;\n      }\n    } else if (action == \"next\") {\n      if (start + len < records) {\n        start += len;\n      }\n    } else if (action == \"last\") {\n      start = Math.floor((records - 1) / len) * len;\n    } else if (action === \"ellipsis\") {\n      return;\n    } else {\n      _fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n    }\n\n    var changed = settings._iDisplayStart !== start;\n    settings._iDisplayStart = start;\n\n    _fnCallbackFire(settings, null, changed ? \"page\" : \"page-nc\", [settings]);\n\n    if (changed && redraw) {\n      _fnDraw(settings);\n    }\n\n    return changed;\n  }\n\n  /**\n   * Generate the node required for the processing node\n   *  @param {object} settings DataTables settings object\n   */\n  function _processingHtml(settings) {\n    var table = settings.nTable;\n    var scrolling = settings.oScroll.sX !== \"\" || settings.oScroll.sY !== \"\";\n\n    if (settings.oFeatures.bProcessing) {\n      var n = $(\"<div/>\", {\n        id: settings.sTableId + \"_processing\",\n        class: settings.oClasses.processing.container,\n        role: \"status\",\n      })\n        .html(settings.oLanguage.sProcessing)\n        .append(\"<div><div></div><div></div><div></div><div></div></div>\");\n\n      // Different positioning depending on if scrolling is enabled or not\n      if (scrolling) {\n        n.prependTo($(\"div.dt-scroll\", settings.nTableWrapper));\n      } else {\n        n.insertBefore(table);\n      }\n\n      $(table).on(\"processing.dt.DT\", function (e, s, show) {\n        n.css(\"display\", show ? \"block\" : \"none\");\n      });\n    }\n  }\n\n  /**\n   * Display or hide the processing indicator\n   *  @param {object} settings DataTables settings object\n   *  @param {bool} show Show the processing indicator (true) or not (false)\n   */\n  function _fnProcessingDisplay(settings, show) {\n    // Ignore cases when we are still redrawing\n    if (settings.bDrawing && show === false) {\n      return;\n    }\n\n    _fnCallbackFire(settings, null, \"processing\", [settings, show]);\n  }\n\n  /**\n   * Show the processing element if an action takes longer than a given time\n   *\n   * @param {*} settings DataTables settings object\n   * @param {*} enable Do (true) or not (false) async processing (local feature enablement)\n   * @param {*} run Function to run\n   */\n  function _fnProcessingRun(settings, enable, run) {\n    if (!enable) {\n      // Immediate execution, synchronous\n      run();\n    } else {\n      _fnProcessingDisplay(settings, true);\n\n      // Allow the processing display to show if needed\n      setTimeout(function () {\n        run();\n\n        _fnProcessingDisplay(settings, false);\n      }, 0);\n    }\n  }\n  /**\n   * Add any control elements for the table - specifically scrolling\n   *  @param {object} settings dataTables settings object\n   *  @returns {node} Node to add to the DOM\n   *  @memberof DataTable#oApi\n   */\n  function _fnFeatureHtmlTable(settings) {\n    var table = $(settings.nTable);\n\n    // Scrolling from here on in\n    var scroll = settings.oScroll;\n\n    if (scroll.sX === \"\" && scroll.sY === \"\") {\n      return settings.nTable;\n    }\n\n    var scrollX = scroll.sX;\n    var scrollY = scroll.sY;\n    var classes = settings.oClasses.scrolling;\n    var caption = settings.captionNode;\n    var captionSide = caption ? caption._captionSide : null;\n    var headerClone = $(table[0].cloneNode(false));\n    var footerClone = $(table[0].cloneNode(false));\n    var footer = table.children(\"tfoot\");\n    var _div = \"<div/>\";\n    var size = function (s) {\n      return !s ? null : _fnStringToCss(s);\n    };\n\n    if (!footer.length) {\n      footer = null;\n    }\n\n    /*\n     * The HTML structure that we want to generate in this function is:\n     *  div - scroller\n     *    div - scroll head\n     *      div - scroll head inner\n     *        table - scroll head table\n     *          thead - thead\n     *    div - scroll body\n     *      table - table (master table)\n     *        thead - thead clone for sizing\n     *        tbody - tbody\n     *    div - scroll foot\n     *      div - scroll foot inner\n     *        table - scroll foot table\n     *          tfoot - tfoot\n     */\n    var scroller = $(_div, { class: classes.container })\n      .append(\n        $(_div, { class: classes.header.self })\n          .css({\n            overflow: \"hidden\",\n            position: \"relative\",\n            border: 0,\n            width: scrollX ? size(scrollX) : \"100%\",\n          })\n          .append(\n            $(_div, { class: classes.header.inner })\n              .css({\n                \"box-sizing\": \"content-box\",\n                width: scroll.sXInner || \"100%\",\n              })\n              .append(\n                headerClone\n                  .removeAttr(\"id\")\n                  .css(\"margin-left\", 0)\n                  .append(captionSide === \"top\" ? caption : null)\n                  .append(table.children(\"thead\"))\n              )\n          )\n      )\n      .append(\n        $(_div, { class: classes.body })\n          .css({\n            position: \"relative\",\n            overflow: \"auto\",\n            width: size(scrollX),\n          })\n          .append(table)\n      );\n\n    if (footer) {\n      scroller.append(\n        $(_div, { class: classes.footer.self })\n          .css({\n            overflow: \"hidden\",\n            border: 0,\n            width: scrollX ? size(scrollX) : \"100%\",\n          })\n          .append(\n            $(_div, { class: classes.footer.inner }).append(\n              footerClone\n                .removeAttr(\"id\")\n                .css(\"margin-left\", 0)\n                .append(captionSide === \"bottom\" ? caption : null)\n                .append(table.children(\"tfoot\"))\n            )\n          )\n      );\n    }\n\n    var children = scroller.children();\n    var scrollHead = children[0];\n    var scrollBody = children[1];\n    var scrollFoot = footer ? children[2] : null;\n\n    // When the body is scrolled, then we also want to scroll the headers\n    $(scrollBody).on(\"scroll.DT\", function () {\n      var scrollLeft = this.scrollLeft;\n\n      scrollHead.scrollLeft = scrollLeft;\n\n      if (footer) {\n        scrollFoot.scrollLeft = scrollLeft;\n      }\n    });\n\n    // When focus is put on the header cells, we might need to scroll the body\n    $(\"th, td\", scrollHead).on(\"focus\", function () {\n      var scrollLeft = scrollHead.scrollLeft;\n\n      scrollBody.scrollLeft = scrollLeft;\n\n      if (footer) {\n        scrollBody.scrollLeft = scrollLeft;\n      }\n    });\n\n    $(scrollBody).css(\"max-height\", scrollY);\n    if (!scroll.bCollapse) {\n      $(scrollBody).css(\"height\", scrollY);\n    }\n\n    settings.nScrollHead = scrollHead;\n    settings.nScrollBody = scrollBody;\n    settings.nScrollFoot = scrollFoot;\n\n    // On redraw - align columns\n    settings.aoDrawCallback.push(_fnScrollDraw);\n\n    return scroller[0];\n  }\n\n  /**\n   * Update the header, footer and body tables for resizing - i.e. column\n   * alignment.\n   *\n   * Welcome to the most horrible function DataTables. The process that this\n   * function follows is basically:\n   *   1. Re-create the table inside the scrolling div\n   *   2. Correct colgroup > col values if needed\n   *   3. Copy colgroup > col over to header and footer\n   *   4. Clean up\n   *\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnScrollDraw(settings) {\n    // Given that this is such a monster function, a lot of variables are use\n    // to try and keep the minimised size as small as possible\n    var scroll = settings.oScroll,\n      barWidth = scroll.iBarWidth,\n      divHeader = $(settings.nScrollHead),\n      divHeaderInner = divHeader.children(\"div\"),\n      divHeaderTable = divHeaderInner.children(\"table\"),\n      divBodyEl = settings.nScrollBody,\n      divBody = $(divBodyEl),\n      divFooter = $(settings.nScrollFoot),\n      divFooterInner = divFooter.children(\"div\"),\n      divFooterTable = divFooterInner.children(\"table\"),\n      header = $(settings.nTHead),\n      table = $(settings.nTable),\n      footer =\n        settings.nTFoot && $(\"th, td\", settings.nTFoot).length\n          ? $(settings.nTFoot)\n          : null,\n      browser = settings.oBrowser,\n      headerCopy,\n      footerCopy;\n\n    // If the scrollbar visibility has changed from the last draw, we need to\n    // adjust the column sizes as the table width will have changed to account\n    // for the scrollbar\n    var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\n    if (\n      settings.scrollBarVis !== scrollBarVis &&\n      settings.scrollBarVis !== undefined\n    ) {\n      settings.scrollBarVis = scrollBarVis;\n      _fnAdjustColumnSizing(settings);\n      return; // adjust column sizing will call this function again\n    } else {\n      settings.scrollBarVis = scrollBarVis;\n    }\n\n    // 1. Re-create the table inside the scrolling div\n    // Remove the old minimised thead and tfoot elements in the inner table\n    table.children(\"thead, tfoot\").remove();\n\n    // Clone the current header and footer elements and then place it into the inner table\n    headerCopy = header.clone().prependTo(table);\n    headerCopy.find(\"th, td\").removeAttr(\"tabindex\");\n    headerCopy.find(\"[id]\").removeAttr(\"id\");\n\n    if (footer) {\n      footerCopy = footer.clone().prependTo(table);\n      footerCopy.find(\"[id]\").removeAttr(\"id\");\n    }\n\n    // 2. Correct colgroup > col values if needed\n    // It is possible that the cell sizes are smaller than the content, so we need to\n    // correct colgroup>col for such cases. This can happen if the auto width detection\n    // uses a cell which has a longer string, but isn't the widest! For example\n    // \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\n    // \"Systems Administrator\" is actually the widest string since it doesn't collapse.\n    // Note the use of translating into a column index to get the `col` element. This\n    // is because of Responsive which might remove `col` elements, knocking the alignment\n    // of the indexes out.\n    if (settings.aiDisplay.length) {\n      // Get the column sizes from the first row in the table\n      var colSizes = table\n        .children(\"tbody\")\n        .eq(0)\n        .children(\"tr\")\n        .eq(0)\n        .children(\"th, td\")\n        .map(function (vis) {\n          return {\n            idx: _fnVisibleToColumnIndex(settings, vis),\n            width: $(this).outerWidth(),\n          };\n        });\n\n      // Check against what the colgroup > col is set to and correct if needed\n      for (var i = 0; i < colSizes.length; i++) {\n        var colEl = settings.aoColumns[colSizes[i].idx].colEl[0];\n        var colWidth = colEl.style.width.replace(\"px\", \"\");\n\n        if (colWidth !== colSizes[i].width) {\n          colEl.style.width = colSizes[i].width + \"px\";\n        }\n      }\n    }\n\n    // 3. Copy the colgroup over to the header and footer\n    divHeaderTable.find(\"colgroup\").remove();\n\n    divHeaderTable.append(settings.colgroup.clone());\n\n    if (footer) {\n      divFooterTable.find(\"colgroup\").remove();\n\n      divFooterTable.append(settings.colgroup.clone());\n    }\n\n    // \"Hide\" the header and footer that we used for the sizing. We need to keep\n    // the content of the cell so that the width applied to the header and body\n    // both match, but we want to hide it completely.\n    $(\"th, td\", headerCopy).each(function () {\n      $(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n    });\n\n    if (footer) {\n      $(\"th, td\", footerCopy).each(function () {\n        $(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n      });\n    }\n\n    // 4. Clean up\n    // Figure out if there are scrollbar present - if so then we need a the header and footer to\n    // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n    var isScrolling =\n      Math.floor(table.height()) > divBodyEl.clientHeight ||\n      divBody.css(\"overflow-y\") == \"scroll\";\n    var paddingSide = \"padding\" + (browser.bScrollbarLeft ? \"Left\" : \"Right\");\n\n    // Set the width's of the header and footer tables\n    var outerWidth = table.outerWidth();\n\n    divHeaderTable.css(\"width\", _fnStringToCss(outerWidth));\n    divHeaderInner\n      .css(\"width\", _fnStringToCss(outerWidth))\n      .css(paddingSide, isScrolling ? barWidth + \"px\" : \"0px\");\n\n    if (footer) {\n      divFooterTable.css(\"width\", _fnStringToCss(outerWidth));\n      divFooterInner\n        .css(\"width\", _fnStringToCss(outerWidth))\n        .css(paddingSide, isScrolling ? barWidth + \"px\" : \"0px\");\n    }\n\n    // Correct DOM ordering for colgroup - comes before the thead\n    table.children(\"colgroup\").prependTo(table);\n\n    // Adjust the position of the header in case we loose the y-scrollbar\n    divBody.trigger(\"scroll\");\n\n    // If sorting or filtering has occurred, jump the scrolling back to the top\n    // only if we aren't holding the position\n    if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n      divBodyEl.scrollTop = 0;\n    }\n  }\n\n  /**\n   * Calculate the width of columns for the table\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnCalculateColumnWidths(settings) {\n    // Not interested in doing column width calculation if auto-width is disabled\n    if (!settings.oFeatures.bAutoWidth) {\n      return;\n    }\n\n    var table = settings.nTable,\n      columns = settings.aoColumns,\n      scroll = settings.oScroll,\n      scrollY = scroll.sY,\n      scrollX = scroll.sX,\n      scrollXInner = scroll.sXInner,\n      visibleColumns = _fnGetColumns(settings, \"bVisible\"),\n      tableWidthAttr = table.getAttribute(\"width\"), // from DOM element\n      tableContainer = table.parentNode,\n      i,\n      column,\n      columnIdx;\n\n    var styleWidth = table.style.width;\n\n    // If there is no width applied as a CSS style or as an attribute, we assume that\n    // the width is intended to be 100%, which is usually is in CSS, but it is very\n    // difficult to correctly parse the rules to get the final result.\n    if (!styleWidth && !tableWidthAttr) {\n      table.style.width = \"100%\";\n      styleWidth = \"100%\";\n    }\n\n    if (styleWidth && styleWidth.indexOf(\"%\") !== -1) {\n      tableWidthAttr = styleWidth;\n    }\n\n    // Let plug-ins know that we are doing a recalc, in case they have changed any of the\n    // visible columns their own way (e.g. Responsive uses display:none).\n    _fnCallbackFire(\n      settings,\n      null,\n      \"column-calc\",\n      { visible: visibleColumns },\n      false\n    );\n\n    // Construct a single row, worst case, table with the widest\n    // node in the data, assign any user defined widths, then insert it into\n    // the DOM and allow the browser to do all the hard work of calculating\n    // table widths\n    var tmpTable = $(table.cloneNode())\n      .css(\"visibility\", \"hidden\")\n      .removeAttr(\"id\");\n\n    // Clean up the table body\n    tmpTable.append(\"<tbody>\");\n    var tr = $(\"<tr/>\").appendTo(tmpTable.find(\"tbody\"));\n\n    // Clone the table header and footer - we can't use the header / footer\n    // from the cloned table, since if scrolling is active, the table's\n    // real header and footer are contained in different table tags\n    tmpTable\n      .append($(settings.nTHead).clone())\n      .append($(settings.nTFoot).clone());\n\n    // Remove any assigned widths from the footer (from scrolling)\n    tmpTable.find(\"tfoot th, tfoot td\").css(\"width\", \"\");\n\n    // Apply custom sizing to the cloned header\n    tmpTable.find(\"thead th, thead td\").each(function () {\n      // Get the `width` from the header layout\n      var width = _fnColumnsSumWidth(settings, this, true, false);\n\n      if (width) {\n        this.style.width = width;\n\n        // For scrollX we need to force the column width otherwise the\n        // browser will collapse it. If this width is smaller than the\n        // width the column requires, then it will have no effect\n        if (scrollX) {\n          $(this).append(\n            $(\"<div/>\").css({\n              width: width,\n              margin: 0,\n              padding: 0,\n              border: 0,\n              height: 1,\n            })\n          );\n        }\n      } else {\n        this.style.width = \"\";\n      }\n    });\n\n    // Find the widest piece of data for each column and put it into the table\n    for (i = 0; i < visibleColumns.length; i++) {\n      columnIdx = visibleColumns[i];\n      column = columns[columnIdx];\n\n      var longest = _fnGetMaxLenString(settings, columnIdx);\n      var autoClass = _ext.type.className[column.sType];\n      var text = longest + column.sContentPadding;\n      var insert =\n        longest.indexOf(\"<\") === -1 ? document.createTextNode(text) : text;\n\n      $(\"<td/>\")\n        .addClass(autoClass)\n        .addClass(column.sClass)\n        .append(insert)\n        .appendTo(tr);\n    }\n\n    // Tidy the temporary table - remove name attributes so there aren't\n    // duplicated in the dom (radio elements for example)\n    $(\"[name]\", tmpTable).removeAttr(\"name\");\n\n    // Table has been built, attach to the document so we can work with it.\n    // A holding element is used, positioned at the top of the container\n    // with minimal height, so it has no effect on if the container scrolls\n    // or not. Otherwise it might trigger scrolling when it actually isn't\n    // needed\n    var holder = $(\"<div/>\")\n      .css(\n        scrollX || scrollY\n          ? {\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              height: 1,\n              right: 0,\n              overflow: \"hidden\",\n            }\n          : {}\n      )\n      .append(tmpTable)\n      .appendTo(tableContainer);\n\n    // When scrolling (X or Y) we want to set the width of the table as\n    // appropriate. However, when not scrolling leave the table width as it\n    // is. This results in slightly different, but I think correct behaviour\n    if (scrollX && scrollXInner) {\n      tmpTable.width(scrollXInner);\n    } else if (scrollX) {\n      tmpTable.css(\"width\", \"auto\");\n      tmpTable.removeAttr(\"width\");\n\n      // If there is no width attribute or style, then allow the table to\n      // collapse\n      if (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {\n        tmpTable.width(tableContainer.clientWidth);\n      }\n    } else if (scrollY) {\n      tmpTable.width(tableContainer.clientWidth);\n    } else if (tableWidthAttr) {\n      tmpTable.width(tableWidthAttr);\n    }\n\n    // Get the width of each column in the constructed table\n    var total = 0;\n    var bodyCells = tmpTable.find(\"tbody tr\").eq(0).children();\n\n    for (i = 0; i < visibleColumns.length; i++) {\n      // Use getBounding for sub-pixel accuracy, which we then want to round up!\n      var bounding = bodyCells[i].getBoundingClientRect().width;\n\n      // Total is tracked to remove any sub-pixel errors as the outerWidth\n      // of the table might not equal the total given here\n      total += bounding;\n\n      // Width for each column to use\n      columns[visibleColumns[i]].sWidth = _fnStringToCss(bounding);\n    }\n\n    table.style.width = _fnStringToCss(total);\n\n    // Finished with the table - ditch it\n    holder.remove();\n\n    // If there is a width attr, we want to attach an event listener which\n    // allows the table sizing to automatically adjust when the window is\n    // resized. Use the width attr rather than CSS, since we can't know if the\n    // CSS is a relative value or absolute - DOM read is always px.\n    if (tableWidthAttr) {\n      table.style.width = _fnStringToCss(tableWidthAttr);\n    }\n\n    if ((tableWidthAttr || scrollX) && !settings._reszEvt) {\n      var bindResize = function () {\n        $(window).on(\n          \"resize.DT-\" + settings.sInstance,\n          DataTable.util.throttle(function () {\n            if (!settings.bDestroying) {\n              _fnAdjustColumnSizing(settings);\n            }\n          })\n        );\n      };\n\n      bindResize();\n\n      settings._reszEvt = true;\n    }\n  }\n\n  /**\n   * Get the maximum strlen for each data column\n   *  @param {object} settings dataTables settings object\n   *  @param {int} colIdx column of interest\n   *  @returns {string} string of the max length\n   *  @memberof DataTable#oApi\n   */\n  function _fnGetMaxLenString(settings, colIdx) {\n    var column = settings.aoColumns[colIdx];\n\n    if (!column.maxLenString) {\n      var s,\n        max = \"\",\n        maxLen = -1;\n\n      for (var i = 0, ien = settings.aiDisplayMaster.length; i < ien; i++) {\n        var rowIdx = settings.aiDisplayMaster[i];\n        var data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\n\n        var cellString =\n          data && typeof data === \"object\" && data.nodeType\n            ? data.innerHTML\n            : data + \"\";\n\n        // Remove id / name attributes from elements so they\n        // don't interfere with existing elements\n        cellString = cellString\n          .replace(/id=\".*?\"/g, \"\")\n          .replace(/name=\".*?\"/g, \"\");\n\n        s = _stripHtml(cellString).replace(/&nbsp;/g, \" \");\n\n        if (s.length > maxLen) {\n          // We want the HTML in the string, but the length that\n          // is important is the stripped string\n          max = cellString;\n          maxLen = s.length;\n        }\n      }\n\n      column.maxLenString = max;\n    }\n\n    return column.maxLenString;\n  }\n\n  /**\n   * Append a CSS unit (only if required) to a string\n   *  @param {string} value to css-ify\n   *  @returns {string} value with css unit\n   *  @memberof DataTable#oApi\n   */\n  function _fnStringToCss(s) {\n    if (s === null) {\n      return \"0px\";\n    }\n\n    if (typeof s == \"number\") {\n      return s < 0 ? \"0px\" : s + \"px\";\n    }\n\n    // Check it has a unit character already\n    return s.match(/\\d$/) ? s + \"px\" : s;\n  }\n\n  /**\n   * Re-insert the `col` elements for current visibility\n   *\n   * @param {*} settings DT settings\n   */\n  function _colGroup(settings) {\n    var cols = settings.aoColumns;\n\n    settings.colgroup.empty();\n\n    for (i = 0; i < cols.length; i++) {\n      if (cols[i].bVisible) {\n        settings.colgroup.append(cols[i].colEl);\n      }\n    }\n  }\n\n  function _fnSortInit(settings) {\n    var target = settings.nTHead;\n    var headerRows = target.querySelectorAll(\"tr\");\n    var legacyTop = settings.bSortCellsTop;\n    var notSelector =\n      ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])';\n\n    // Legacy support for `orderCellsTop`\n    if (legacyTop === true) {\n      target = headerRows[0];\n    } else if (legacyTop === false) {\n      target = headerRows[headerRows.length - 1];\n    }\n\n    _fnSortAttachListener(\n      settings,\n      target,\n      target === settings.nTHead\n        ? \"tr\" +\n            notSelector +\n            \" th\" +\n            notSelector +\n            \", tr\" +\n            notSelector +\n            \" td\" +\n            notSelector\n        : \"th\" + notSelector + \", td\" + notSelector\n    );\n\n    // Need to resolve the user input array into our internal structure\n    var order = [];\n    _fnSortResolve(settings, order, settings.aaSorting);\n\n    settings.aaSorting = order;\n  }\n\n  function _fnSortAttachListener(settings, node, selector, column, callback) {\n    _fnBindAction(node, selector, function (e) {\n      var run = false;\n      var columns =\n        column === undefined ? _fnColumnsFromHeader(e.target) : [column];\n\n      if (columns.length) {\n        for (var i = 0, ien = columns.length; i < ien; i++) {\n          var ret = _fnSortAdd(settings, columns[i], i, e.shiftKey);\n\n          if (ret !== false) {\n            run = true;\n          }\n\n          // If the first entry is no sort, then subsequent\n          // sort columns are ignored\n          if (\n            settings.aaSorting.length === 1 &&\n            settings.aaSorting[0][1] === \"\"\n          ) {\n            break;\n          }\n        }\n\n        if (run) {\n          _fnProcessingRun(settings, true, function () {\n            _fnSort(settings);\n            _fnSortDisplay(settings, settings.aiDisplay);\n\n            _fnReDraw(settings, false, false);\n\n            if (callback) {\n              callback();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Sort the display array to match the master's order\n   * @param {*} settings\n   */\n  function _fnSortDisplay(settings, display) {\n    if (display.length < 2) {\n      return;\n    }\n\n    var master = settings.aiDisplayMaster;\n    var masterMap = {};\n    var map = {};\n    var i;\n\n    // Rather than needing an `indexOf` on master array, we can create a map\n    for (i = 0; i < master.length; i++) {\n      masterMap[master[i]] = i;\n    }\n\n    // And then cache what would be the indexOf fom the display\n    for (i = 0; i < display.length; i++) {\n      map[display[i]] = masterMap[display[i]];\n    }\n\n    display.sort(function (a, b) {\n      // Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`\n      return map[a] - map[b];\n    });\n  }\n\n  function _fnSortResolve(settings, nestedSort, sort) {\n    var push = function (a) {\n      if ($.isPlainObject(a)) {\n        if (a.idx !== undefined) {\n          // Index based ordering\n          nestedSort.push([a.idx, a.dir]);\n        } else if (a.name) {\n          // Name based ordering\n          var cols = _pluck(settings.aoColumns, \"sName\");\n          var idx = cols.indexOf(a.name);\n\n          if (idx !== -1) {\n            nestedSort.push([idx, a.dir]);\n          }\n        }\n      } else {\n        // Plain column index and direction pair\n        nestedSort.push(a);\n      }\n    };\n\n    if ($.isPlainObject(sort)) {\n      // Object\n      push(sort);\n    } else if (sort.length && typeof sort[0] === \"number\") {\n      // 1D array\n      push(sort);\n    } else if (sort.length) {\n      // 2D array\n      for (var z = 0; z < sort.length; z++) {\n        push(sort[z]); // Object or array\n      }\n    }\n  }\n\n  function _fnSortFlatten(settings) {\n    var i,\n      k,\n      kLen,\n      aSort = [],\n      extSort = DataTable.ext.type.order,\n      aoColumns = settings.aoColumns,\n      aDataSort,\n      iCol,\n      sType,\n      srcCol,\n      fixed = settings.aaSortingFixed,\n      fixedObj = $.isPlainObject(fixed),\n      nestedSort = [];\n\n    if (!settings.oFeatures.bSort) {\n      return aSort;\n    }\n\n    // Build the sort array, with pre-fix and post-fix options if they have been\n    // specified\n    if (Array.isArray(fixed)) {\n      _fnSortResolve(settings, nestedSort, fixed);\n    }\n\n    if (fixedObj && fixed.pre) {\n      _fnSortResolve(settings, nestedSort, fixed.pre);\n    }\n\n    _fnSortResolve(settings, nestedSort, settings.aaSorting);\n\n    if (fixedObj && fixed.post) {\n      _fnSortResolve(settings, nestedSort, fixed.post);\n    }\n\n    for (i = 0; i < nestedSort.length; i++) {\n      srcCol = nestedSort[i][0];\n\n      if (aoColumns[srcCol]) {\n        aDataSort = aoColumns[srcCol].aDataSort;\n\n        for (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n          iCol = aDataSort[k];\n          sType = aoColumns[iCol].sType || \"string\";\n\n          if (nestedSort[i]._idx === undefined) {\n            nestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(\n              nestedSort[i][1]\n            );\n          }\n\n          if (nestedSort[i][1]) {\n            aSort.push({\n              src: srcCol,\n              col: iCol,\n              dir: nestedSort[i][1],\n              index: nestedSort[i]._idx,\n              type: sType,\n              formatter: extSort[sType + \"-pre\"],\n              sorter: extSort[sType + \"-\" + nestedSort[i][1]],\n            });\n          }\n        }\n      }\n    }\n\n    return aSort;\n  }\n\n  /**\n   * Change the order of the table\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnSort(oSettings, col, dir) {\n    var i,\n      ien,\n      iLen,\n      aiOrig = [],\n      extSort = DataTable.ext.type.order,\n      aoData = oSettings.aoData,\n      sortCol,\n      displayMaster = oSettings.aiDisplayMaster,\n      aSort;\n\n    // Allow a specific column to be sorted, which will _not_ alter the display\n    // master\n    if (col !== undefined) {\n      var srcCol = oSettings.aoColumns[col];\n      aSort = [\n        {\n          src: col,\n          col: col,\n          dir: dir,\n          index: 0,\n          type: srcCol.sType,\n          formatter: extSort[srcCol.sType + \"-pre\"],\n          sorter: extSort[srcCol.sType + \"-\" + dir],\n        },\n      ];\n      displayMaster = displayMaster.slice();\n    } else {\n      aSort = _fnSortFlatten(oSettings);\n    }\n\n    for (i = 0, ien = aSort.length; i < ien; i++) {\n      sortCol = aSort[i];\n\n      // Load the data needed for the sort, for each cell\n      _fnSortData(oSettings, sortCol.col);\n    }\n\n    /* No sorting required if server-side or no sorting array */\n    if (_fnDataSource(oSettings) != \"ssp\" && aSort.length !== 0) {\n      // Reset the initial positions on each pass so we get a stable sort\n      for (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n        aiOrig[i] = i;\n      }\n\n      // If the first sort is desc, then reverse the array to preserve original\n      // order, just in reverse\n      if (\n        aSort.length &&\n        aSort[0].dir === \"desc\" &&\n        oSettings.orderDescReverse\n      ) {\n        aiOrig.reverse();\n      }\n\n      /* Do the sort - here we want multi-column sorting based on a given data source (column)\n       * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n       * follow on it's own, but this is what we want (example two column sorting):\n       *  fnLocalSorting = function(a,b){\n       *    var test;\n       *    test = oSort['string-asc']('data11', 'data12');\n       *      if (test !== 0)\n       *        return test;\n       *    test = oSort['numeric-desc']('data21', 'data22');\n       *    if (test !== 0)\n       *      return test;\n       *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n       *  }\n       * Basically we have a test for each sorting column, if the data in that column is equal,\n       * test the next column. If all columns match, then we use a numeric sort on the row\n       * positions in the original data array to provide a stable sort.\n       */\n      displayMaster.sort(function (a, b) {\n        var x,\n          y,\n          k,\n          test,\n          sort,\n          len = aSort.length,\n          dataA = aoData[a]._aSortData,\n          dataB = aoData[b]._aSortData;\n\n        for (k = 0; k < len; k++) {\n          sort = aSort[k];\n\n          // Data, which may have already been through a `-pre` function\n          x = dataA[sort.col];\n          y = dataB[sort.col];\n\n          if (sort.sorter) {\n            // If there is a custom sorter (`-asc` or `-desc`) for this\n            // data type, use it\n            test = sort.sorter(x, y);\n\n            if (test !== 0) {\n              return test;\n            }\n          } else {\n            // Otherwise, use generic sorting\n            test = x < y ? -1 : x > y ? 1 : 0;\n\n            if (test !== 0) {\n              return sort.dir === \"asc\" ? test : -test;\n            }\n          }\n        }\n\n        x = aiOrig[a];\n        y = aiOrig[b];\n\n        return x < y ? -1 : x > y ? 1 : 0;\n      });\n    } else if (aSort.length === 0) {\n      // Apply index order\n      displayMaster.sort(function (x, y) {\n        return x < y ? -1 : x > y ? 1 : 0;\n      });\n    }\n\n    if (col === undefined) {\n      // Tell the draw function that we have sorted the data\n      oSettings.bSorted = true;\n      oSettings.sortDetails = aSort;\n\n      _fnCallbackFire(oSettings, null, \"order\", [oSettings, aSort]);\n    }\n\n    return displayMaster;\n  }\n\n  /**\n   * Function to run on user sort request\n   *  @param {object} settings dataTables settings object\n   *  @param {node} attachTo node to attach the handler to\n   *  @param {int} colIdx column sorting index\n   *  @param {int} addIndex Counter\n   *  @param {boolean} [shift=false] Shift click add\n   *  @param {function} [callback] callback function\n   *  @memberof DataTable#oApi\n   */\n  function _fnSortAdd(settings, colIdx, addIndex, shift) {\n    var col = settings.aoColumns[colIdx];\n    var sorting = settings.aaSorting;\n    var asSorting = col.asSorting;\n    var nextSortIdx;\n    var next = function (a, overflow) {\n      var idx = a._idx;\n      if (idx === undefined) {\n        idx = asSorting.indexOf(a[1]);\n      }\n\n      return idx + 1 < asSorting.length ? idx + 1 : overflow ? null : 0;\n    };\n\n    if (!col.bSortable) {\n      return false;\n    }\n\n    // Convert to 2D array if needed\n    if (typeof sorting[0] === \"number\") {\n      sorting = settings.aaSorting = [sorting];\n    }\n\n    // If appending the sort then we are multi-column sorting\n    if ((shift || addIndex) && settings.oFeatures.bSortMulti) {\n      // Are we already doing some kind of sort on this column?\n      var sortIdx = _pluck(sorting, \"0\").indexOf(colIdx);\n\n      if (sortIdx !== -1) {\n        // Yes, modify the sort\n        nextSortIdx = next(sorting[sortIdx], true);\n\n        if (nextSortIdx === null && sorting.length === 1) {\n          nextSortIdx = 0; // can't remove sorting completely\n        }\n\n        if (nextSortIdx === null) {\n          sorting.splice(sortIdx, 1);\n        } else {\n          sorting[sortIdx][1] = asSorting[nextSortIdx];\n          sorting[sortIdx]._idx = nextSortIdx;\n        }\n      } else if (shift) {\n        // No sort on this column yet, being added by shift click\n        // add it as itself\n        sorting.push([colIdx, asSorting[0], 0]);\n        sorting[sorting.length - 1]._idx = 0;\n      } else {\n        // No sort on this column yet, being added from a colspan\n        // so add with same direction as first column\n        sorting.push([colIdx, sorting[0][1], 0]);\n        sorting[sorting.length - 1]._idx = 0;\n      }\n    } else if (sorting.length && sorting[0][0] == colIdx) {\n      // Single column - already sorting on this column, modify the sort\n      nextSortIdx = next(sorting[0]);\n\n      sorting.length = 1;\n      sorting[0][1] = asSorting[nextSortIdx];\n      sorting[0]._idx = nextSortIdx;\n    } else {\n      // Single column - sort only on this column\n      sorting.length = 0;\n      sorting.push([colIdx, asSorting[0]]);\n      sorting[0]._idx = 0;\n    }\n  }\n\n  /**\n   * Set the sorting classes on table's body, Note: it is safe to call this function\n   * when bSort and bSortClasses are false\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnSortingClasses(settings) {\n    var oldSort = settings.aLastSort;\n    var sortClass = settings.oClasses.order.position;\n    var sort = _fnSortFlatten(settings);\n    var features = settings.oFeatures;\n    var i, ien, colIdx;\n\n    if (features.bSort && features.bSortClasses) {\n      // Remove old sorting classes\n      for (i = 0, ien = oldSort.length; i < ien; i++) {\n        colIdx = oldSort[i].src;\n\n        // Remove column sorting\n        $(_pluck(settings.aoData, \"anCells\", colIdx)).removeClass(\n          sortClass + (i < 2 ? i + 1 : 3)\n        );\n      }\n\n      // Add new column sorting\n      for (i = 0, ien = sort.length; i < ien; i++) {\n        colIdx = sort[i].src;\n\n        $(_pluck(settings.aoData, \"anCells\", colIdx)).addClass(\n          sortClass + (i < 2 ? i + 1 : 3)\n        );\n      }\n    }\n\n    settings.aLastSort = sort;\n  }\n\n  // Get the data to sort a column, be it from cache, fresh (populating the\n  // cache), or from a sort formatter\n  function _fnSortData(settings, colIdx) {\n    // Custom sorting function - provided by the sort data type\n    var column = settings.aoColumns[colIdx];\n    var customSort = DataTable.ext.order[column.sSortDataType];\n    var customData;\n\n    if (customSort) {\n      customData = customSort.call(\n        settings.oInstance,\n        settings,\n        colIdx,\n        _fnColumnIndexToVisible(settings, colIdx)\n      );\n    }\n\n    // Use / populate cache\n    var row, cellData;\n    var formatter = DataTable.ext.type.order[column.sType + \"-pre\"];\n    var data = settings.aoData;\n\n    for (var rowIdx = 0; rowIdx < data.length; rowIdx++) {\n      // Sparse array\n      if (!data[rowIdx]) {\n        continue;\n      }\n\n      row = data[rowIdx];\n\n      if (!row._aSortData) {\n        row._aSortData = [];\n      }\n\n      if (!row._aSortData[colIdx] || customSort) {\n        cellData = customSort\n          ? customData[rowIdx] // If there was a custom sort function, use data from there\n          : _fnGetCellData(settings, rowIdx, colIdx, \"sort\");\n\n        row._aSortData[colIdx] = formatter\n          ? formatter(cellData, settings)\n          : cellData;\n      }\n    }\n  }\n\n  /**\n   * State information for a table\n   *\n   * @param {*} settings\n   * @returns State object\n   */\n  function _fnSaveState(settings) {\n    if (settings._bLoadingState) {\n      return;\n    }\n\n    /* Store the interesting variables */\n    var state = {\n      time: +new Date(),\n      start: settings._iDisplayStart,\n      length: settings._iDisplayLength,\n      order: $.extend(true, [], settings.aaSorting),\n      search: $.extend({}, settings.oPreviousSearch),\n      columns: settings.aoColumns.map(function (col, i) {\n        return {\n          visible: col.bVisible,\n          search: $.extend({}, settings.aoPreSearchCols[i]),\n        };\n      }),\n    };\n\n    settings.oSavedState = state;\n    _fnCallbackFire(settings, \"aoStateSaveParams\", \"stateSaveParams\", [\n      settings,\n      state,\n    ]);\n\n    if (settings.oFeatures.bStateSave && !settings.bDestroying) {\n      settings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n    }\n  }\n\n  /**\n   * Attempt to load a saved table state\n   *  @param {object} oSettings dataTables settings object\n   *  @param {object} oInit DataTables init object so we can override settings\n   *  @param {function} callback Callback to execute when the state has been loaded\n   *  @memberof DataTable#oApi\n   */\n  function _fnLoadState(settings, init, callback) {\n    if (!settings.oFeatures.bStateSave) {\n      callback();\n      return;\n    }\n\n    var loaded = function (state) {\n      _fnImplementState(settings, state, callback);\n    };\n\n    var state = settings.fnStateLoadCallback.call(\n      settings.oInstance,\n      settings,\n      loaded\n    );\n\n    if (state !== undefined) {\n      _fnImplementState(settings, state, callback);\n    }\n    // otherwise, wait for the loaded callback to be executed\n\n    return true;\n  }\n\n  function _fnImplementState(settings, s, callback) {\n    var i, ien;\n    var columns = settings.aoColumns;\n    settings._bLoadingState = true;\n\n    // When StateRestore was introduced the state could now be implemented at any time\n    // Not just initialisation. To do this an api instance is required in some places\n    var api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n    if (!s || !s.time) {\n      settings._bLoadingState = false;\n      callback();\n      return;\n    }\n\n    // Reject old data\n    var duration = settings.iStateDuration;\n    if (duration > 0 && s.time < +new Date() - duration * 1000) {\n      settings._bLoadingState = false;\n      callback();\n      return;\n    }\n\n    // Allow custom and plug-in manipulation functions to alter the saved data set and\n    // cancelling of loading by returning false\n    var abStateLoad = _fnCallbackFire(\n      settings,\n      \"aoStateLoadParams\",\n      \"stateLoadParams\",\n      [settings, s]\n    );\n    if (abStateLoad.indexOf(false) !== -1) {\n      settings._bLoadingState = false;\n      callback();\n      return;\n    }\n\n    // Number of columns have changed - all bets are off, no restore of settings\n    if (s.columns && columns.length !== s.columns.length) {\n      settings._bLoadingState = false;\n      callback();\n      return;\n    }\n\n    // Store the saved state so it might be accessed at any time\n    settings.oLoadedState = $.extend(true, {}, s);\n\n    // This is needed for ColReorder, which has to happen first to allow all\n    // the stored indexes to be usable. It is not publicly documented.\n    _fnCallbackFire(settings, null, \"stateLoadInit\", [settings, s], true);\n\n    // Page Length\n    if (s.length !== undefined) {\n      // If already initialised just set the value directly so that the select element is also updated\n      if (api) {\n        api.page.len(s.length);\n      } else {\n        settings._iDisplayLength = s.length;\n      }\n    }\n\n    // Restore key features\n    if (s.start !== undefined) {\n      if (api === null) {\n        settings._iDisplayStart = s.start;\n        settings.iInitDisplayStart = s.start;\n      } else {\n        _fnPageChange(settings, s.start / settings._iDisplayLength);\n      }\n    }\n\n    // Order\n    if (s.order !== undefined) {\n      settings.aaSorting = [];\n      $.each(s.order, function (i, col) {\n        settings.aaSorting.push(col[0] >= columns.length ? [0, col[1]] : col);\n      });\n    }\n\n    // Search\n    if (s.search !== undefined) {\n      $.extend(settings.oPreviousSearch, s.search);\n    }\n\n    // Columns\n    if (s.columns) {\n      for (i = 0, ien = s.columns.length; i < ien; i++) {\n        var col = s.columns[i];\n\n        // Visibility\n        if (col.visible !== undefined) {\n          // If the api is defined, the table has been initialised so we need to use it rather than internal settings\n          if (api) {\n            // Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n            api.column(i).visible(col.visible, false);\n          } else {\n            columns[i].bVisible = col.visible;\n          }\n        }\n\n        // Search\n        if (col.search !== undefined) {\n          $.extend(settings.aoPreSearchCols[i], col.search);\n        }\n      }\n\n      // If the api is defined then we need to adjust the columns once the visibility has been changed\n      if (api) {\n        api.columns.adjust();\n      }\n    }\n\n    settings._bLoadingState = false;\n    _fnCallbackFire(settings, \"aoStateLoaded\", \"stateLoaded\", [settings, s]);\n    callback();\n  }\n\n  /**\n   * Log an error message\n   *  @param {object} settings dataTables settings object\n   *  @param {int} level log error messages, or display them to the user\n   *  @param {string} msg error message\n   *  @param {int} tn Technical note id to get more information about the error.\n   *  @memberof DataTable#oApi\n   */\n  function _fnLog(settings, level, msg, tn) {\n    msg =\n      \"DataTables warning: \" +\n      (settings ? \"table id=\" + settings.sTableId + \" - \" : \"\") +\n      msg;\n\n    if (tn) {\n      msg +=\n        \". For more information about this error, please see \" +\n        \"https://datatables.net/tn/\" +\n        tn;\n    }\n\n    if (!level) {\n      // Backwards compatibility pre 1.10\n      var ext = DataTable.ext;\n      var type = ext.sErrMode || ext.errMode;\n\n      if (settings) {\n        _fnCallbackFire(settings, null, \"dt-error\", [settings, tn, msg], true);\n      }\n\n      if (type == \"alert\") {\n        alert(msg);\n      } else if (type == \"throw\") {\n        throw new Error(msg);\n      } else if (typeof type == \"function\") {\n        type(settings, tn, msg);\n      }\n    } else if (window.console && console.log) {\n      console.log(msg);\n    }\n  }\n\n  /**\n   * See if a property is defined on one object, if so assign it to the other object\n   *  @param {object} ret target object\n   *  @param {object} src source object\n   *  @param {string} name property\n   *  @param {string} [mappedName] name to map too - optional, name used if not given\n   *  @memberof DataTable#oApi\n   */\n  function _fnMap(ret, src, name, mappedName) {\n    if (Array.isArray(name)) {\n      $.each(name, function (i, val) {\n        if (Array.isArray(val)) {\n          _fnMap(ret, src, val[0], val[1]);\n        } else {\n          _fnMap(ret, src, val);\n        }\n      });\n\n      return;\n    }\n\n    if (mappedName === undefined) {\n      mappedName = name;\n    }\n\n    if (src[name] !== undefined) {\n      ret[mappedName] = src[name];\n    }\n  }\n\n  /**\n   * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n   * shallow copy arrays. The reason we need to do this, is that we don't want to\n   * deep copy array init values (such as aaSorting) since the dev wouldn't be\n   * able to override them, but we do want to deep copy arrays.\n   *  @param {object} out Object to extend\n   *  @param {object} extender Object from which the properties will be applied to\n   *      out\n   *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n   *      independent copy with the exception of the `data` or `aaData` parameters\n   *      if they are present. This is so you can pass in a collection to\n   *      DataTables and have that used as your data source without breaking the\n   *      references\n   *  @returns {object} out Reference, just for convenience - out === the return.\n   *  @memberof DataTable#oApi\n   *  @todo This doesn't take account of arrays inside the deep copied objects.\n   */\n  function _fnExtend(out, extender, breakRefs) {\n    var val;\n\n    for (var prop in extender) {\n      if (Object.prototype.hasOwnProperty.call(extender, prop)) {\n        val = extender[prop];\n\n        if ($.isPlainObject(val)) {\n          if (!$.isPlainObject(out[prop])) {\n            out[prop] = {};\n          }\n          $.extend(true, out[prop], val);\n        } else if (\n          breakRefs &&\n          prop !== \"data\" &&\n          prop !== \"aaData\" &&\n          Array.isArray(val)\n        ) {\n          out[prop] = val.slice();\n        } else {\n          out[prop] = val;\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Bind an event handers to allow a click or return key to activate the callback.\n   * This is good for accessibility since a return on the keyboard will have the\n   * same effect as a click, if the element has focus.\n   *  @param {element} n Element to bind the action to\n   *  @param {object|string} selector Selector (for delegated events) or data object\n   *   to pass to the triggered function\n   *  @param {function} fn Callback function for when the event is triggered\n   *  @memberof DataTable#oApi\n   */\n  function _fnBindAction(n, selector, fn) {\n    $(n)\n      .on(\"click.DT\", selector, function (e) {\n        fn(e);\n      })\n      .on(\"keypress.DT\", selector, function (e) {\n        if (e.which === 13) {\n          e.preventDefault();\n          fn(e);\n        }\n      })\n      .on(\"selectstart.DT\", selector, function () {\n        // Don't want a double click resulting in text selection\n        return false;\n      });\n  }\n\n  /**\n   * Register a callback function. Easily allows a callback function to be added to\n   * an array store of callback functions that can then all be called together.\n   *  @param {object} settings dataTables settings object\n   *  @param {string} store Name of the array storage for the callbacks in oSettings\n   *  @param {function} fn Function to be called back\n   *  @memberof DataTable#oApi\n   */\n  function _fnCallbackReg(settings, store, fn) {\n    if (fn) {\n      settings[store].push(fn);\n    }\n  }\n\n  /**\n   * Fire callback functions and trigger events. Note that the loop over the\n   * callback array store is done backwards! Further note that you do not want to\n   * fire off triggers in time sensitive applications (for example cell creation)\n   * as its slow.\n   *  @param {object} settings dataTables settings object\n   *  @param {string} callbackArr Name of the array storage for the callbacks in\n   *      oSettings\n   *  @param {string} eventName Name of the jQuery custom event to trigger. If\n   *      null no trigger is fired\n   *  @param {array} args Array of arguments to pass to the callback function /\n   *      trigger\n   *  @param {boolean} [bubbles] True if the event should bubble\n   *  @memberof DataTable#oApi\n   */\n  function _fnCallbackFire(settings, callbackArr, eventName, args, bubbles) {\n    var ret = [];\n\n    if (callbackArr) {\n      ret = settings[callbackArr]\n        .slice()\n        .reverse()\n        .map(function (val) {\n          return val.apply(settings.oInstance, args);\n        });\n    }\n\n    if (eventName !== null) {\n      var e = $.Event(eventName + \".dt\");\n      var table = $(settings.nTable);\n\n      // Expose the DataTables API on the event object for easy access\n      e.dt = settings.api;\n\n      table[bubbles ? \"trigger\" : \"triggerHandler\"](e, args);\n\n      // If not yet attached to the document, trigger the event\n      // on the body directly to sort of simulate the bubble\n      if (bubbles && table.parents(\"body\").length === 0) {\n        $(\"body\").trigger(e, args);\n      }\n\n      ret.push(e.result);\n    }\n\n    return ret;\n  }\n\n  function _fnLengthOverflow(settings) {\n    var start = settings._iDisplayStart,\n      end = settings.fnDisplayEnd(),\n      len = settings._iDisplayLength;\n\n    /* If we have space to show extra rows (backing up from the end point - then do so */\n    if (start >= end) {\n      start = end - len;\n    }\n\n    // Keep the start record on the current page\n    start -= start % len;\n\n    if (len === -1 || start < 0) {\n      start = 0;\n    }\n\n    settings._iDisplayStart = start;\n  }\n\n  function _fnRenderer(settings, type) {\n    var renderer = settings.renderer;\n    var host = DataTable.ext.renderer[type];\n\n    if ($.isPlainObject(renderer) && renderer[type]) {\n      // Specific renderer for this type. If available use it, otherwise use\n      // the default.\n      return host[renderer[type]] || host._;\n    } else if (typeof renderer === \"string\") {\n      // Common renderer - if there is one available for this type use it,\n      // otherwise use the default\n      return host[renderer] || host._;\n    }\n\n    // Use the default\n    return host._;\n  }\n\n  /**\n   * Detect the data source being used for the table. Used to simplify the code\n   * a little (ajax) and to make it compress a little smaller.\n   *\n   *  @param {object} settings dataTables settings object\n   *  @returns {string} Data source\n   *  @memberof DataTable#oApi\n   */\n  function _fnDataSource(settings) {\n    if (settings.oFeatures.bServerSide) {\n      return \"ssp\";\n    } else if (settings.ajax) {\n      return \"ajax\";\n    }\n    return \"dom\";\n  }\n\n  /**\n   * Common replacement for language strings\n   *\n   * @param {*} settings DT settings object\n   * @param {*} str String with values to replace\n   * @param {*} entries Plural number for _ENTRIES_ - can be undefined\n   * @returns String\n   */\n  function _fnMacros(settings, str, entries) {\n    // When infinite scrolling, we are always starting at 1. _iDisplayStart is\n    // used only internally\n    var formatter = settings.fnFormatNumber,\n      start = settings._iDisplayStart + 1,\n      len = settings._iDisplayLength,\n      vis = settings.fnRecordsDisplay(),\n      max = settings.fnRecordsTotal(),\n      all = len === -1;\n\n    return str\n      .replace(/_START_/g, formatter.call(settings, start))\n      .replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd()))\n      .replace(/_MAX_/g, formatter.call(settings, max))\n      .replace(/_TOTAL_/g, formatter.call(settings, vis))\n      .replace(\n        /_PAGE_/g,\n        formatter.call(settings, all ? 1 : Math.ceil(start / len))\n      )\n      .replace(\n        /_PAGES_/g,\n        formatter.call(settings, all ? 1 : Math.ceil(vis / len))\n      )\n      .replace(/_ENTRIES_/g, settings.api.i18n(\"entries\", \"\", entries))\n      .replace(/_ENTRIES-MAX_/g, settings.api.i18n(\"entries\", \"\", max))\n      .replace(/_ENTRIES-TOTAL_/g, settings.api.i18n(\"entries\", \"\", vis));\n  }\n\n  /**\n   * Computed structure of the DataTables API, defined by the options passed to\n   * `DataTable.Api.register()` when building the API.\n   *\n   * The structure is built in order to speed creation and extension of the Api\n   * objects since the extensions are effectively pre-parsed.\n   *\n   * The array is an array of objects with the following structure, where this\n   * base array represents the Api prototype base:\n   *\n   *     [\n   *       {\n   *         name:      'data'                -- string   - Property name\n   *         val:       function () {},       -- function - Api method (or undefined if just an object\n   *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n   *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n   *       },\n   *       {\n   *         name:     'row'\n   *         val:       {},\n   *         methodExt: [ ... ],\n   *         propExt:   [\n   *           {\n   *             name:      'data'\n   *             val:       function () {},\n   *             methodExt: [ ... ],\n   *             propExt:   [ ... ]\n   *           },\n   *           ...\n   *         ]\n   *       }\n   *     ]\n   *\n   * @type {Array}\n   * @ignore\n   */\n  var __apiStruct = [];\n\n  /**\n   * `Array.prototype` reference.\n   *\n   * @type object\n   * @ignore\n   */\n  var __arrayProto = Array.prototype;\n\n  /**\n   * Abstraction for `context` parameter of the `Api` constructor to allow it to\n   * take several different forms for ease of use.\n   *\n   * Each of the input parameter types will be converted to a DataTables settings\n   * object where possible.\n   *\n   * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n   *   of:\n   *\n   *   * `string` - jQuery selector. Any DataTables' matching the given selector\n   *     with be found and used.\n   *   * `node` - `TABLE` node which has already been formed into a DataTable.\n   *   * `jQuery` - A jQuery object of `TABLE` nodes.\n   *   * `object` - DataTables settings object\n   *   * `DataTables.Api` - API instance\n   * @return {array|null} Matching DataTables settings objects. `null` or\n   *   `undefined` is returned if no matching DataTable is found.\n   * @ignore\n   */\n  var _toSettings = function (mixed) {\n    var idx, jq;\n    var settings = DataTable.settings;\n    var tables = _pluck(settings, \"nTable\");\n\n    if (!mixed) {\n      return [];\n    } else if (mixed.nTable && mixed.oFeatures) {\n      // DataTables settings object\n      return [mixed];\n    } else if (mixed.nodeName && mixed.nodeName.toLowerCase() === \"table\") {\n      // Table node\n      idx = tables.indexOf(mixed);\n      return idx !== -1 ? [settings[idx]] : null;\n    } else if (mixed && typeof mixed.settings === \"function\") {\n      return mixed.settings().toArray();\n    } else if (typeof mixed === \"string\") {\n      // jQuery selector\n      jq = $(mixed).get();\n    } else if (mixed instanceof $) {\n      // jQuery object (also DataTables instance)\n      jq = mixed.get();\n    }\n\n    if (jq) {\n      return settings.filter(function (v, idx) {\n        return jq.includes(tables[idx]);\n      });\n    }\n  };\n\n  /**\n   * DataTables API class - used to control and interface with  one or more\n   * DataTables enhanced tables.\n   *\n   * The API class is heavily based on jQuery, presenting a chainable interface\n   * that you can use to interact with tables. Each instance of the API class has\n   * a \"context\" - i.e. the tables that it will operate on. This could be a single\n   * table, all tables on a page or a sub-set thereof.\n   *\n   * Additionally the API is designed to allow you to easily work with the data in\n   * the tables, retrieving and manipulating it as required. This is done by\n   * presenting the API class as an array like interface. The contents of the\n   * array depend upon the actions requested by each method (for example\n   * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n   * return an array of objects or arrays depending upon your table's\n   * configuration). The API object has a number of array like methods (`push`,\n   * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n   * `unique` etc) to assist your working with the data held in a table.\n   *\n   * Most methods (those which return an Api instance) are chainable, which means\n   * the return from a method call also has all of the methods available that the\n   * top level object had. For example, these two calls are equivalent:\n   *\n   *     // Not chained\n   *     api.row.add( {...} );\n   *     api.draw();\n   *\n   *     // Chained\n   *     api.row.add( {...} ).draw();\n   *\n   * @class DataTable.Api\n   * @param {array|object|string|jQuery} context DataTable identifier. This is\n   *   used to define which DataTables enhanced tables this API will operate on.\n   *   Can be one of:\n   *\n   *   * `string` - jQuery selector. Any DataTables' matching the given selector\n   *     with be found and used.\n   *   * `node` - `TABLE` node which has already been formed into a DataTable.\n   *   * `jQuery` - A jQuery object of `TABLE` nodes.\n   *   * `object` - DataTables settings object\n   * @param {array} [data] Data to initialise the Api instance with.\n   *\n   * @example\n   *   // Direct initialisation during DataTables construction\n   *   var api = $('#example').DataTable();\n   *\n   * @example\n   *   // Initialisation using a DataTables jQuery object\n   *   var api = $('#example').dataTable().api();\n   *\n   * @example\n   *   // Initialisation as a constructor\n   *   var api = new DataTable.Api( 'table.dataTable' );\n   */\n  _Api = function (context, data) {\n    if (!(this instanceof _Api)) {\n      return new _Api(context, data);\n    }\n\n    var settings = [];\n    var ctxSettings = function (o) {\n      var a = _toSettings(o);\n      if (a) {\n        settings.push.apply(settings, a);\n      }\n    };\n\n    if (Array.isArray(context)) {\n      for (var i = 0, ien = context.length; i < ien; i++) {\n        ctxSettings(context[i]);\n      }\n    } else {\n      ctxSettings(context);\n    }\n\n    // Remove duplicates\n    this.context = settings.length > 1 ? _unique(settings) : settings;\n\n    // Initial data\n    if (data) {\n      this.push.apply(this, data);\n    }\n\n    // selector\n    this.selector = {\n      rows: null,\n      cols: null,\n      opts: null,\n    };\n\n    _Api.extend(this, this, __apiStruct);\n  };\n\n  DataTable.Api = _Api;\n\n  // Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n  // isPlainObject.\n  $.extend(_Api.prototype, {\n    any: function () {\n      return this.count() !== 0;\n    },\n\n    context: [], // array of table settings objects\n\n    count: function () {\n      return this.flatten().length;\n    },\n\n    each: function (fn) {\n      for (var i = 0, ien = this.length; i < ien; i++) {\n        fn.call(this, this[i], i, this);\n      }\n\n      return this;\n    },\n\n    eq: function (idx) {\n      var ctx = this.context;\n\n      return ctx.length > idx ? new _Api(ctx[idx], this[idx]) : null;\n    },\n\n    filter: function (fn) {\n      var a = __arrayProto.filter.call(this, fn, this);\n\n      return new _Api(this.context, a);\n    },\n\n    flatten: function () {\n      var a = [];\n\n      return new _Api(this.context, a.concat.apply(a, this.toArray()));\n    },\n\n    get: function (idx) {\n      return this[idx];\n    },\n\n    join: __arrayProto.join,\n\n    includes: function (find) {\n      return this.indexOf(find) === -1 ? false : true;\n    },\n\n    indexOf: __arrayProto.indexOf,\n\n    iterator: function (flatten, type, fn, alwaysNew) {\n      var a = [],\n        ret,\n        i,\n        ien,\n        j,\n        jen,\n        context = this.context,\n        rows,\n        items,\n        item,\n        selector = this.selector;\n\n      // Argument shifting\n      if (typeof flatten === \"string\") {\n        alwaysNew = fn;\n        fn = type;\n        type = flatten;\n        flatten = false;\n      }\n\n      for (i = 0, ien = context.length; i < ien; i++) {\n        var apiInst = new _Api(context[i]);\n\n        if (type === \"table\") {\n          ret = fn.call(apiInst, context[i], i);\n\n          if (ret !== undefined) {\n            a.push(ret);\n          }\n        } else if (type === \"columns\" || type === \"rows\") {\n          // this has same length as context - one entry for each table\n          ret = fn.call(apiInst, context[i], this[i], i);\n\n          if (ret !== undefined) {\n            a.push(ret);\n          }\n        } else if (\n          type === \"every\" ||\n          type === \"column\" ||\n          type === \"column-rows\" ||\n          type === \"row\" ||\n          type === \"cell\"\n        ) {\n          // columns and rows share the same structure.\n          // 'this' is an array of column indexes for each context\n          items = this[i];\n\n          if (type === \"column-rows\") {\n            rows = _selector_row_indexes(context[i], selector.opts);\n          }\n\n          for (j = 0, jen = items.length; j < jen; j++) {\n            item = items[j];\n\n            if (type === \"cell\") {\n              ret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n            } else {\n              ret = fn.call(apiInst, context[i], item, i, j, rows);\n            }\n\n            if (ret !== undefined) {\n              a.push(ret);\n            }\n          }\n        }\n      }\n\n      if (a.length || alwaysNew) {\n        var api = new _Api(context, flatten ? a.concat.apply([], a) : a);\n        var apiSelector = api.selector;\n        apiSelector.rows = selector.rows;\n        apiSelector.cols = selector.cols;\n        apiSelector.opts = selector.opts;\n        return api;\n      }\n      return this;\n    },\n\n    lastIndexOf: __arrayProto.lastIndexOf,\n\n    length: 0,\n\n    map: function (fn) {\n      var a = __arrayProto.map.call(this, fn, this);\n\n      return new _Api(this.context, a);\n    },\n\n    pluck: function (prop) {\n      var fn = DataTable.util.get(prop);\n\n      return this.map(function (el) {\n        return fn(el);\n      });\n    },\n\n    pop: __arrayProto.pop,\n\n    push: __arrayProto.push,\n\n    reduce: __arrayProto.reduce,\n\n    reduceRight: __arrayProto.reduceRight,\n\n    reverse: __arrayProto.reverse,\n\n    // Object with rows, columns and opts\n    selector: null,\n\n    shift: __arrayProto.shift,\n\n    slice: function () {\n      return new _Api(this.context, this);\n    },\n\n    sort: __arrayProto.sort,\n\n    splice: __arrayProto.splice,\n\n    toArray: function () {\n      return __arrayProto.slice.call(this);\n    },\n\n    to$: function () {\n      return $(this);\n    },\n\n    toJQuery: function () {\n      return $(this);\n    },\n\n    unique: function () {\n      return new _Api(this.context, _unique(this.toArray()));\n    },\n\n    unshift: __arrayProto.unshift,\n  });\n\n  function _api_scope(scope, fn, struc) {\n    return function () {\n      var ret = fn.apply(scope || this, arguments);\n\n      // Method extension\n      _Api.extend(ret, ret, struc.methodExt);\n      return ret;\n    };\n  }\n\n  function _api_find(src, name) {\n    for (var i = 0, ien = src.length; i < ien; i++) {\n      if (src[i].name === name) {\n        return src[i];\n      }\n    }\n    return null;\n  }\n\n  window.__apiStruct = __apiStruct;\n\n  _Api.extend = function (scope, obj, ext) {\n    // Only extend API instances and static properties of the API\n    if (!ext.length || !obj || (!(obj instanceof _Api) && !obj.__dt_wrapper)) {\n      return;\n    }\n\n    var i, ien, struct;\n\n    for (i = 0, ien = ext.length; i < ien; i++) {\n      struct = ext[i];\n\n      if (struct.name === \"__proto__\") {\n        continue;\n      }\n\n      // Value\n      obj[struct.name] =\n        struct.type === \"function\"\n          ? _api_scope(scope, struct.val, struct)\n          : struct.type === \"object\"\n          ? {}\n          : struct.val;\n\n      obj[struct.name].__dt_wrapper = true;\n\n      // Property extension\n      _Api.extend(scope, obj[struct.name], struct.propExt);\n    }\n  };\n\n  //     [\n  //       {\n  //         name:      'data'                -- string   - Property name\n  //         val:       function () {},       -- function - Api method (or undefined if just an object\n  //         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n  //         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n  //       },\n  //       {\n  //         name:     'row'\n  //         val:       {},\n  //         methodExt: [ ... ],\n  //         propExt:   [\n  //           {\n  //             name:      'data'\n  //             val:       function () {},\n  //             methodExt: [ ... ],\n  //             propExt:   [ ... ]\n  //           },\n  //           ...\n  //         ]\n  //       }\n  //     ]\n\n  _Api.register = _api_register = function (name, val) {\n    if (Array.isArray(name)) {\n      for (var j = 0, jen = name.length; j < jen; j++) {\n        _Api.register(name[j], val);\n      }\n      return;\n    }\n\n    var i,\n      ien,\n      heir = name.split(\".\"),\n      struct = __apiStruct,\n      key,\n      method;\n\n    for (i = 0, ien = heir.length; i < ien; i++) {\n      method = heir[i].indexOf(\"()\") !== -1;\n      key = method ? heir[i].replace(\"()\", \"\") : heir[i];\n\n      var src = _api_find(struct, key);\n      if (!src) {\n        src = {\n          name: key,\n          val: {},\n          methodExt: [],\n          propExt: [],\n          type: \"object\",\n        };\n        struct.push(src);\n      }\n\n      if (i === ien - 1) {\n        src.val = val;\n        src.type =\n          typeof val === \"function\"\n            ? \"function\"\n            : $.isPlainObject(val)\n            ? \"object\"\n            : \"other\";\n      } else {\n        struct = method ? src.methodExt : src.propExt;\n      }\n    }\n  };\n\n  _Api.registerPlural = _api_registerPlural = function (\n    pluralName,\n    singularName,\n    val\n  ) {\n    _Api.register(pluralName, val);\n\n    _Api.register(singularName, function () {\n      var ret = val.apply(this, arguments);\n\n      if (ret === this) {\n        // Returned item is the API instance that was passed in, return it\n        return this;\n      } else if (ret instanceof _Api) {\n        // New API instance returned, want the value from the first item\n        // in the returned array for the singular result.\n        return ret.length\n          ? Array.isArray(ret[0])\n            ? new _Api(ret.context, ret[0]) // Array results are 'enhanced'\n            : ret[0]\n          : undefined;\n      }\n\n      // Non-API return - just fire it back\n      return ret;\n    });\n  };\n\n  /**\n   * Selector for HTML tables. Apply the given selector to the give array of\n   * DataTables settings objects.\n   *\n   * @param {string|integer} [selector] jQuery selector string or integer\n   * @param  {array} Array of DataTables settings objects to be filtered\n   * @return {array}\n   * @ignore\n   */\n  var __table_selector = function (selector, a) {\n    if (Array.isArray(selector)) {\n      var result = [];\n\n      selector.forEach(function (sel) {\n        var inner = __table_selector(sel, a);\n\n        result.push.apply(result, inner);\n      });\n\n      return result.filter(function (item) {\n        return item;\n      });\n    }\n\n    // Integer is used to pick out a table by index\n    if (typeof selector === \"number\") {\n      return [a[selector]];\n    }\n\n    // Perform a jQuery selector on the table nodes\n    var nodes = a.map(function (el) {\n      return el.nTable;\n    });\n\n    return $(nodes)\n      .filter(selector)\n      .map(function () {\n        // Need to translate back from the table node to the settings\n        var idx = nodes.indexOf(this);\n        return a[idx];\n      })\n      .toArray();\n  };\n\n  /**\n   * Context selector for the API's context (i.e. the tables the API instance\n   * refers to.\n   *\n   * @name    DataTable.Api#tables\n   * @param {string|integer} [selector] Selector to pick which tables the iterator\n   *   should operate on. If not given, all tables in the current context are\n   *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n   *   select multiple tables or as an integer to select a single table.\n   * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n   */\n  _api_register(\"tables()\", function (selector) {\n    // A new instance is created if there was a selector specified\n    return selector !== undefined && selector !== null\n      ? new _Api(__table_selector(selector, this.context))\n      : this;\n  });\n\n  _api_register(\"table()\", function (selector) {\n    var tables = this.tables(selector);\n    var ctx = tables.context;\n\n    // Truncate to the first matched table\n    return ctx.length ? new _Api(ctx[0]) : tables;\n  });\n\n  // Common methods, combined to reduce size\n  [\n    [\"nodes\", \"node\", \"nTable\"],\n    [\"body\", \"body\", \"nTBody\"],\n    [\"header\", \"header\", \"nTHead\"],\n    [\"footer\", \"footer\", \"nTFoot\"],\n  ].forEach(function (item) {\n    _api_registerPlural(\n      \"tables().\" + item[0] + \"()\",\n      \"table().\" + item[1] + \"()\",\n      function () {\n        return this.iterator(\n          \"table\",\n          function (ctx) {\n            return ctx[item[2]];\n          },\n          1\n        );\n      }\n    );\n  });\n\n  // Structure methods\n  [\n    [\"header\", \"aoHeader\"],\n    [\"footer\", \"aoFooter\"],\n  ].forEach(function (item) {\n    _api_register(\"table().\" + item[0] + \".structure()\", function (selector) {\n      var indexes = this.columns(selector).indexes().flatten();\n      var ctx = this.context[0];\n\n      return _fnHeaderLayout(ctx, ctx[item[1]], indexes);\n    });\n  });\n\n  _api_registerPlural(\n    \"tables().containers()\",\n    \"table().container()\",\n    function () {\n      return this.iterator(\n        \"table\",\n        function (ctx) {\n          return ctx.nTableWrapper;\n        },\n        1\n      );\n    }\n  );\n\n  _api_register(\"tables().every()\", function (fn) {\n    var that = this;\n\n    return this.iterator(\"table\", function (s, i) {\n      fn.call(that.table(i), i);\n    });\n  });\n\n  _api_register(\"caption()\", function (value, side) {\n    var context = this.context;\n\n    // Getter - return existing node's content\n    if (value === undefined) {\n      var caption = context[0].captionNode;\n\n      return caption && context.length ? caption.innerHTML : null;\n    }\n\n    return this.iterator(\n      \"table\",\n      function (ctx) {\n        var table = $(ctx.nTable);\n        var caption = $(ctx.captionNode);\n        var container = $(ctx.nTableWrapper);\n\n        // Create the node if it doesn't exist yet\n        if (!caption.length) {\n          caption = $(\"<caption/>\").html(value);\n          ctx.captionNode = caption[0];\n\n          // If side isn't set, we need to insert into the document to let the\n          // CSS decide so we can read it back, otherwise there is no way to\n          // know if the CSS would put it top or bottom for scrolling\n          if (!side) {\n            table.prepend(caption);\n\n            side = caption.css(\"caption-side\");\n          }\n        }\n\n        caption.html(value);\n\n        if (side) {\n          caption.css(\"caption-side\", side);\n          caption[0]._captionSide = side;\n        }\n\n        if (container.find(\"div.dataTables_scroll\").length) {\n          var selector = side === \"top\" ? \"Head\" : \"Foot\";\n\n          container\n            .find(\"div.dataTables_scroll\" + selector + \" table\")\n            .prepend(caption);\n        } else {\n          table.prepend(caption);\n        }\n      },\n      1\n    );\n  });\n\n  _api_register(\"caption.node()\", function () {\n    var ctx = this.context;\n\n    return ctx.length ? ctx[0].captionNode : null;\n  });\n\n  /**\n   * Redraw the tables in the current context.\n   */\n  _api_register(\"draw()\", function (paging) {\n    return this.iterator(\"table\", function (settings) {\n      if (paging === \"page\") {\n        _fnDraw(settings);\n      } else {\n        if (typeof paging === \"string\") {\n          paging = paging === \"full-hold\" ? false : true;\n        }\n\n        _fnReDraw(settings, paging === false);\n      }\n    });\n  });\n\n  /**\n   * Get the current page index.\n   *\n   * @return {integer} Current page index (zero based)\n   */ /**\n   * Set the current page.\n   *\n   * Note that if you attempt to show a page which does not exist, DataTables will\n   * not throw an error, but rather reset the paging.\n   *\n   * @param {integer|string} action The paging action to take. This can be one of:\n   *  * `integer` - The page index to jump to\n   *  * `string` - An action to take:\n   *    * `first` - Jump to first page.\n   *    * `next` - Jump to the next page\n   *    * `previous` - Jump to previous page\n   *    * `last` - Jump to the last page.\n   * @returns {DataTables.Api} this\n   */ _api_register(\"page()\", function (action) {\n    if (action === undefined) {\n      return this.page.info().page; // not an expensive call\n    }\n\n    // else, have an action to take on all tables\n    return this.iterator(\"table\", function (settings) {\n      _fnPageChange(settings, action);\n    });\n  });\n\n  /**\n   * Paging information for the first table in the current context.\n   *\n   * If you require paging information for another table, use the `table()` method\n   * with a suitable selector.\n   *\n   * @return {object} Object with the following properties set:\n   *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n   *  * `pages` - Total number of pages\n   *  * `start` - Display index for the first record shown on the current page\n   *  * `end` - Display index for the last record shown on the current page\n   *  * `length` - Display length (number of records). Note that generally `start\n   *    + length = end`, but this is not always true, for example if there are\n   *    only 2 records to show on the final page, with a length of 10.\n   *  * `recordsTotal` - Full data set length\n   *  * `recordsDisplay` - Data set length once the current filtering criterion\n   *    are applied.\n   */\n  _api_register(\"page.info()\", function () {\n    if (this.context.length === 0) {\n      return undefined;\n    }\n\n    var settings = this.context[0],\n      start = settings._iDisplayStart,\n      len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n      visRecords = settings.fnRecordsDisplay(),\n      all = len === -1;\n\n    return {\n      page: all ? 0 : Math.floor(start / len),\n      pages: all ? 1 : Math.ceil(visRecords / len),\n      start: start,\n      end: settings.fnDisplayEnd(),\n      length: len,\n      recordsTotal: settings.fnRecordsTotal(),\n      recordsDisplay: visRecords,\n      serverSide: _fnDataSource(settings) === \"ssp\",\n    };\n  });\n\n  /**\n   * Get the current page length.\n   *\n   * @return {integer} Current page length. Note `-1` indicates that all records\n   *   are to be shown.\n   */ /**\n   * Set the current page length.\n   *\n   * @param {integer} Page length to set. Use `-1` to show all records.\n   * @returns {DataTables.Api} this\n   */ _api_register(\"page.len()\", function (len) {\n    // Note that we can't call this function 'length()' because `length`\n    // is a Javascript property of functions which defines how many arguments\n    // the function expects.\n    if (len === undefined) {\n      return this.context.length !== 0\n        ? this.context[0]._iDisplayLength\n        : undefined;\n    }\n\n    // else, set the page length\n    return this.iterator(\"table\", function (settings) {\n      _fnLengthChange(settings, len);\n    });\n  });\n\n  var __reload = function (settings, holdPosition, callback) {\n    // Use the draw event to trigger a callback\n    if (callback) {\n      var api = new _Api(settings);\n\n      api.one(\"draw\", function () {\n        callback(api.ajax.json());\n      });\n    }\n\n    if (_fnDataSource(settings) == \"ssp\") {\n      _fnReDraw(settings, holdPosition);\n    } else {\n      _fnProcessingDisplay(settings, true);\n\n      // Cancel an existing request\n      var xhr = settings.jqXHR;\n      if (xhr && xhr.readyState !== 4) {\n        xhr.abort();\n      }\n\n      // Trigger xhr\n      _fnBuildAjax(settings, {}, function (json) {\n        _fnClearTable(settings);\n\n        var data = _fnAjaxDataSrc(settings, json);\n        for (var i = 0, ien = data.length; i < ien; i++) {\n          _fnAddData(settings, data[i]);\n        }\n\n        _fnReDraw(settings, holdPosition);\n        _fnInitComplete(settings);\n        _fnProcessingDisplay(settings, false);\n      });\n    }\n  };\n\n  /**\n   * Get the JSON response from the last Ajax request that DataTables made to the\n   * server. Note that this returns the JSON from the first table in the current\n   * context.\n   *\n   * @return {object} JSON received from the server.\n   */\n  _api_register(\"ajax.json()\", function () {\n    var ctx = this.context;\n\n    if (ctx.length > 0) {\n      return ctx[0].json;\n    }\n\n    // else return undefined;\n  });\n\n  /**\n   * Get the data submitted in the last Ajax request\n   */\n  _api_register(\"ajax.params()\", function () {\n    var ctx = this.context;\n\n    if (ctx.length > 0) {\n      return ctx[0].oAjaxData;\n    }\n\n    // else return undefined;\n  });\n\n  /**\n   * Reload tables from the Ajax data source. Note that this function will\n   * automatically re-draw the table when the remote data has been loaded.\n   *\n   * @param {boolean} [reset=true] Reset (default) or hold the current paging\n   *   position. A full re-sort and re-filter is performed when this method is\n   *   called, which is why the pagination reset is the default action.\n   * @returns {DataTables.Api} this\n   */\n  _api_register(\"ajax.reload()\", function (callback, resetPaging) {\n    return this.iterator(\"table\", function (settings) {\n      __reload(settings, resetPaging === false, callback);\n    });\n  });\n\n  /**\n   * Get the current Ajax URL. Note that this returns the URL from the first\n   * table in the current context.\n   *\n   * @return {string} Current Ajax source URL\n   */ /**\n   * Set the Ajax URL. Note that this will set the URL for all tables in the\n   * current context.\n   *\n   * @param {string} url URL to set.\n   * @returns {DataTables.Api} this\n   */ _api_register(\"ajax.url()\", function (url) {\n    var ctx = this.context;\n\n    if (url === undefined) {\n      // get\n      if (ctx.length === 0) {\n        return undefined;\n      }\n      ctx = ctx[0];\n\n      return $.isPlainObject(ctx.ajax) ? ctx.ajax.url : ctx.ajax;\n    }\n\n    // set\n    return this.iterator(\"table\", function (settings) {\n      if ($.isPlainObject(settings.ajax)) {\n        settings.ajax.url = url;\n      } else {\n        settings.ajax = url;\n      }\n    });\n  });\n\n  /**\n   * Load data from the newly set Ajax URL. Note that this method is only\n   * available when `ajax.url()` is used to set a URL. Additionally, this method\n   * has the same effect as calling `ajax.reload()` but is provided for\n   * convenience when setting a new URL. Like `ajax.reload()` it will\n   * automatically redraw the table once the remote data has been loaded.\n   *\n   * @returns {DataTables.Api} this\n   */\n  _api_register(\"ajax.url().load()\", function (callback, resetPaging) {\n    // Same as a reload, but makes sense to present it for easy access after a\n    // url change\n    return this.iterator(\"table\", function (ctx) {\n      __reload(ctx, resetPaging === false, callback);\n    });\n  });\n\n  var _selector_run = function (type, selector, selectFn, settings, opts) {\n    var out = [],\n      res,\n      a,\n      i,\n      ien,\n      j,\n      jen,\n      selectorType = typeof selector;\n\n    // Can't just check for isArray here, as an API or jQuery instance might be\n    // given with their array like look\n    if (\n      !selector ||\n      selectorType === \"string\" ||\n      selectorType === \"function\" ||\n      selector.length === undefined\n    ) {\n      selector = [selector];\n    }\n\n    for (i = 0, ien = selector.length; i < ien; i++) {\n      // Only split on simple strings - complex expressions will be jQuery selectors\n      a =\n        selector[i] && selector[i].split && !selector[i].match(/[[(:]/)\n          ? selector[i].split(\",\")\n          : [selector[i]];\n\n      for (j = 0, jen = a.length; j < jen; j++) {\n        res = selectFn(typeof a[j] === \"string\" ? a[j].trim() : a[j]);\n\n        // Remove empty items\n        res = res.filter(function (item) {\n          return item !== null && item !== undefined;\n        });\n\n        if (res && res.length) {\n          out = out.concat(res);\n        }\n      }\n    }\n\n    // selector extensions\n    var ext = _ext.selector[type];\n    if (ext.length) {\n      for (i = 0, ien = ext.length; i < ien; i++) {\n        out = ext[i](settings, opts, out);\n      }\n    }\n\n    return _unique(out);\n  };\n\n  var _selector_opts = function (opts) {\n    if (!opts) {\n      opts = {};\n    }\n\n    // Backwards compatibility for 1.9- which used the terminology filter rather\n    // than search\n    if (opts.filter && opts.search === undefined) {\n      opts.search = opts.filter;\n    }\n\n    return $.extend(\n      {\n        search: \"none\",\n        order: \"current\",\n        page: \"all\",\n      },\n      opts\n    );\n  };\n\n  // Reduce the API instance to the first item found\n  var _selector_first = function (old) {\n    let inst = new _Api(old.context[0]);\n\n    // Use a push rather than passing to the constructor, since it will\n    // merge arrays down automatically, which isn't what is wanted here\n    if (old.length) {\n      inst.push(old[0]);\n    }\n\n    inst.selector = old.selector;\n\n    // Limit to a single row / column / cell\n    if (inst.length && inst[0].length > 1) {\n      inst[0].splice(1);\n    }\n\n    return inst;\n  };\n\n  var _selector_row_indexes = function (settings, opts) {\n    var i,\n      ien,\n      tmp,\n      a = [],\n      displayFiltered = settings.aiDisplay,\n      displayMaster = settings.aiDisplayMaster;\n\n    var search = opts.search, // none, applied, removed\n      order = opts.order, // applied, current, index (original - compatibility with 1.9)\n      page = opts.page; // all, current\n\n    if (_fnDataSource(settings) == \"ssp\") {\n      // In server-side processing mode, most options are irrelevant since\n      // rows not shown don't exist and the index order is the applied order\n      // Removed is a special case - for consistency just return an empty\n      // array\n      return search === \"removed\" ? [] : _range(0, displayMaster.length);\n    }\n\n    if (page == \"current\") {\n      // Current page implies that order=current and filter=applied, since it is\n      // fairly senseless otherwise, regardless of what order and search actually\n      // are\n      for (\n        i = settings._iDisplayStart, ien = settings.fnDisplayEnd();\n        i < ien;\n        i++\n      ) {\n        a.push(displayFiltered[i]);\n      }\n    } else if (order == \"current\" || order == \"applied\") {\n      if (search == \"none\") {\n        a = displayMaster.slice();\n      } else if (search == \"applied\") {\n        a = displayFiltered.slice();\n      } else if (search == \"removed\") {\n        // O(n+m) solution by creating a hash map\n        var displayFilteredMap = {};\n\n        for (i = 0, ien = displayFiltered.length; i < ien; i++) {\n          displayFilteredMap[displayFiltered[i]] = null;\n        }\n\n        displayMaster.forEach(function (item) {\n          if (!Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\n            a.push(item);\n          }\n        });\n      }\n    } else if (order == \"index\" || order == \"original\") {\n      for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n        if (!settings.aoData[i]) {\n          continue;\n        }\n\n        if (search == \"none\") {\n          a.push(i);\n        } else {\n          // applied | removed\n          tmp = displayFiltered.indexOf(i);\n\n          if (\n            (tmp === -1 && search == \"removed\") ||\n            (tmp >= 0 && search == \"applied\")\n          ) {\n            a.push(i);\n          }\n        }\n      }\n    } else if (typeof order === \"number\") {\n      // Order the rows by the given column\n      var ordered = _fnSort(settings, order, \"asc\");\n\n      if (search === \"none\") {\n        a = ordered;\n      } else {\n        // applied | removed\n        for (i = 0; i < ordered.length; i++) {\n          tmp = displayFiltered.indexOf(ordered[i]);\n\n          if (\n            (tmp === -1 && search == \"removed\") ||\n            (tmp >= 0 && search == \"applied\")\n          ) {\n            a.push(ordered[i]);\n          }\n        }\n      }\n    }\n\n    return a;\n  };\n\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Rows\n   *\n   * {}          - no selector - use all available rows\n   * {integer}   - row aoData index\n   * {node}      - TR node\n   * {string}    - jQuery selector to apply to the TR elements\n   * {array}     - jQuery array of nodes, or simply an array of TR nodes\n   *\n   */\n  var __row_selector = function (settings, selector, opts) {\n    var rows;\n    var run = function (sel) {\n      var selInt = _intVal(sel);\n      var aoData = settings.aoData;\n\n      // Short cut - selector is a number and no options provided (default is\n      // all records, so no need to check if the index is in there, since it\n      // must be - dev error if the index doesn't exist).\n      if (selInt !== null && !opts) {\n        return [selInt];\n      }\n\n      if (!rows) {\n        rows = _selector_row_indexes(settings, opts);\n      }\n\n      if (selInt !== null && rows.indexOf(selInt) !== -1) {\n        // Selector - integer\n        return [selInt];\n      } else if (sel === null || sel === undefined || sel === \"\") {\n        // Selector - none\n        return rows;\n      }\n\n      // Selector - function\n      if (typeof sel === \"function\") {\n        return rows.map(function (idx) {\n          var row = aoData[idx];\n          return sel(idx, row._aData, row.nTr) ? idx : null;\n        });\n      }\n\n      // Selector - node\n      if (sel.nodeName) {\n        var rowIdx = sel._DT_RowIndex; // Property added by DT for fast lookup\n        var cellIdx = sel._DT_CellIndex;\n\n        if (rowIdx !== undefined) {\n          // Make sure that the row is actually still present in the table\n          return aoData[rowIdx] && aoData[rowIdx].nTr === sel ? [rowIdx] : [];\n        } else if (cellIdx) {\n          return aoData[cellIdx.row] &&\n            aoData[cellIdx.row].nTr === sel.parentNode\n            ? [cellIdx.row]\n            : [];\n        } else {\n          var host = $(sel).closest(\"*[data-dt-row]\");\n          return host.length ? [host.data(\"dt-row\")] : [];\n        }\n      }\n\n      // ID selector. Want to always be able to select rows by id, regardless\n      // of if the tr element has been created or not, so can't rely upon\n      // jQuery here - hence a custom implementation. This does not match\n      // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n      // but to select it using a CSS selector engine (like Sizzle or\n      // querySelect) it would need to need to be escaped for some characters.\n      // DataTables simplifies this for row selectors since you can select\n      // only a row. A # indicates an id any anything that follows is the id -\n      // unescaped.\n      if (typeof sel === \"string\" && sel.charAt(0) === \"#\") {\n        // get row index from id\n        var rowObj = settings.aIds[sel.replace(/^#/, \"\")];\n        if (rowObj !== undefined) {\n          return [rowObj.idx];\n        }\n\n        // need to fall through to jQuery in case there is DOM id that\n        // matches\n      }\n\n      // Get nodes in the order from the `rows` array with null values removed\n      var nodes = _removeEmpty(_pluck_order(settings.aoData, rows, \"nTr\"));\n\n      // Selector - jQuery selector string, array of nodes or jQuery object/\n      // As jQuery's .filter() allows jQuery objects to be passed in filter,\n      // it also allows arrays, so this will cope with all three options\n      return $(nodes)\n        .filter(sel)\n        .map(function () {\n          return this._DT_RowIndex;\n        })\n        .toArray();\n    };\n\n    var matched = _selector_run(\"row\", selector, run, settings, opts);\n\n    if (opts.order === \"current\" || opts.order === \"applied\") {\n      _fnSortDisplay(settings, matched);\n    }\n\n    return matched;\n  };\n\n  _api_register(\"rows()\", function (selector, opts) {\n    // argument shifting\n    if (selector === undefined) {\n      selector = \"\";\n    } else if ($.isPlainObject(selector)) {\n      opts = selector;\n      selector = \"\";\n    }\n\n    opts = _selector_opts(opts);\n\n    var inst = this.iterator(\n      \"table\",\n      function (settings) {\n        return __row_selector(settings, selector, opts);\n      },\n      1\n    );\n\n    // Want argument shifting here and in __row_selector?\n    inst.selector.rows = selector;\n    inst.selector.opts = opts;\n\n    return inst;\n  });\n\n  _api_register(\"rows().nodes()\", function () {\n    return this.iterator(\n      \"row\",\n      function (settings, row) {\n        return settings.aoData[row].nTr || undefined;\n      },\n      1\n    );\n  });\n\n  _api_register(\"rows().data()\", function () {\n    return this.iterator(\n      true,\n      \"rows\",\n      function (settings, rows) {\n        return _pluck_order(settings.aoData, rows, \"_aData\");\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\"rows().cache()\", \"row().cache()\", function (type) {\n    return this.iterator(\n      \"row\",\n      function (settings, row) {\n        var r = settings.aoData[row];\n        return type === \"search\" ? r._aFilterData : r._aSortData;\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\n    \"rows().invalidate()\",\n    \"row().invalidate()\",\n    function (src) {\n      return this.iterator(\"row\", function (settings, row) {\n        _fnInvalidate(settings, row, src);\n      });\n    }\n  );\n\n  _api_registerPlural(\"rows().indexes()\", \"row().index()\", function () {\n    return this.iterator(\n      \"row\",\n      function (settings, row) {\n        return row;\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\"rows().ids()\", \"row().id()\", function (hash) {\n    var a = [];\n    var context = this.context;\n\n    // `iterator` will drop undefined values, but in this case we want them\n    for (var i = 0, ien = context.length; i < ien; i++) {\n      for (var j = 0, jen = this[i].length; j < jen; j++) {\n        var id = context[i].rowIdFn(context[i].aoData[this[i][j]]._aData);\n        a.push((hash === true ? \"#\" : \"\") + id);\n      }\n    }\n\n    return new _Api(context, a);\n  });\n\n  _api_registerPlural(\"rows().remove()\", \"row().remove()\", function () {\n    this.iterator(\"row\", function (settings, row) {\n      var data = settings.aoData;\n      var rowData = data[row];\n\n      // Delete from the display arrays\n      var idx = settings.aiDisplayMaster.indexOf(row);\n      if (idx !== -1) {\n        settings.aiDisplayMaster.splice(idx, 1);\n      }\n\n      // For server-side processing tables - subtract the deleted row from the count\n      if (settings._iRecordsDisplay > 0) {\n        settings._iRecordsDisplay--;\n      }\n\n      // Check for an 'overflow' they case for displaying the table\n      _fnLengthOverflow(settings);\n\n      // Remove the row's ID reference if there is one\n      var id = settings.rowIdFn(rowData._aData);\n      if (id !== undefined) {\n        delete settings.aIds[id];\n      }\n\n      data[row] = null;\n    });\n\n    return this;\n  });\n\n  _api_register(\"rows.add()\", function (rows) {\n    var newRows = this.iterator(\n      \"table\",\n      function (settings) {\n        var row, i, ien;\n        var out = [];\n\n        for (i = 0, ien = rows.length; i < ien; i++) {\n          row = rows[i];\n\n          if (row.nodeName && row.nodeName.toUpperCase() === \"TR\") {\n            out.push(_fnAddTr(settings, row)[0]);\n          } else {\n            out.push(_fnAddData(settings, row));\n          }\n        }\n\n        return out;\n      },\n      1\n    );\n\n    // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n    var modRows = this.rows(-1);\n    modRows.pop();\n    modRows.push.apply(modRows, newRows);\n\n    return modRows;\n  });\n\n  /**\n   *\n   */\n  _api_register(\"row()\", function (selector, opts) {\n    return _selector_first(this.rows(selector, opts));\n  });\n\n  _api_register(\"row().data()\", function (data) {\n    var ctx = this.context;\n\n    if (data === undefined) {\n      // Get\n      return ctx.length && this.length && this[0].length\n        ? ctx[0].aoData[this[0]]._aData\n        : undefined;\n    }\n\n    // Set\n    var row = ctx[0].aoData[this[0]];\n    row._aData = data;\n\n    // If the DOM has an id, and the data source is an array\n    if (Array.isArray(data) && row.nTr && row.nTr.id) {\n      _fnSetObjectDataFn(ctx[0].rowId)(data, row.nTr.id);\n    }\n\n    // Automatically invalidate\n    _fnInvalidate(ctx[0], this[0], \"data\");\n\n    return this;\n  });\n\n  _api_register(\"row().node()\", function () {\n    var ctx = this.context;\n\n    if (ctx.length && this.length && this[0].length) {\n      var row = ctx[0].aoData[this[0]];\n\n      if (row && row.nTr) {\n        return row.nTr;\n      }\n    }\n\n    return null;\n  });\n\n  _api_register(\"row.add()\", function (row) {\n    // Allow a jQuery object to be passed in - only a single row is added from\n    // it though - the first element in the set\n    if (row instanceof $ && row.length) {\n      row = row[0];\n    }\n\n    var rows = this.iterator(\"table\", function (settings) {\n      if (row.nodeName && row.nodeName.toUpperCase() === \"TR\") {\n        return _fnAddTr(settings, row)[0];\n      }\n      return _fnAddData(settings, row);\n    });\n\n    // Return an Api.rows() extended instance, with the newly added row selected\n    return this.row(rows[0]);\n  });\n\n  $(document).on(\"plugin-init.dt\", function (e, context) {\n    var api = new _Api(context);\n\n    api.on(\"stateSaveParams.DT\", function (e, settings, d) {\n      // This could be more compact with the API, but it is a lot faster as a simple\n      // internal loop\n      var idFn = settings.rowIdFn;\n      var rows = settings.aiDisplayMaster;\n      var ids = [];\n\n      for (var i = 0; i < rows.length; i++) {\n        var rowIdx = rows[i];\n        var data = settings.aoData[rowIdx];\n\n        if (data._detailsShow) {\n          ids.push(\"#\" + idFn(data._aData));\n        }\n      }\n\n      d.childRows = ids;\n    });\n\n    // For future state loads (e.g. with StateRestore)\n    api.on(\"stateLoaded.DT\", function (e, settings, state) {\n      __details_state_load(api, state);\n    });\n\n    // And the initial load state\n    __details_state_load(api, api.state.loaded());\n  });\n\n  var __details_state_load = function (api, state) {\n    if (state && state.childRows) {\n      api\n        .rows(\n          state.childRows.map(function (id) {\n            // Escape any `:` characters from the row id. Accounts for\n            // already escaped characters.\n            return id.replace(/([^:\\\\]*(?:\\\\.[^:\\\\]*)*):/g, \"$1\\\\:\");\n          })\n        )\n        .every(function () {\n          _fnCallbackFire(api.settings()[0], null, \"requestChild\", [this]);\n        });\n    }\n  };\n\n  var __details_add = function (ctx, row, data, klass) {\n    // Convert to array of TR elements\n    var rows = [];\n    var addRow = function (r, k) {\n      // Recursion to allow for arrays of jQuery objects\n      if (Array.isArray(r) || r instanceof $) {\n        for (var i = 0, ien = r.length; i < ien; i++) {\n          addRow(r[i], k);\n        }\n        return;\n      }\n\n      // If we get a TR element, then just add it directly - up to the dev\n      // to add the correct number of columns etc\n      if (r.nodeName && r.nodeName.toLowerCase() === \"tr\") {\n        r.setAttribute(\"data-dt-row\", row.idx);\n        rows.push(r);\n      } else {\n        // Otherwise create a row with a wrapper\n        var created = $(\"<tr><td></td></tr>\")\n          .attr(\"data-dt-row\", row.idx)\n          .addClass(k);\n\n        $(\"td\", created).addClass(k).html(r)[0].colSpan = _fnVisbleColumns(ctx);\n\n        rows.push(created[0]);\n      }\n    };\n\n    addRow(data, klass);\n\n    if (row._details) {\n      row._details.detach();\n    }\n\n    row._details = $(rows);\n\n    // If the children were already shown, that state should be retained\n    if (row._detailsShow) {\n      row._details.insertAfter(row.nTr);\n    }\n  };\n\n  // Make state saving of child row details async to allow them to be batch processed\n  var __details_state = DataTable.util.throttle(function (ctx) {\n    _fnSaveState(ctx[0]);\n  }, 500);\n\n  var __details_remove = function (api, idx) {\n    var ctx = api.context;\n\n    if (ctx.length) {\n      var row = ctx[0].aoData[idx !== undefined ? idx : api[0]];\n\n      if (row && row._details) {\n        row._details.remove();\n\n        row._detailsShow = undefined;\n        row._details = undefined;\n        $(row.nTr).removeClass(\"dt-hasChild\");\n        __details_state(ctx);\n      }\n    }\n  };\n\n  var __details_display = function (api, show) {\n    var ctx = api.context;\n\n    if (ctx.length && api.length) {\n      var row = ctx[0].aoData[api[0]];\n\n      if (row._details) {\n        row._detailsShow = show;\n\n        if (show) {\n          row._details.insertAfter(row.nTr);\n          $(row.nTr).addClass(\"dt-hasChild\");\n        } else {\n          row._details.detach();\n          $(row.nTr).removeClass(\"dt-hasChild\");\n        }\n\n        _fnCallbackFire(ctx[0], null, \"childRow\", [show, api.row(api[0])]);\n\n        __details_events(ctx[0]);\n        __details_state(ctx);\n      }\n    }\n  };\n\n  var __details_events = function (settings) {\n    var api = new _Api(settings);\n    var namespace = \".dt.DT_details\";\n    var drawEvent = \"draw\" + namespace;\n    var colvisEvent = \"column-sizing\" + namespace;\n    var destroyEvent = \"destroy\" + namespace;\n    var data = settings.aoData;\n\n    api.off(drawEvent + \" \" + colvisEvent + \" \" + destroyEvent);\n\n    if (_pluck(data, \"_details\").length > 0) {\n      // On each draw, insert the required elements into the document\n      api.on(drawEvent, function (e, ctx) {\n        if (settings !== ctx) {\n          return;\n        }\n\n        api\n          .rows({ page: \"current\" })\n          .eq(0)\n          .each(function (idx) {\n            // Internal data grab\n            var row = data[idx];\n\n            if (row._detailsShow) {\n              row._details.insertAfter(row.nTr);\n            }\n          });\n      });\n\n      // Column visibility change - update the colspan\n      api.on(colvisEvent, function (e, ctx) {\n        if (settings !== ctx) {\n          return;\n        }\n\n        // Update the colspan for the details rows (note, only if it already has\n        // a colspan)\n        var row,\n          visible = _fnVisbleColumns(ctx);\n\n        for (var i = 0, ien = data.length; i < ien; i++) {\n          row = data[i];\n\n          if (row && row._details) {\n            row._details.each(function () {\n              var el = $(this).children(\"td\");\n\n              if (el.length == 1) {\n                el.attr(\"colspan\", visible);\n              }\n            });\n          }\n        }\n      });\n\n      // Table destroyed - nuke any child rows\n      api.on(destroyEvent, function (e, ctx) {\n        if (settings !== ctx) {\n          return;\n        }\n\n        for (var i = 0, ien = data.length; i < ien; i++) {\n          if (data[i] && data[i]._details) {\n            __details_remove(api, i);\n          }\n        }\n      });\n    }\n  };\n\n  // Strings for the method names to help minification\n  var _emp = \"\";\n  var _child_obj = _emp + \"row().child\";\n  var _child_mth = _child_obj + \"()\";\n\n  // data can be:\n  //  tr\n  //  string\n  //  jQuery or array of any of the above\n  _api_register(_child_mth, function (data, klass) {\n    var ctx = this.context;\n\n    if (data === undefined) {\n      // get\n      return ctx.length && this.length && ctx[0].aoData[this[0]]\n        ? ctx[0].aoData[this[0]]._details\n        : undefined;\n    } else if (data === true) {\n      // show\n      this.child.show();\n    } else if (data === false) {\n      // remove\n      __details_remove(this);\n    } else if (ctx.length && this.length) {\n      // set\n      __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);\n    }\n\n    return this;\n  });\n\n  _api_register(\n    [\n      _child_obj + \".show()\",\n      _child_mth + \".show()\", // only when `child()` was called with parameters (without\n    ],\n    function () {\n      // it returns an object and this method is not executed)\n      __details_display(this, true);\n      return this;\n    }\n  );\n\n  _api_register(\n    [\n      _child_obj + \".hide()\",\n      _child_mth + \".hide()\", // only when `child()` was called with parameters (without\n    ],\n    function () {\n      // it returns an object and this method is not executed)\n      __details_display(this, false);\n      return this;\n    }\n  );\n\n  _api_register(\n    [\n      _child_obj + \".remove()\",\n      _child_mth + \".remove()\", // only when `child()` was called with parameters (without\n    ],\n    function () {\n      // it returns an object and this method is not executed)\n      __details_remove(this);\n      return this;\n    }\n  );\n\n  _api_register(_child_obj + \".isShown()\", function () {\n    var ctx = this.context;\n\n    if (ctx.length && this.length && ctx[0].aoData[this[0]]) {\n      // _detailsShown as false or undefined will fall through to return false\n      return ctx[0].aoData[this[0]]._detailsShow || false;\n    }\n    return false;\n  });\n\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Columns\n   *\n   * {integer}           - column index (>=0 count from left, <0 count from right)\n   * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n   * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n   * \"{string}:name\"     - column name\n   * \"{string}\"          - jQuery selector on column header nodes\n   *\n   */\n\n  // can be an array of these items, comma separated list, or an array of comma\n  // separated lists\n\n  var __re_column_selector = /^([^:]+)?:(name|title|visIdx|visible)$/;\n\n  // r1 and r2 are redundant - but it means that the parameters match for the\n  // iterator callback in columns().data()\n  var __columnData = function (settings, column, r1, r2, rows, type) {\n    var a = [];\n    for (var row = 0, ien = rows.length; row < ien; row++) {\n      a.push(_fnGetCellData(settings, rows[row], column, type));\n    }\n    return a;\n  };\n\n  var __column_header = function (settings, column, row) {\n    var header = settings.aoHeader;\n    var target =\n      row !== undefined\n        ? row\n        : settings.bSortCellsTop // legacy support\n        ? 0\n        : header.length - 1;\n\n    return header[target][column].cell;\n  };\n\n  var __column_selector = function (settings, selector, opts) {\n    var columns = settings.aoColumns,\n      names = _pluck(columns, \"sName\"),\n      titles = _pluck(columns, \"sTitle\"),\n      cells = DataTable.util.get(\"[].[].cell\")(settings.aoHeader),\n      nodes = _unique(_flatten([], cells));\n\n    var run = function (s) {\n      var selInt = _intVal(s);\n\n      // Selector - all\n      if (s === \"\") {\n        return _range(columns.length);\n      }\n\n      // Selector - index\n      if (selInt !== null) {\n        return [\n          selInt >= 0\n            ? selInt // Count from left\n            : columns.length + selInt, // Count from right (+ because its a negative value)\n        ];\n      }\n\n      // Selector = function\n      if (typeof s === \"function\") {\n        var rows = _selector_row_indexes(settings, opts);\n\n        return columns.map(function (col, idx) {\n          return s(\n            idx,\n            __columnData(settings, idx, 0, 0, rows),\n            __column_header(settings, idx)\n          )\n            ? idx\n            : null;\n        });\n      }\n\n      // jQuery or string selector\n      var match = typeof s === \"string\" ? s.match(__re_column_selector) : \"\";\n\n      if (match) {\n        switch (match[2]) {\n          case \"visIdx\":\n          case \"visible\":\n            // Selector is a column index\n            if (match[1] && match[1].match(/^\\d+$/)) {\n              var idx = parseInt(match[1], 10);\n\n              // Visible index given, convert to column index\n              if (idx < 0) {\n                // Counting from the right\n                var visColumns = columns.map(function (col, i) {\n                  return col.bVisible ? i : null;\n                });\n                return [visColumns[visColumns.length + idx]];\n              }\n              // Counting from the left\n              return [_fnVisibleToColumnIndex(settings, idx)];\n            }\n\n            return columns.map(function (col, idx) {\n              // Not visible, can't match\n              if (!col.bVisible) {\n                return null;\n              }\n\n              // Selector\n              if (match[1]) {\n                return $(nodes[idx]).filter(match[1]).length > 0 ? idx : null;\n              }\n\n              // `:visible` on its own\n              return idx;\n            });\n\n          case \"name\":\n            // match by name. `names` is column index complete and in order\n            return names.map(function (name, i) {\n              return name === match[1] ? i : null;\n            });\n\n          case \"title\":\n            // match by column title\n            return titles.map(function (title, i) {\n              return title === match[1] ? i : null;\n            });\n\n          default:\n            return [];\n        }\n      }\n\n      // Cell in the table body\n      if (s.nodeName && s._DT_CellIndex) {\n        return [s._DT_CellIndex.column];\n      }\n\n      // jQuery selector on the TH elements for the columns\n      var jqResult = $(nodes)\n        .filter(s)\n        .map(function () {\n          return _fnColumnsFromHeader(this); // `nodes` is column index complete and in order\n        })\n        .toArray();\n\n      if (jqResult.length || !s.nodeName) {\n        return jqResult;\n      }\n\n      // Otherwise a node which might have a `dt-column` data attribute, or be\n      // a child or such an element\n      var host = $(s).closest(\"*[data-dt-column]\");\n      return host.length ? [host.data(\"dt-column\")] : [];\n    };\n\n    return _selector_run(\"column\", selector, run, settings, opts);\n  };\n\n  var __setColumnVis = function (settings, column, vis) {\n    var cols = settings.aoColumns,\n      col = cols[column],\n      data = settings.aoData,\n      cells,\n      i,\n      ien,\n      tr;\n\n    // Get\n    if (vis === undefined) {\n      return col.bVisible;\n    }\n\n    // Set\n    // No change\n    if (col.bVisible === vis) {\n      return false;\n    }\n\n    if (vis) {\n      // Insert column\n      // Need to decide if we should use appendChild or insertBefore\n      var insertBefore = _pluck(cols, \"bVisible\").indexOf(true, column + 1);\n\n      for (i = 0, ien = data.length; i < ien; i++) {\n        if (data[i]) {\n          tr = data[i].nTr;\n          cells = data[i].anCells;\n\n          if (tr) {\n            // insertBefore can act like appendChild if 2nd arg is null\n            tr.insertBefore(cells[column], cells[insertBefore] || null);\n          }\n        }\n      }\n    } else {\n      // Remove column\n      $(_pluck(settings.aoData, \"anCells\", column)).detach();\n    }\n\n    // Common actions\n    col.bVisible = vis;\n\n    _colGroup(settings);\n\n    return true;\n  };\n\n  _api_register(\"columns()\", function (selector, opts) {\n    // argument shifting\n    if (selector === undefined) {\n      selector = \"\";\n    } else if ($.isPlainObject(selector)) {\n      opts = selector;\n      selector = \"\";\n    }\n\n    opts = _selector_opts(opts);\n\n    var inst = this.iterator(\n      \"table\",\n      function (settings) {\n        return __column_selector(settings, selector, opts);\n      },\n      1\n    );\n\n    // Want argument shifting here and in _row_selector?\n    inst.selector.cols = selector;\n    inst.selector.opts = opts;\n\n    return inst;\n  });\n\n  _api_registerPlural(\n    \"columns().header()\",\n    \"column().header()\",\n    function (row) {\n      return this.iterator(\n        \"column\",\n        function (settings, column) {\n          return __column_header(settings, column, row);\n        },\n        1\n      );\n    }\n  );\n\n  _api_registerPlural(\n    \"columns().footer()\",\n    \"column().footer()\",\n    function (row) {\n      return this.iterator(\n        \"column\",\n        function (settings, column) {\n          var footer = settings.aoFooter;\n\n          if (!footer.length) {\n            return null;\n          }\n\n          return settings.aoFooter[row !== undefined ? row : 0][column].cell;\n        },\n        1\n      );\n    }\n  );\n\n  _api_registerPlural(\"columns().data()\", \"column().data()\", function () {\n    return this.iterator(\"column-rows\", __columnData, 1);\n  });\n\n  _api_registerPlural(\n    \"columns().render()\",\n    \"column().render()\",\n    function (type) {\n      return this.iterator(\n        \"column-rows\",\n        function (settings, column, i, j, rows) {\n          return __columnData(settings, column, i, j, rows, type);\n        },\n        1\n      );\n    }\n  );\n\n  _api_registerPlural(\"columns().dataSrc()\", \"column().dataSrc()\", function () {\n    return this.iterator(\n      \"column\",\n      function (settings, column) {\n        return settings.aoColumns[column].mData;\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\"columns().cache()\", \"column().cache()\", function (type) {\n    return this.iterator(\n      \"column-rows\",\n      function (settings, column, i, j, rows) {\n        return _pluck_order(\n          settings.aoData,\n          rows,\n          type === \"search\" ? \"_aFilterData\" : \"_aSortData\",\n          column\n        );\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\"columns().init()\", \"column().init()\", function () {\n    return this.iterator(\n      \"column\",\n      function (settings, column) {\n        return settings.aoColumns[column];\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\"columns().nodes()\", \"column().nodes()\", function () {\n    return this.iterator(\n      \"column-rows\",\n      function (settings, column, i, j, rows) {\n        return _pluck_order(settings.aoData, rows, \"anCells\", column);\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\n    \"columns().titles()\",\n    \"column().title()\",\n    function (title, row) {\n      return this.iterator(\n        \"column\",\n        function (settings, column) {\n          // Argument shifting\n          if (typeof title === \"number\") {\n            row = title;\n            title = undefined;\n          }\n\n          var span = $(\"span.dt-column-title\", this.column(column).header(row));\n\n          if (title !== undefined) {\n            span.html(title);\n            return this;\n          }\n\n          return span.html();\n        },\n        1\n      );\n    }\n  );\n\n  _api_registerPlural(\"columns().types()\", \"column().type()\", function () {\n    return this.iterator(\n      \"column\",\n      function (settings, column) {\n        var type = settings.aoColumns[column].sType;\n\n        // If the type was invalidated, then resolve it. This actually does\n        // all columns at the moment. Would only happen once if getting all\n        // column's data types.\n        if (!type) {\n          _fnColumnTypes(settings);\n        }\n\n        return type;\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\n    \"columns().visible()\",\n    \"column().visible()\",\n    function (vis, calc) {\n      var that = this;\n      var changed = [];\n      var ret = this.iterator(\"column\", function (settings, column) {\n        if (vis === undefined) {\n          return settings.aoColumns[column].bVisible;\n        } // else\n\n        if (__setColumnVis(settings, column, vis)) {\n          changed.push(column);\n        }\n      });\n\n      // Group the column visibility changes\n      if (vis !== undefined) {\n        this.iterator(\"table\", function (settings) {\n          // Redraw the header after changes\n          _fnDrawHead(settings, settings.aoHeader);\n          _fnDrawHead(settings, settings.aoFooter);\n\n          // Update colspan for no records display. Child rows and extensions will use their own\n          // listeners to do this - only need to update the empty table item here\n          if (!settings.aiDisplay.length) {\n            $(settings.nTBody)\n              .find(\"td[colspan]\")\n              .attr(\"colspan\", _fnVisbleColumns(settings));\n          }\n\n          _fnSaveState(settings);\n\n          // Second loop once the first is done for events\n          that.iterator(\"column\", function (settings, column) {\n            if (changed.includes(column)) {\n              _fnCallbackFire(settings, null, \"column-visibility\", [\n                settings,\n                column,\n                vis,\n                calc,\n              ]);\n            }\n          });\n\n          if (changed.length && (calc === undefined || calc)) {\n            that.columns.adjust();\n          }\n        });\n      }\n\n      return ret;\n    }\n  );\n\n  _api_registerPlural(\"columns().widths()\", \"column().width()\", function () {\n    // Injects a fake row into the table for just a moment so the widths can\n    // be read, regardless of colspan in the header and rows being present in\n    // the body\n    var columns = this.columns(\":visible\").count();\n    var row = $(\"<tr>\").html(\n      \"<td>\" + Array(columns).join(\"</td><td>\") + \"</td>\"\n    );\n\n    $(this.table().body()).append(row);\n\n    var widths = row.children().map(function () {\n      return $(this).outerWidth();\n    });\n\n    row.remove();\n\n    return this.iterator(\n      \"column\",\n      function (settings, column) {\n        var visIdx = _fnColumnIndexToVisible(settings, column);\n\n        return visIdx !== null ? widths[visIdx] : 0;\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\n    \"columns().indexes()\",\n    \"column().index()\",\n    function (type) {\n      return this.iterator(\n        \"column\",\n        function (settings, column) {\n          return type === \"visible\"\n            ? _fnColumnIndexToVisible(settings, column)\n            : column;\n        },\n        1\n      );\n    }\n  );\n\n  _api_register(\"columns.adjust()\", function () {\n    return this.iterator(\n      \"table\",\n      function (settings) {\n        _fnAdjustColumnSizing(settings);\n      },\n      1\n    );\n  });\n\n  _api_register(\"column.index()\", function (type, idx) {\n    if (this.context.length !== 0) {\n      var ctx = this.context[0];\n\n      if (type === \"fromVisible\" || type === \"toData\") {\n        return _fnVisibleToColumnIndex(ctx, idx);\n      } else if (type === \"fromData\" || type === \"toVisible\") {\n        return _fnColumnIndexToVisible(ctx, idx);\n      }\n    }\n  });\n\n  _api_register(\"column()\", function (selector, opts) {\n    return _selector_first(this.columns(selector, opts));\n  });\n\n  var __cell_selector = function (settings, selector, opts) {\n    var data = settings.aoData;\n    var rows = _selector_row_indexes(settings, opts);\n    var cells = _removeEmpty(_pluck_order(data, rows, \"anCells\"));\n    var allCells = $(_flatten([], cells));\n    var row;\n    var columns = settings.aoColumns.length;\n    var a, i, ien, j, o, host;\n\n    var run = function (s) {\n      var fnSelector = typeof s === \"function\";\n\n      if (s === null || s === undefined || fnSelector) {\n        // All cells and function selectors\n        a = [];\n\n        for (i = 0, ien = rows.length; i < ien; i++) {\n          row = rows[i];\n\n          for (j = 0; j < columns; j++) {\n            o = {\n              row: row,\n              column: j,\n            };\n\n            if (fnSelector) {\n              // Selector - function\n              host = data[row];\n\n              if (\n                s(\n                  o,\n                  _fnGetCellData(settings, row, j),\n                  host.anCells ? host.anCells[j] : null\n                )\n              ) {\n                a.push(o);\n              }\n            } else {\n              // Selector - all\n              a.push(o);\n            }\n          }\n        }\n\n        return a;\n      }\n\n      // Selector - index\n      if ($.isPlainObject(s)) {\n        // Valid cell index and its in the array of selectable rows\n        return s.column !== undefined &&\n          s.row !== undefined &&\n          rows.indexOf(s.row) !== -1\n          ? [s]\n          : [];\n      }\n\n      // Selector - jQuery filtered cells\n      var jqResult = allCells\n        .filter(s)\n        .map(function (i, el) {\n          return {\n            // use a new object, in case someone changes the values\n            row: el._DT_CellIndex.row,\n            column: el._DT_CellIndex.column,\n          };\n        })\n        .toArray();\n\n      if (jqResult.length || !s.nodeName) {\n        return jqResult;\n      }\n\n      // Otherwise the selector is a node, and there is one last option - the\n      // element might be a child of an element which has dt-row and dt-column\n      // data attributes\n      host = $(s).closest(\"*[data-dt-row]\");\n      return host.length\n        ? [\n            {\n              row: host.data(\"dt-row\"),\n              column: host.data(\"dt-column\"),\n            },\n          ]\n        : [];\n    };\n\n    return _selector_run(\"cell\", selector, run, settings, opts);\n  };\n\n  _api_register(\"cells()\", function (rowSelector, columnSelector, opts) {\n    // Argument shifting\n    if ($.isPlainObject(rowSelector)) {\n      // Indexes\n      if (rowSelector.row === undefined) {\n        // Selector options in first parameter\n        opts = rowSelector;\n        rowSelector = null;\n      } else {\n        // Cell index objects in first parameter\n        opts = columnSelector;\n        columnSelector = null;\n      }\n    }\n    if ($.isPlainObject(columnSelector)) {\n      opts = columnSelector;\n      columnSelector = null;\n    }\n\n    // Cell selector\n    if (columnSelector === null || columnSelector === undefined) {\n      return this.iterator(\"table\", function (settings) {\n        return __cell_selector(settings, rowSelector, _selector_opts(opts));\n      });\n    }\n\n    // The default built in options need to apply to row and columns\n    var internalOpts = opts\n      ? {\n          page: opts.page,\n          order: opts.order,\n          search: opts.search,\n        }\n      : {};\n\n    // Row + column selector\n    var columns = this.columns(columnSelector, internalOpts);\n    var rows = this.rows(rowSelector, internalOpts);\n    var i, ien, j, jen;\n\n    var cellsNoOpts = this.iterator(\n      \"table\",\n      function (settings, idx) {\n        var a = [];\n\n        for (i = 0, ien = rows[idx].length; i < ien; i++) {\n          for (j = 0, jen = columns[idx].length; j < jen; j++) {\n            a.push({\n              row: rows[idx][i],\n              column: columns[idx][j],\n            });\n          }\n        }\n\n        return a;\n      },\n      1\n    );\n\n    // There is currently only one extension which uses a cell selector extension\n    // It is a _major_ performance drag to run this if it isn't needed, so this is\n    // an extension specific check at the moment\n    var cells =\n      opts && opts.selected ? this.cells(cellsNoOpts, opts) : cellsNoOpts;\n\n    $.extend(cells.selector, {\n      cols: columnSelector,\n      rows: rowSelector,\n      opts: opts,\n    });\n\n    return cells;\n  });\n\n  _api_registerPlural(\"cells().nodes()\", \"cell().node()\", function () {\n    return this.iterator(\n      \"cell\",\n      function (settings, row, column) {\n        var data = settings.aoData[row];\n\n        return data && data.anCells ? data.anCells[column] : undefined;\n      },\n      1\n    );\n  });\n\n  _api_register(\"cells().data()\", function () {\n    return this.iterator(\n      \"cell\",\n      function (settings, row, column) {\n        return _fnGetCellData(settings, row, column);\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\"cells().cache()\", \"cell().cache()\", function (type) {\n    type = type === \"search\" ? \"_aFilterData\" : \"_aSortData\";\n\n    return this.iterator(\n      \"cell\",\n      function (settings, row, column) {\n        return settings.aoData[row][type][column];\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\"cells().render()\", \"cell().render()\", function (type) {\n    return this.iterator(\n      \"cell\",\n      function (settings, row, column) {\n        return _fnGetCellData(settings, row, column, type);\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\"cells().indexes()\", \"cell().index()\", function () {\n    return this.iterator(\n      \"cell\",\n      function (settings, row, column) {\n        return {\n          row: row,\n          column: column,\n          columnVisible: _fnColumnIndexToVisible(settings, column),\n        };\n      },\n      1\n    );\n  });\n\n  _api_registerPlural(\n    \"cells().invalidate()\",\n    \"cell().invalidate()\",\n    function (src) {\n      return this.iterator(\"cell\", function (settings, row, column) {\n        _fnInvalidate(settings, row, src, column);\n      });\n    }\n  );\n\n  _api_register(\"cell()\", function (rowSelector, columnSelector, opts) {\n    return _selector_first(this.cells(rowSelector, columnSelector, opts));\n  });\n\n  _api_register(\"cell().data()\", function (data) {\n    var ctx = this.context;\n    var cell = this[0];\n\n    if (data === undefined) {\n      // Get\n      return ctx.length && cell.length\n        ? _fnGetCellData(ctx[0], cell[0].row, cell[0].column)\n        : undefined;\n    }\n\n    // Set\n    _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n    _fnInvalidate(ctx[0], cell[0].row, \"data\", cell[0].column);\n\n    return this;\n  });\n\n  /**\n   * Get current ordering (sorting) that has been applied to the table.\n   *\n   * @returns {array} 2D array containing the sorting information for the first\n   *   table in the current context. Each element in the parent array represents\n   *   a column being sorted upon (i.e. multi-sorting with two columns would have\n   *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n   *   the column index that the sorting condition applies to, the second is the\n   *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n   *   index of the sorting order from the `column.sorting` initialisation array.\n   */ /**\n   * Set the ordering for the table.\n   *\n   * @param {integer} order Column index to sort upon.\n   * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n   * @returns {DataTables.Api} this\n   */ /**\n   * Set the ordering for the table.\n   *\n   * @param {array} order 1D array of sorting information to be applied.\n   * @param {array} [...] Optional additional sorting conditions\n   * @returns {DataTables.Api} this\n   */ /**\n   * Set the ordering for the table.\n   *\n   * @param {array} order 2D array of sorting information to be applied.\n   * @returns {DataTables.Api} this\n   */ _api_register(\"order()\", function (order, dir) {\n    var ctx = this.context;\n    var args = Array.prototype.slice.call(arguments);\n\n    if (order === undefined) {\n      // get\n      return ctx.length !== 0 ? ctx[0].aaSorting : undefined;\n    }\n\n    // set\n    if (typeof order === \"number\") {\n      // Simple column / direction passed in\n      order = [[order, dir]];\n    } else if (args.length > 1) {\n      // Arguments passed in (list of 1D arrays)\n      order = args;\n    }\n    // otherwise a 2D array was passed in\n\n    return this.iterator(\"table\", function (settings) {\n      settings.aaSorting = Array.isArray(order) ? order.slice() : order;\n    });\n  });\n\n  /**\n   * Attach a sort listener to an element for a given column\n   *\n   * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n   *   listener to. This can take the form of a single DOM node, a jQuery\n   *   collection of nodes or a jQuery selector which will identify the node(s).\n   * @param {integer} column the column that a click on this node will sort on\n   * @param {function} [callback] callback function when sort is run\n   * @returns {DataTables.Api} this\n   */\n  _api_register(\"order.listener()\", function (node, column, callback) {\n    return this.iterator(\"table\", function (settings) {\n      _fnSortAttachListener(settings, node, {}, column, callback);\n    });\n  });\n\n  _api_register(\"order.fixed()\", function (set) {\n    if (!set) {\n      var ctx = this.context;\n      var fixed = ctx.length ? ctx[0].aaSortingFixed : undefined;\n\n      return Array.isArray(fixed) ? { pre: fixed } : fixed;\n    }\n\n    return this.iterator(\"table\", function (settings) {\n      settings.aaSortingFixed = $.extend(true, {}, set);\n    });\n  });\n\n  // Order by the selected column(s)\n  _api_register([\"columns().order()\", \"column().order()\"], function (dir) {\n    var that = this;\n\n    if (!dir) {\n      return this.iterator(\n        \"column\",\n        function (settings, idx) {\n          var sort = _fnSortFlatten(settings);\n\n          for (var i = 0, ien = sort.length; i < ien; i++) {\n            if (sort[i].col === idx) {\n              return sort[i].dir;\n            }\n          }\n\n          return null;\n        },\n        1\n      );\n    } else {\n      return this.iterator(\"table\", function (settings, i) {\n        settings.aaSorting = that[i].map(function (col) {\n          return [col, dir];\n        });\n      });\n    }\n  });\n\n  _api_registerPlural(\n    \"columns().orderable()\",\n    \"column().orderable()\",\n    function (directions) {\n      return this.iterator(\n        \"column\",\n        function (settings, idx) {\n          var col = settings.aoColumns[idx];\n\n          return directions ? col.asSorting : col.bSortable;\n        },\n        1\n      );\n    }\n  );\n\n  _api_register(\"processing()\", function (show) {\n    return this.iterator(\"table\", function (ctx) {\n      _fnProcessingDisplay(ctx, show);\n    });\n  });\n\n  _api_register(\"search()\", function (input, regex, smart, caseInsen) {\n    var ctx = this.context;\n\n    if (input === undefined) {\n      // get\n      return ctx.length !== 0 ? ctx[0].oPreviousSearch.search : undefined;\n    }\n\n    // set\n    return this.iterator(\"table\", function (settings) {\n      if (!settings.oFeatures.bFilter) {\n        return;\n      }\n\n      if (typeof regex === \"object\") {\n        // New style options to pass to the search builder\n        _fnFilterComplete(\n          settings,\n          $.extend(settings.oPreviousSearch, regex, {\n            search: input,\n          })\n        );\n      } else {\n        // Compat for the old options\n        _fnFilterComplete(\n          settings,\n          $.extend(settings.oPreviousSearch, {\n            search: input,\n            regex: regex === null ? false : regex,\n            smart: smart === null ? true : smart,\n            caseInsensitive: caseInsen === null ? true : caseInsen,\n          })\n        );\n      }\n    });\n  });\n\n  _api_register(\"search.fixed()\", function (name, search) {\n    var ret = this.iterator(true, \"table\", function (settings) {\n      var fixed = settings.searchFixed;\n\n      if (!name) {\n        return Object.keys(fixed);\n      } else if (search === undefined) {\n        return fixed[name];\n      } else if (search === null) {\n        delete fixed[name];\n      } else {\n        fixed[name] = search;\n      }\n\n      return this;\n    });\n\n    return name !== undefined && search === undefined ? ret[0] : ret;\n  });\n\n  _api_registerPlural(\n    \"columns().search()\",\n    \"column().search()\",\n    function (input, regex, smart, caseInsen) {\n      return this.iterator(\"column\", function (settings, column) {\n        var preSearch = settings.aoPreSearchCols;\n\n        if (input === undefined) {\n          // get\n          return preSearch[column].search;\n        }\n\n        // set\n        if (!settings.oFeatures.bFilter) {\n          return;\n        }\n\n        if (typeof regex === \"object\") {\n          // New style options to pass to the search builder\n          $.extend(preSearch[column], regex, {\n            search: input,\n          });\n        } else {\n          // Old style (with not all options available)\n          $.extend(preSearch[column], {\n            search: input,\n            regex: regex === null ? false : regex,\n            smart: smart === null ? true : smart,\n            caseInsensitive: caseInsen === null ? true : caseInsen,\n          });\n        }\n\n        _fnFilterComplete(settings, settings.oPreviousSearch);\n      });\n    }\n  );\n\n  _api_register(\n    [\"columns().search.fixed()\", \"column().search.fixed()\"],\n    function (name, search) {\n      var ret = this.iterator(true, \"column\", function (settings, colIdx) {\n        var fixed = settings.aoColumns[colIdx].searchFixed;\n\n        if (!name) {\n          return Object.keys(fixed);\n        } else if (search === undefined) {\n          return fixed[name];\n        } else if (search === null) {\n          delete fixed[name];\n        } else {\n          fixed[name] = search;\n        }\n\n        return this;\n      });\n\n      return name !== undefined && search === undefined ? ret[0] : ret;\n    }\n  );\n  /*\n   * State API methods\n   */\n\n  _api_register(\"state()\", function (set, ignoreTime) {\n    // getter\n    if (!set) {\n      return this.context.length ? this.context[0].oSavedState : null;\n    }\n\n    var setMutate = $.extend(true, {}, set);\n\n    // setter\n    return this.iterator(\"table\", function (settings) {\n      if (ignoreTime !== false) {\n        setMutate.time = +new Date() + 100;\n      }\n\n      _fnImplementState(settings, setMutate, function () {});\n    });\n  });\n\n  _api_register(\"state.clear()\", function () {\n    return this.iterator(\"table\", function (settings) {\n      // Save an empty object\n      settings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n    });\n  });\n\n  _api_register(\"state.loaded()\", function () {\n    return this.context.length ? this.context[0].oLoadedState : null;\n  });\n\n  _api_register(\"state.save()\", function () {\n    return this.iterator(\"table\", function (settings) {\n      _fnSaveState(settings);\n    });\n  });\n\n  /**\n   * Set the libraries that DataTables uses, or the global objects.\n   * Note that the arguments can be either way around (legacy support)\n   * and the second is optional. See docs.\n   */\n  DataTable.use = function (arg1, arg2) {\n    // Reverse arguments for legacy support\n    var module = typeof arg1 === \"string\" ? arg2 : arg1;\n    var type = typeof arg2 === \"string\" ? arg2 : arg1;\n\n    // Getter\n    if (module === undefined && typeof type === \"string\") {\n      switch (type) {\n        case \"lib\":\n        case \"jq\":\n          return $;\n\n        case \"win\":\n          return window;\n\n        case \"datetime\":\n          return DataTable.DateTime;\n\n        case \"luxon\":\n          return __luxon;\n\n        case \"moment\":\n          return __moment;\n\n        default:\n          return null;\n      }\n    }\n\n    // Setter\n    if (\n      type === \"lib\" ||\n      type === \"jq\" ||\n      (module && module.fn && module.fn.jquery)\n    ) {\n      $ = module;\n    } else if (type == \"win\" || (module && module.document)) {\n      window = module;\n      document = module.document;\n    } else if (type === \"datetime\" || (module && module.type === \"DateTime\")) {\n      DataTable.DateTime = module;\n    } else if (type === \"luxon\" || (module && module.FixedOffsetZone)) {\n      __luxon = module;\n    } else if (type === \"moment\" || (module && module.isMoment)) {\n      __moment = module;\n    }\n  };\n\n  /**\n   * CommonJS factory function pass through. This will check if the arguments\n   * given are a window object or a jQuery object. If so they are set\n   * accordingly.\n   * @param {*} root Window\n   * @param {*} jq jQUery\n   * @returns {boolean} Indicator\n   */\n  DataTable.factory = function (root, jq) {\n    var is = false;\n\n    // Test if the first parameter is a window object\n    if (root && root.document) {\n      window = root;\n      document = root.document;\n    }\n\n    // Test if the second parameter is a jQuery object\n    if (jq && jq.fn && jq.fn.jquery) {\n      $ = jq;\n      is = true;\n    }\n\n    return is;\n  };\n\n  /**\n   * Provide a common method for plug-ins to check the version of DataTables being\n   * used, in order to ensure compatibility.\n   *\n   *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n   *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n   *  @param {string} [version2=current DataTables version] As above, but optional.\n   *   If not given the current DataTables version will be used.\n   *  @returns {boolean} true if this version of DataTables is greater or equal to\n   *    the required version, or false if this version of DataTales is not\n   *    suitable\n   *  @static\n   *  @dtopt API-Static\n   *\n   *  @example\n   *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n   */\n  DataTable.versionCheck = function (version, version2) {\n    var aThis = version2 ? version2.split(\".\") : DataTable.version.split(\".\");\n    var aThat = version.split(\".\");\n    var iThis, iThat;\n\n    for (var i = 0, iLen = aThat.length; i < iLen; i++) {\n      iThis = parseInt(aThis[i], 10) || 0;\n      iThat = parseInt(aThat[i], 10) || 0;\n\n      // Parts are the same, keep comparing\n      if (iThis === iThat) {\n        continue;\n      }\n\n      // Parts are different, return immediately\n      return iThis > iThat;\n    }\n\n    return true;\n  };\n\n  /**\n   * Check if a `<table>` node is a DataTable table already or not.\n   *\n   *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n   *      selector for the table to test. Note that if more than more than one\n   *      table is passed on, only the first will be checked\n   *  @returns {boolean} true the table given is a DataTable, or false otherwise\n   *  @static\n   *  @dtopt API-Static\n   *\n   *  @example\n   *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n   *      $('#example').dataTable();\n   *    }\n   */\n  DataTable.isDataTable = function (table) {\n    var t = $(table).get(0);\n    var is = false;\n\n    if (table instanceof DataTable.Api) {\n      return true;\n    }\n\n    $.each(DataTable.settings, function (i, o) {\n      var head = o.nScrollHead ? $(\"table\", o.nScrollHead)[0] : null;\n      var foot = o.nScrollFoot ? $(\"table\", o.nScrollFoot)[0] : null;\n\n      if (o.nTable === t || head === t || foot === t) {\n        is = true;\n      }\n    });\n\n    return is;\n  };\n\n  /**\n   * Get all DataTable tables that have been initialised - optionally you can\n   * select to get only currently visible tables.\n   *\n   *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n   *    or visible tables only.\n   *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n   *    DataTables\n   *  @static\n   *  @dtopt API-Static\n   *\n   *  @example\n   *    $.each( $.fn.dataTable.tables(true), function () {\n   *      $(table).DataTable().columns.adjust();\n   *    } );\n   */\n  DataTable.tables = function (visible) {\n    var api = false;\n\n    if ($.isPlainObject(visible)) {\n      api = visible.api;\n      visible = visible.visible;\n    }\n\n    var a = DataTable.settings\n      .filter(function (o) {\n        return !visible || (visible && $(o.nTable).is(\":visible\"))\n          ? true\n          : false;\n      })\n      .map(function (o) {\n        return o.nTable;\n      });\n\n    return api ? new _Api(a) : a;\n  };\n\n  /**\n   * Convert from camel case parameters to Hungarian notation. This is made public\n   * for the extensions to provide the same ability as DataTables core to accept\n   * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n   * parameters.\n   *\n   *  @param {object} src The model object which holds all parameters that can be\n   *    mapped.\n   *  @param {object} user The object to convert from camel case to Hungarian.\n   *  @param {boolean} force When set to `true`, properties which already have a\n   *    Hungarian value in the `user` object will be overwritten. Otherwise they\n   *    won't be.\n   */\n  DataTable.camelToHungarian = _fnCamelToHungarian;\n\n  /**\n   *\n   */\n  _api_register(\"$()\", function (selector, opts) {\n    var rows = this.rows(opts).nodes(), // Get all rows\n      jqRows = $(rows);\n\n    return $(\n      [].concat(\n        jqRows.filter(selector).toArray(),\n        jqRows.find(selector).toArray()\n      )\n    );\n  });\n\n  // jQuery functions to operate on the tables\n  $.each([\"on\", \"one\", \"off\"], function (i, key) {\n    _api_register(key + \"()\", function (/* event, handler */) {\n      var args = Array.prototype.slice.call(arguments);\n\n      // Add the `dt` namespace automatically if it isn't already present\n      args[0] = args[0]\n        .split(/\\s/)\n        .map(function (e) {\n          return !e.match(/\\.dt\\b/) ? e + \".dt\" : e;\n        })\n        .join(\" \");\n\n      var inst = $(this.tables().nodes());\n      inst[key].apply(inst, args);\n      return this;\n    });\n  });\n\n  _api_register(\"clear()\", function () {\n    return this.iterator(\"table\", function (settings) {\n      _fnClearTable(settings);\n    });\n  });\n\n  _api_register(\"error()\", function (msg) {\n    return this.iterator(\"table\", function (settings) {\n      _fnLog(settings, 0, msg);\n    });\n  });\n\n  _api_register(\"settings()\", function () {\n    return new _Api(this.context, this.context);\n  });\n\n  _api_register(\"init()\", function () {\n    var ctx = this.context;\n    return ctx.length ? ctx[0].oInit : null;\n  });\n\n  _api_register(\"data()\", function () {\n    return this.iterator(\"table\", function (settings) {\n      return _pluck(settings.aoData, \"_aData\");\n    }).flatten();\n  });\n\n  _api_register(\"trigger()\", function (name, args, bubbles) {\n    return this.iterator(\"table\", function (settings) {\n      return _fnCallbackFire(settings, null, name, args, bubbles);\n    }).flatten();\n  });\n\n  _api_register(\"ready()\", function (fn) {\n    var ctx = this.context;\n\n    // Get status of first table\n    if (!fn) {\n      return ctx.length ? ctx[0]._bInitComplete || false : null;\n    }\n\n    // Function to run either once the table becomes ready or\n    // immediately if it is already ready.\n    return this.tables().every(function () {\n      if (this.context[0]._bInitComplete) {\n        fn.call(this);\n      } else {\n        this.on(\"init\", function () {\n          fn.call(this);\n        });\n      }\n    });\n  });\n\n  _api_register(\"destroy()\", function (remove) {\n    remove = remove || false;\n\n    return this.iterator(\"table\", function (settings) {\n      var classes = settings.oClasses;\n      var table = settings.nTable;\n      var tbody = settings.nTBody;\n      var thead = settings.nTHead;\n      var tfoot = settings.nTFoot;\n      var jqTable = $(table);\n      var jqTbody = $(tbody);\n      var jqWrapper = $(settings.nTableWrapper);\n      var rows = settings.aoData.map(function (r) {\n        return r ? r.nTr : null;\n      });\n      var orderClasses = classes.order;\n\n      // Flag to note that the table is currently being destroyed - no action\n      // should be taken\n      settings.bDestroying = true;\n\n      // Fire off the destroy callbacks for plug-ins etc\n      _fnCallbackFire(\n        settings,\n        \"aoDestroyCallback\",\n        \"destroy\",\n        [settings],\n        true\n      );\n\n      // If not being removed from the document, make all columns visible\n      if (!remove) {\n        new _Api(settings).columns().visible(true);\n      }\n\n      // Blitz all `DT` namespaced events (these are internal events, the\n      // lowercase, `dt` events are user subscribed and they are responsible\n      // for removing them\n      jqWrapper.off(\".DT\").find(\":not(tbody *)\").off(\".DT\");\n      $(window).off(\".DT-\" + settings.sInstance);\n\n      // When scrolling we had to break the table up - restore it\n      if (table != thead.parentNode) {\n        jqTable.children(\"thead\").detach();\n        jqTable.append(thead);\n      }\n\n      if (tfoot && table != tfoot.parentNode) {\n        jqTable.children(\"tfoot\").detach();\n        jqTable.append(tfoot);\n      }\n\n      settings.colgroup.remove();\n\n      settings.aaSorting = [];\n      settings.aaSortingFixed = [];\n      _fnSortingClasses(settings);\n\n      $(\"th, td\", thead)\n        .removeClass(\n          orderClasses.canAsc +\n            \" \" +\n            orderClasses.canDesc +\n            \" \" +\n            orderClasses.isAsc +\n            \" \" +\n            orderClasses.isDesc\n        )\n        .css(\"width\", \"\");\n\n      // Add the TR elements back into the table in their original order\n      jqTbody.children().detach();\n      jqTbody.append(rows);\n\n      var orig = settings.nTableWrapper.parentNode;\n      var insertBefore = settings.nTableWrapper.nextSibling;\n\n      // Remove the DataTables generated nodes, events and classes\n      var removedMethod = remove ? \"remove\" : \"detach\";\n      jqTable[removedMethod]();\n      jqWrapper[removedMethod]();\n\n      // If we need to reattach the table to the document\n      if (!remove && orig) {\n        // insertBefore acts like appendChild if !arg[1]\n        orig.insertBefore(table, insertBefore);\n\n        // Restore the width of the original table - was read from the style property,\n        // so we can restore directly to that\n        jqTable.css(\"width\", settings.sDestroyWidth).removeClass(classes.table);\n      }\n\n      /* Remove the settings object from the settings array */\n      var idx = DataTable.settings.indexOf(settings);\n      if (idx !== -1) {\n        DataTable.settings.splice(idx, 1);\n      }\n    });\n  });\n\n  // Add the `every()` method for rows, columns and cells in a compact form\n  $.each([\"column\", \"row\", \"cell\"], function (i, type) {\n    _api_register(type + \"s().every()\", function (fn) {\n      var opts = this.selector.opts;\n      var api = this;\n      var inst;\n      var counter = 0;\n\n      return this.iterator(\"every\", function (settings, selectedIdx, tableIdx) {\n        inst = api[type](selectedIdx, opts);\n\n        if (type === \"cell\") {\n          fn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\n        } else {\n          fn.call(inst, selectedIdx, tableIdx, counter);\n        }\n\n        counter++;\n      });\n    });\n  });\n\n  // i18n method for extensions to be able to use the language object from the\n  // DataTable\n  _api_register(\"i18n()\", function (token, def, plural) {\n    var ctx = this.context[0];\n    var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);\n\n    if (resolved === undefined) {\n      resolved = def;\n    }\n\n    if ($.isPlainObject(resolved)) {\n      resolved =\n        plural !== undefined && resolved[plural] !== undefined\n          ? resolved[plural]\n          : resolved._;\n    }\n\n    return typeof resolved === \"string\"\n      ? resolved.replace(\"%d\", plural) // nb: plural might be undefined,\n      : resolved;\n  });\n\n  /**\n   * Version string for plug-ins to check compatibility. Allowed format is\n   * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n   * only for non-release builds. See https://semver.org/ for more information.\n   *  @member\n   *  @type string\n   *  @default Version number\n   */\n  DataTable.version = \"2.1.4\";\n\n  /**\n   * Private data store, containing all of the settings objects that are\n   * created for the tables on a given page.\n   *\n   * Note that the `DataTable.settings` object is aliased to\n   * `jQuery.fn.dataTableExt` through which it may be accessed and\n   * manipulated, or `jQuery.fn.dataTable.settings`.\n   *  @member\n   *  @type array\n   *  @default []\n   *  @private\n   */\n  DataTable.settings = [];\n\n  /**\n   * Object models container, for the various models that DataTables has\n   * available to it. These models define the objects that are used to hold\n   * the active state and configuration of the table.\n   *  @namespace\n   */\n  DataTable.models = {};\n\n  /**\n   * Template object for the way in which DataTables holds information about\n   * search information for the global filter and individual column filters.\n   *  @namespace\n   */\n  DataTable.models.oSearch = {\n    /**\n     * Flag to indicate if the filtering should be case insensitive or not\n     */\n    caseInsensitive: true,\n\n    /**\n     * Applied search term\n     */\n    search: \"\",\n\n    /**\n     * Flag to indicate if the search term should be interpreted as a\n     * regular expression (true) or not (false) and therefore and special\n     * regex characters escaped.\n     */\n    regex: false,\n\n    /**\n     * Flag to indicate if DataTables is to use its smart filtering or not.\n     */\n    smart: true,\n\n    /**\n     * Flag to indicate if DataTables should only trigger a search when\n     * the return key is pressed.\n     */\n    return: false,\n  };\n\n  /**\n   * Template object for the way in which DataTables holds information about\n   * each individual row. This is the object format used for the settings\n   * aoData array.\n   *  @namespace\n   */\n  DataTable.models.oRow = {\n    /**\n     * TR element for the row\n     */\n    nTr: null,\n\n    /**\n     * Array of TD elements for each row. This is null until the row has been\n     * created.\n     */\n    anCells: null,\n\n    /**\n     * Data object from the original data source for the row. This is either\n     * an array if using the traditional form of DataTables, or an object if\n     * using mData options. The exact type will depend on the passed in\n     * data from the data source, or will be an array if using DOM a data\n     * source.\n     */\n    _aData: [],\n\n    /**\n     * Sorting data cache - this array is ostensibly the same length as the\n     * number of columns (although each index is generated only as it is\n     * needed), and holds the data that is used for sorting each column in the\n     * row. We do this cache generation at the start of the sort in order that\n     * the formatting of the sort data need be done only once for each cell\n     * per sort. This array should not be read from or written to by anything\n     * other than the master sorting methods.\n     */\n    _aSortData: null,\n\n    /**\n     * Per cell filtering data cache. As per the sort data cache, used to\n     * increase the performance of the filtering in DataTables\n     */\n    _aFilterData: null,\n\n    /**\n     * Filtering data cache. This is the same as the cell filtering cache, but\n     * in this case a string rather than an array. This is easily computed with\n     * a join on `_aFilterData`, but is provided as a cache so the join isn't\n     * needed on every search (memory traded for performance)\n     */\n    _sFilterRow: null,\n\n    /**\n     * Denote if the original data source was from the DOM, or the data source\n     * object. This is used for invalidating data, so DataTables can\n     * automatically read data from the original source, unless uninstructed\n     * otherwise.\n     */\n    src: null,\n\n    /**\n     * Index in the aoData array. This saves an indexOf lookup when we have the\n     * object, but want to know the index\n     */\n    idx: -1,\n\n    /**\n     * Cached display value\n     */\n    displayData: null,\n  };\n\n  /**\n   * Template object for the column information object in DataTables. This object\n   * is held in the settings aoColumns array and contains all the information that\n   * DataTables needs about each individual column.\n   *\n   * Note that this object is related to {@link DataTable.defaults.column}\n   * but this one is the internal data store for DataTables's cache of columns.\n   * It should NOT be manipulated outside of DataTables. Any configuration should\n   * be done through the initialisation options.\n   *  @namespace\n   */\n  DataTable.models.oColumn = {\n    /**\n     * Column index.\n     */\n    idx: null,\n\n    /**\n     * A list of the columns that sorting should occur on when this column\n     * is sorted. That this property is an array allows multi-column sorting\n     * to be defined for a column (for example first name / last name columns\n     * would benefit from this). The values are integers pointing to the\n     * columns to be sorted on (typically it will be a single integer pointing\n     * at itself, but that doesn't need to be the case).\n     */\n    aDataSort: null,\n\n    /**\n     * Define the sorting directions that are applied to the column, in sequence\n     * as the column is repeatedly sorted upon - i.e. the first value is used\n     * as the sorting direction when the column if first sorted (clicked on).\n     * Sort it again (click again) and it will move on to the next index.\n     * Repeat until loop.\n     */\n    asSorting: null,\n\n    /**\n     * Flag to indicate if the column is searchable, and thus should be included\n     * in the filtering or not.\n     */\n    bSearchable: null,\n\n    /**\n     * Flag to indicate if the column is sortable or not.\n     */\n    bSortable: null,\n\n    /**\n     * Flag to indicate if the column is currently visible in the table or not\n     */\n    bVisible: null,\n\n    /**\n     * Store for manual type assignment using the `column.type` option. This\n     * is held in store so we can manipulate the column's `sType` property.\n     */\n    _sManualType: null,\n\n    /**\n     * Flag to indicate if HTML5 data attributes should be used as the data\n     * source for filtering or sorting. True is either are.\n     */\n    _bAttrSrc: false,\n\n    /**\n     * Developer definable function that is called whenever a cell is created (Ajax source,\n     * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n     * allowing you to modify the DOM element (add background colour for example) when the\n     * element is available.\n     */\n    fnCreatedCell: null,\n\n    /**\n     * Function to get data from a cell in a column. You should <b>never</b>\n     * access data directly through _aData internally in DataTables - always use\n     * the method attached to this property. It allows mData to function as\n     * required. This function is automatically assigned by the column\n     * initialisation method\n     */\n    fnGetData: null,\n\n    /**\n     * Function to set data for a cell in the column. You should <b>never</b>\n     * set the data directly to _aData internally in DataTables - always use\n     * this method. It allows mData to function as required. This function\n     * is automatically assigned by the column initialisation method\n     */\n    fnSetData: null,\n\n    /**\n     * Property to read the value for the cells in the column from the data\n     * source array / object. If null, then the default content is used, if a\n     * function is given then the return from the function is used.\n     */\n    mData: null,\n\n    /**\n     * Partner property to mData which is used (only when defined) to get\n     * the data - i.e. it is basically the same as mData, but without the\n     * 'set' option, and also the data fed to it is the result from mData.\n     * This is the rendering method to match the data method of mData.\n     */\n    mRender: null,\n\n    /**\n     * The class to apply to all TD elements in the table's TBODY for the column\n     */\n    sClass: null,\n\n    /**\n     * When DataTables calculates the column widths to assign to each column,\n     * it finds the longest string in each column and then constructs a\n     * temporary table and reads the widths from that. The problem with this\n     * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n     * string - thus the calculation can go wrong (doing it properly and putting\n     * it into an DOM object and measuring that is horribly(!) slow). Thus as\n     * a \"work around\" we provide this option. It will append its value to the\n     * text that is found to be the longest string for the column - i.e. padding.\n     */\n    sContentPadding: null,\n\n    /**\n     * Allows a default value to be given for a column's data, and will be used\n     * whenever a null data source is encountered (this can be because mData\n     * is set to null, or because the data source itself is null).\n     */\n    sDefaultContent: null,\n\n    /**\n     * Name for the column, allowing reference to the column by name as well as\n     * by index (needs a lookup to work by name).\n     */\n    sName: null,\n\n    /**\n     * Custom sorting data type - defines which of the available plug-ins in\n     * afnSortData the custom sorting will use - if any is defined.\n     */\n    sSortDataType: \"std\",\n\n    /**\n     * Class to be applied to the header element when sorting on this column\n     */\n    sSortingClass: null,\n\n    /**\n     * Title of the column - what is seen in the TH element (nTh).\n     */\n    sTitle: null,\n\n    /**\n     * Column sorting and filtering type\n     */\n    sType: null,\n\n    /**\n     * Width of the column\n     */\n    sWidth: null,\n\n    /**\n     * Width of the column when it was first \"encountered\"\n     */\n    sWidthOrig: null,\n\n    /** Cached string which is the longest in the column */\n    maxLenString: null,\n\n    /**\n     * Store for named searches\n     */\n    searchFixed: null,\n  };\n\n  /*\n   * Developer note: The properties of the object below are given in Hungarian\n   * notation, that was used as the interface for DataTables prior to v1.10, however\n   * from v1.10 onwards the primary interface is camel case. In order to avoid\n   * breaking backwards compatibility utterly with this change, the Hungarian\n   * version is still, internally the primary interface, but is is not documented\n   * - hence the @name tags in each doc comment. This allows a Javascript function\n   * to create a map from Hungarian notation to camel case (going the other direction\n   * would require each property to be listed, which would add around 3K to the size\n   * of DataTables, while this method is about a 0.5K hit).\n   *\n   * Ultimately this does pave the way for Hungarian notation to be dropped\n   * completely, but that is a massive amount of work and will break current\n   * installs (therefore is on-hold until v2).\n   */\n\n  /**\n   * Initialisation options that can be given to DataTables at initialisation\n   * time.\n   *  @namespace\n   */\n  DataTable.defaults = {\n    /**\n     * An array of data to use for the table, passed in at initialisation which\n     * will be used in preference to any data which is already in the DOM. This is\n     * particularly useful for constructing tables purely in Javascript, for\n     * example with a custom Ajax call.\n     */\n    aaData: null,\n\n    /**\n     * If ordering is enabled, then DataTables will perform a first pass sort on\n     * initialisation. You can define which column(s) the sort is performed\n     * upon, and the sorting direction, with this variable. The `sorting` array\n     * should contain an array for each column to be sorted initially containing\n     * the column's index and a direction string ('asc' or 'desc').\n     */\n    aaSorting: [[0, \"asc\"]],\n\n    /**\n     * This parameter is basically identical to the `sorting` parameter, but\n     * cannot be overridden by user interaction with the table. What this means\n     * is that you could have a column (visible or hidden) which the sorting\n     * will always be forced on first - any sorting after that (from the user)\n     * will then be performed as required. This can be useful for grouping rows\n     * together.\n     */\n    aaSortingFixed: [],\n\n    /**\n     * DataTables can be instructed to load data to display in the table from a\n     * Ajax source. This option defines how that Ajax call is made and where to.\n     *\n     * The `ajax` property has three different modes of operation, depending on\n     * how it is defined. These are:\n     *\n     * * `string` - Set the URL from where the data should be loaded from.\n     * * `object` - Define properties for `jQuery.ajax`.\n     * * `function` - Custom data get function\n     *\n     * `string`\n     * --------\n     *\n     * As a string, the `ajax` property simply defines the URL from which\n     * DataTables will load data.\n     *\n     * `object`\n     * --------\n     *\n     * As an object, the parameters in the object are passed to\n     * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n     * of the Ajax request. DataTables has a number of default parameters which\n     * you can override using this option. Please refer to the jQuery\n     * documentation for a full description of the options available, although\n     * the following parameters provide additional options in DataTables or\n     * require special consideration:\n     *\n     * * `data` - As with jQuery, `data` can be provided as an object, but it\n     *   can also be used as a function to manipulate the data DataTables sends\n     *   to the server. The function takes a single parameter, an object of\n     *   parameters with the values that DataTables has readied for sending. An\n     *   object may be returned which will be merged into the DataTables\n     *   defaults, or you can add the items to the object that was passed in and\n     *   not return anything from the function. This supersedes `fnServerParams`\n     *   from DataTables 1.9-.\n     *\n     * * `dataSrc` - By default DataTables will look for the property `data` (or\n     *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n     *   from an Ajax source or for server-side processing - this parameter\n     *   allows that property to be changed. You can use Javascript dotted\n     *   object notation to get a data source for multiple levels of nesting, or\n     *   it my be used as a function. As a function it takes a single parameter,\n     *   the JSON returned from the server, which can be manipulated as\n     *   required, with the returned value being that used by DataTables as the\n     *   data source for the table.\n     *\n     * * `success` - Should not be overridden it is used internally in\n     *   DataTables. To manipulate / transform the data returned by the server\n     *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n     *\n     * `function`\n     * ----------\n     *\n     * As a function, making the Ajax call is left up to yourself allowing\n     * complete control of the Ajax request. Indeed, if desired, a method other\n     * than Ajax could be used to obtain the required data, such as Web storage\n     * or an AIR database.\n     *\n     * The function is given four parameters and no return is required. The\n     * parameters are:\n     *\n     * 1. _object_ - Data to send to the server\n     * 2. _function_ - Callback function that must be executed when the required\n     *    data has been obtained. That data should be passed into the callback\n     *    as the only parameter\n     * 3. _object_ - DataTables settings object for the table\n     */\n    ajax: null,\n\n    /**\n     * This parameter allows you to readily specify the entries in the length drop\n     * down menu that DataTables shows when pagination is enabled. It can be\n     * either a 1D array of options which will be used for both the displayed\n     * option and the value, or a 2D array which will use the array in the first\n     * position as the value, and the array in the second position as the\n     * displayed options (useful for language strings such as 'All').\n     *\n     * Note that the `pageLength` property will be automatically set to the\n     * first value given in this array, unless `pageLength` is also provided.\n     */\n    aLengthMenu: [10, 25, 50, 100],\n\n    /**\n     * The `columns` option in the initialisation parameter allows you to define\n     * details about the way individual columns behave. For a full list of\n     * column options that can be set, please see\n     * {@link DataTable.defaults.column}. Note that if you use `columns` to\n     * define your columns, you must have an entry in the array for every single\n     * column that you have in your table (these can be null if you don't which\n     * to specify any options).\n     */\n    aoColumns: null,\n\n    /**\n     * Very similar to `columns`, `columnDefs` allows you to target a specific\n     * column, multiple columns, or all columns, using the `targets` property of\n     * each object in the array. This allows great flexibility when creating\n     * tables, as the `columnDefs` arrays can be of any length, targeting the\n     * columns you specifically want. `columnDefs` may use any of the column\n     * options available: {@link DataTable.defaults.column}, but it _must_\n     * have `targets` defined in each object in the array. Values in the `targets`\n     * array may be:\n     *   <ul>\n     *     <li>a string - class name will be matched on the TH for the column</li>\n     *     <li>0 or a positive integer - column index counting from the left</li>\n     *     <li>a negative integer - column index counting from the right</li>\n     *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n     *   </ul>\n     */\n    aoColumnDefs: null,\n\n    /**\n     * Basically the same as `search`, this parameter defines the individual column\n     * filtering state at initialisation time. The array must be of the same size\n     * as the number of columns, and each element be an object with the parameters\n     * `search` and `escapeRegex` (the latter is optional). 'null' is also\n     * accepted and the default will be used.\n     */\n    aoSearchCols: [],\n\n    /**\n     * Enable or disable automatic column width calculation. This can be disabled\n     * as an optimisation (it takes some time to calculate the widths) if the\n     * tables widths are passed in using `columns`.\n     */\n    bAutoWidth: true,\n\n    /**\n     * Deferred rendering can provide DataTables with a huge speed boost when you\n     * are using an Ajax or JS data source for the table. This option, when set to\n     * true, will cause DataTables to defer the creation of the table elements for\n     * each row until they are needed for a draw - saving a significant amount of\n     * time.\n     */\n    bDeferRender: true,\n\n    /**\n     * Replace a DataTable which matches the given selector and replace it with\n     * one which has the properties of the new initialisation object passed. If no\n     * table matches the selector, then the new DataTable will be constructed as\n     * per normal.\n     */\n    bDestroy: false,\n\n    /**\n     * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n     * that it allows the end user to input multiple words (space separated) and\n     * will match a row containing those words, even if not in the order that was\n     * specified (this allow matching across multiple columns). Note that if you\n     * wish to use filtering in DataTables this must remain 'true' - to remove the\n     * default filtering input box and retain filtering abilities, please use\n     * {@link DataTable.defaults.dom}.\n     */\n    bFilter: true,\n\n    /**\n     * Used only for compatiblity with DT1\n     * @deprecated\n     */\n    bInfo: true,\n\n    /**\n     * Used only for compatiblity with DT1\n     * @deprecated\n     */\n    bLengthChange: true,\n\n    /**\n     * Enable or disable pagination.\n     */\n    bPaginate: true,\n\n    /**\n     * Enable or disable the display of a 'processing' indicator when the table is\n     * being processed (e.g. a sort). This is particularly useful for tables with\n     * large amounts of data where it can take a noticeable amount of time to sort\n     * the entries.\n     */\n    bProcessing: false,\n\n    /**\n     * Retrieve the DataTables object for the given selector. Note that if the\n     * table has already been initialised, this parameter will cause DataTables\n     * to simply return the object that has already been set up - it will not take\n     * account of any changes you might have made to the initialisation object\n     * passed to DataTables (setting this parameter to true is an acknowledgement\n     * that you understand this). `destroy` can be used to reinitialise a table if\n     * you need.\n     */\n    bRetrieve: false,\n\n    /**\n     * When vertical (y) scrolling is enabled, DataTables will force the height of\n     * the table's viewport to the given height at all times (useful for layout).\n     * However, this can look odd when filtering data down to a small data set,\n     * and the footer is left \"floating\" further down. This parameter (when\n     * enabled) will cause DataTables to collapse the table's viewport down when\n     * the result set will fit within the given Y height.\n     */\n    bScrollCollapse: false,\n\n    /**\n     * Configure DataTables to use server-side processing. Note that the\n     * `ajax` parameter must also be given in order to give DataTables a\n     * source to obtain the required data for each draw.\n     */\n    bServerSide: false,\n\n    /**\n     * Enable or disable sorting of columns. Sorting of individual columns can be\n     * disabled by the `sortable` option for each column.\n     */\n    bSort: true,\n\n    /**\n     * Enable or display DataTables' ability to sort multiple columns at the\n     * same time (activated by shift-click by the user).\n     */\n    bSortMulti: true,\n\n    /**\n     * Allows control over whether DataTables should use the top (true) unique\n     * cell that is found for a single column, or the bottom (false - default).\n     * This is useful when using complex headers.\n     */\n    bSortCellsTop: null,\n\n    /**\n     * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n     * `sorting\\_3` to the columns which are currently being sorted on. This is\n     * presented as a feature switch as it can increase processing time (while\n     * classes are removed and added) so for large data sets you might want to\n     * turn this off.\n     */\n    bSortClasses: true,\n\n    /**\n     * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n     * used to save table display information such as pagination information,\n     * display length, filtering and sorting. As such when the end user reloads\n     * the page the display display will match what thy had previously set up.\n     */\n    bStateSave: false,\n\n    /**\n     * This function is called when a TR element is created (and all TD child\n     * elements have been inserted), or registered if using a DOM source, allowing\n     * manipulation of the TR element (adding classes etc).\n     */\n    fnCreatedRow: null,\n\n    /**\n     * This function is called on every 'draw' event, and allows you to\n     * dynamically modify any aspect you want about the created DOM.\n     */\n    fnDrawCallback: null,\n\n    /**\n     * Identical to fnHeaderCallback() but for the table footer this function\n     * allows you to modify the table footer on every 'draw' event.\n     */\n    fnFooterCallback: null,\n\n    /**\n     * When rendering large numbers in the information element for the table\n     * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n     * to have a comma separator for the 'thousands' units (e.g. 1 million is\n     * rendered as \"1,000,000\") to help readability for the end user. This\n     * function will override the default method DataTables uses.\n     */\n    fnFormatNumber: function (toFormat) {\n      return toFormat\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.oLanguage.sThousands);\n    },\n\n    /**\n     * This function is called on every 'draw' event, and allows you to\n     * dynamically modify the header row. This can be used to calculate and\n     * display useful information about the table.\n     */\n    fnHeaderCallback: null,\n\n    /**\n     * The information element can be used to convey information about the current\n     * state of the table. Although the internationalisation options presented by\n     * DataTables are quite capable of dealing with most customisations, there may\n     * be times where you wish to customise the string further. This callback\n     * allows you to do exactly that.\n     */\n    fnInfoCallback: null,\n\n    /**\n     * Called when the table has been initialised. Normally DataTables will\n     * initialise sequentially and there will be no need for this function,\n     * however, this does not hold true when using external language information\n     * since that is obtained using an async XHR call.\n     */\n    fnInitComplete: null,\n\n    /**\n     * Called at the very start of each table draw and can be used to cancel the\n     * draw by returning false, any other return (including undefined) results in\n     * the full draw occurring).\n     */\n    fnPreDrawCallback: null,\n\n    /**\n     * This function allows you to 'post process' each row after it have been\n     * generated for each table draw, but before it is rendered on screen. This\n     * function might be used for setting the row class name etc.\n     */\n    fnRowCallback: null,\n\n    /**\n     * Load the table state. With this function you can define from where, and how, the\n     * state of a table is loaded. By default DataTables will load from `localStorage`\n     * but you might wish to use a server-side database or cookies.\n     */\n    fnStateLoadCallback: function (settings) {\n      try {\n        return JSON.parse(\n          (settings.iStateDuration === -1\n            ? sessionStorage\n            : localStorage\n          ).getItem(\n            \"DataTables_\" + settings.sInstance + \"_\" + location.pathname\n          )\n        );\n      } catch (e) {\n        return {};\n      }\n    },\n\n    /**\n     * Callback which allows modification of the saved state prior to loading that state.\n     * This callback is called when the table is loading state from the stored data, but\n     * prior to the settings object being modified by the saved state. Note that for\n     * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n     * a plug-in.\n     */\n    fnStateLoadParams: null,\n\n    /**\n     * Callback that is called when the state has been loaded from the state saving method\n     * and the DataTables settings object has been modified as a result of the loaded state.\n     */\n    fnStateLoaded: null,\n\n    /**\n     * Save the table state. This function allows you to define where and how the state\n     * information for the table is stored By default DataTables will use `localStorage`\n     * but you might wish to use a server-side database or cookies.\n     */\n    fnStateSaveCallback: function (settings, data) {\n      try {\n        (settings.iStateDuration === -1\n          ? sessionStorage\n          : localStorage\n        ).setItem(\n          \"DataTables_\" + settings.sInstance + \"_\" + location.pathname,\n          JSON.stringify(data)\n        );\n      } catch (e) {\n        // noop\n      }\n    },\n\n    /**\n     * Callback which allows modification of the state to be saved. Called when the table\n     * has changed state a new state save is required. This method allows modification of\n     * the state saving object prior to actually doing the save, including addition or\n     * other state properties or modification. Note that for plug-in authors, you should\n     * use the `stateSaveParams` event to save parameters for a plug-in.\n     */\n    fnStateSaveParams: null,\n\n    /**\n     * Duration for which the saved state information is considered valid. After this period\n     * has elapsed the state will be returned to the default.\n     * Value is given in seconds.\n     */\n    iStateDuration: 7200,\n\n    /**\n     * Number of rows to display on a single page when using pagination. If\n     * feature enabled (`lengthChange`) then the end user will be able to override\n     * this to a custom setting using a pop-up menu.\n     */\n    iDisplayLength: 10,\n\n    /**\n     * Define the starting point for data display when using DataTables with\n     * pagination. Note that this parameter is the number of records, rather than\n     * the page number, so if you have 10 records per page and want to start on\n     * the third page, it should be \"20\".\n     */\n    iDisplayStart: 0,\n\n    /**\n     * By default DataTables allows keyboard navigation of the table (sorting, paging,\n     * and filtering) by adding a `tabindex` attribute to the required elements. This\n     * allows you to tab through the controls and press the enter key to activate them.\n     * The tabindex is default 0, meaning that the tab follows the flow of the document.\n     * You can overrule this using this parameter if you wish. Use a value of -1 to\n     * disable built-in keyboard navigation.\n     */\n    iTabIndex: 0,\n\n    /**\n     * Classes that DataTables assigns to the various components and features\n     * that it adds to the HTML table. This allows classes to be configured\n     * during initialisation in addition to through the static\n     * {@link DataTable.ext.oStdClasses} object).\n     */\n    oClasses: {},\n\n    /**\n     * All strings that DataTables uses in the user interface that it creates\n     * are defined in this object, allowing you to modified them individually or\n     * completely replace them all as required.\n     */\n    oLanguage: {\n      /**\n       * Strings that are used for WAI-ARIA labels and controls only (these are not\n       * actually visible on the page, but will be read by screenreaders, and thus\n       * must be internationalised as well).\n       */\n      oAria: {\n        /**\n         * ARIA label that is added to the table headers when the column may be sorted\n         */\n        orderable: \": Activate to sort\",\n\n        /**\n         * ARIA label that is added to the table headers when the column is currently being sorted\n         */\n        orderableReverse: \": Activate to invert sorting\",\n\n        /**\n         * ARIA label that is added to the table headers when the column is currently being\n         * sorted and next step is to remove sorting\n         */\n        orderableRemove: \": Activate to remove sorting\",\n\n        paginate: {\n          first: \"First\",\n          last: \"Last\",\n          next: \"Next\",\n          previous: \"Previous\",\n          number: \"\",\n        },\n      },\n\n      /**\n       * Pagination string used by DataTables for the built-in pagination\n       * control types.\n       */\n      oPaginate: {\n        /**\n         * Label and character for first page button (Â«)\n         */\n        sFirst: \"\\u00AB\",\n\n        /**\n         * Last page button (Â»)\n         */\n        sLast: \"\\u00BB\",\n\n        /**\n         * Next page button (âº)\n         */\n        sNext: \"\\u203A\",\n\n        /**\n         * Previous page button (â¹)\n         */\n        sPrevious: \"\\u2039\",\n      },\n\n      /**\n       * Plural object for the data type the table is showing\n       */\n      entries: {\n        _: \"entries\",\n        1: \"entry\",\n      },\n\n      /**\n       * This string is shown in preference to `zeroRecords` when the table is\n       * empty of data (regardless of filtering). Note that this is an optional\n       * parameter - if it is not given, the value of `zeroRecords` will be used\n       * instead (either the default or given value).\n       */\n      sEmptyTable: \"No data available in table\",\n\n      /**\n       * This string gives information to the end user about the information\n       * that is current on display on the page. The following tokens can be\n       * used in the string and will be dynamically replaced as the table\n       * display updates. This tokens can be placed anywhere in the string, or\n       * removed as needed by the language requires:\n       *\n       * * `\\_START\\_` - Display index of the first record on the current page\n       * * `\\_END\\_` - Display index of the last record on the current page\n       * * `\\_TOTAL\\_` - Number of records in the table after filtering\n       * * `\\_MAX\\_` - Number of records in the table without filtering\n       * * `\\_PAGE\\_` - Current page number\n       * * `\\_PAGES\\_` - Total number of pages of data in the table\n       */\n      sInfo: \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\n\n      /**\n       * Display information string for when the table is empty. Typically the\n       * format of this string should match `info`.\n       */\n      sInfoEmpty: \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\n\n      /**\n       * When a user filters the information in a table, this string is appended\n       * to the information (`info`) to give an idea of how strong the filtering\n       * is. The variable _MAX_ is dynamically updated.\n       */\n      sInfoFiltered: \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\n\n      /**\n       * If can be useful to append extra information to the info string at times,\n       * and this variable does exactly that. This information will be appended to\n       * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n       * being used) at all times.\n       */\n      sInfoPostFix: \"\",\n\n      /**\n       * This decimal place operator is a little different from the other\n       * language options since DataTables doesn't output floating point\n       * numbers, so it won't ever use this for display of a number. Rather,\n       * what this parameter does is modify the sort methods of the table so\n       * that numbers which are in a format which has a character other than\n       * a period (`.`) as a decimal place will be sorted numerically.\n       *\n       * Note that numbers with different decimal places cannot be shown in\n       * the same table and still be sortable, the table must be consistent.\n       * However, multiple different tables on the page can use different\n       * decimal place characters.\n       */\n      sDecimal: \"\",\n\n      /**\n       * DataTables has a build in number formatter (`formatNumber`) which is\n       * used to format large numbers that are used in the table information.\n       * By default a comma is used, but this can be trivially changed to any\n       * character you wish with this parameter.\n       */\n      sThousands: \",\",\n\n      /**\n       * Detail the action that will be taken when the drop down menu for the\n       * pagination length option is changed. The '_MENU_' variable is replaced\n       * with a default select list of 10, 25, 50 and 100, and can be replaced\n       * with a custom select box if required.\n       */\n      sLengthMenu: \"_MENU_ _ENTRIES_ per page\",\n\n      /**\n       * When using Ajax sourced data and during the first draw when DataTables is\n       * gathering the data, this message is shown in an empty row in the table to\n       * indicate to the end user the the data is being loaded. Note that this\n       * parameter is not used when loading data by server-side processing, just\n       * Ajax sourced data with client-side processing.\n       */\n      sLoadingRecords: \"Loading...\",\n\n      /**\n       * Text which is displayed when the table is processing a user action\n       * (usually a sort command or similar).\n       */\n      sProcessing: \"\",\n\n      /**\n       * Details the actions that will be taken when the user types into the\n       * filtering input text box. The variable \"_INPUT_\", if used in the string,\n       * is replaced with the HTML text box for the filtering input allowing\n       * control over where it appears in the string. If \"_INPUT_\" is not given\n       * then the input box is appended to the string automatically.\n       */\n      sSearch: \"Search:\",\n\n      /**\n       * Assign a `placeholder` attribute to the search `input` element\n       *  @type string\n       *  @default\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.searchPlaceholder\n       */\n      sSearchPlaceholder: \"\",\n\n      /**\n       * All of the language information can be stored in a file on the\n       * server-side, which DataTables will look up if this parameter is passed.\n       * It must store the URL of the language file, which is in a JSON format,\n       * and the object has the same properties as the oLanguage object in the\n       * initialiser object (i.e. the above parameters). Please refer to one of\n       * the example language files to see how this works in action.\n       */\n      sUrl: \"\",\n\n      /**\n       * Text shown inside the table records when the is no information to be\n       * displayed after filtering. `emptyTable` is shown when there is simply no\n       * information in the table at all (regardless of filtering).\n       */\n      sZeroRecords: \"No matching records found\",\n    },\n\n    /** The initial data order is reversed when `desc` ordering */\n    orderDescReverse: true,\n\n    /**\n     * This parameter allows you to have define the global filtering state at\n     * initialisation time. As an object the `search` parameter must be\n     * defined, but all other parameters are optional. When `regex` is true,\n     * the search string will be treated as a regular expression, when false\n     * (default) it will be treated as a straight string. When `smart`\n     * DataTables will use it's smart filtering methods (to word match at\n     * any point in the data), when false this will not be done.\n     */\n    oSearch: $.extend({}, DataTable.models.oSearch),\n\n    /**\n     * Table and control layout. This replaces the legacy `dom` option.\n     */\n    layout: {\n      topStart: \"pageLength\",\n      topEnd: \"search\",\n      bottomStart: \"info\",\n      bottomEnd: \"paging\",\n    },\n\n    /**\n     * Legacy DOM layout option\n     */\n    sDom: null,\n\n    /**\n     * Search delay option. This will throttle full table searches that use the\n     * DataTables provided search input element (it does not effect calls to\n     * `dt-api search()`, providing a delay before the search is made.\n     */\n    searchDelay: null,\n\n    /**\n     * DataTables features six different built-in options for the buttons to\n     * display for pagination control:\n     *\n     * * `numbers` - Page number buttons only\n     * * `simple` - 'Previous' and 'Next' buttons only\n     * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n     * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n     * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n     * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n     */\n    sPaginationType: \"\",\n\n    /**\n     * Enable horizontal scrolling. When a table is too wide to fit into a\n     * certain layout, or you have a large number of columns in the table, you\n     * can enable x-scrolling to show the table in a viewport, which can be\n     * scrolled. This property can be `true` which will allow the table to\n     * scroll horizontally when needed, or any CSS unit, or a number (in which\n     * case it will be treated as a pixel measurement). Setting as simply `true`\n     * is recommended.\n     */\n    sScrollX: \"\",\n\n    /**\n     * This property can be used to force a DataTable to use more width than it\n     * might otherwise do when x-scrolling is enabled. For example if you have a\n     * table which requires to be well spaced, this parameter is useful for\n     * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n     * any CSS unit, or a number (in which case it will be treated as a pixel\n     * measurement).\n     */\n    sScrollXInner: \"\",\n\n    /**\n     * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n     * to the given height, and enable scrolling for any data which overflows the\n     * current viewport. This can be used as an alternative to paging to display\n     * a lot of data in a small area (although paging and scrolling can both be\n     * enabled at the same time). This property can be any CSS unit, or a number\n     * (in which case it will be treated as a pixel measurement).\n     */\n    sScrollY: \"\",\n\n    /**\n     * __Deprecated__ The functionality provided by this parameter has now been\n     * superseded by that provided through `ajax`, which should be used instead.\n     *\n     * Set the HTTP method that is used to make the Ajax call for server-side\n     * processing or Ajax sourced data.\n     */\n    sServerMethod: \"GET\",\n\n    /**\n     * DataTables makes use of renderers when displaying HTML elements for\n     * a table. These renderers can be added or modified by plug-ins to\n     * generate suitable mark-up for a site. For example the Bootstrap\n     * integration plug-in for DataTables uses a paging button renderer to\n     * display pagination buttons in the mark-up required by Bootstrap.\n     *\n     * For further information about the renderers available see\n     * DataTable.ext.renderer\n     */\n    renderer: null,\n\n    /**\n     * Set the data property name that DataTables should use to get a row's id\n     * to set as the `id` property in the node.\n     */\n    rowId: \"DT_RowId\",\n\n    /**\n     * Caption value\n     */\n    caption: null,\n\n    /**\n     * For server-side processing - use the data from the DOM for the first draw\n     */\n    iDeferLoading: null,\n  };\n\n  _fnHungarianMap(DataTable.defaults);\n\n  /*\n   * Developer note - See note in model.defaults.js about the use of Hungarian\n   * notation and camel case.\n   */\n\n  /**\n   * Column options that can be given to DataTables at initialisation time.\n   *  @namespace\n   */\n  DataTable.defaults.column = {\n    /**\n     * Define which column(s) an order will occur on for this column. This\n     * allows a column's ordering to take multiple columns into account when\n     * doing a sort or use the data from a different column. For example first\n     * name / last name columns make sense to do a multi-column sort over the\n     * two columns.\n     */\n    aDataSort: null,\n    iDataSort: -1,\n\n    ariaTitle: \"\",\n\n    /**\n     * You can control the default ordering direction, and even alter the\n     * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n     * using this parameter.\n     */\n    asSorting: [\"asc\", \"desc\", \"\"],\n\n    /**\n     * Enable or disable filtering on the data in this column.\n     */\n    bSearchable: true,\n\n    /**\n     * Enable or disable ordering on this column.\n     */\n    bSortable: true,\n\n    /**\n     * Enable or disable the display of this column.\n     */\n    bVisible: true,\n\n    /**\n     * Developer definable function that is called whenever a cell is created (Ajax source,\n     * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n     * allowing you to modify the DOM element (add background colour for example) when the\n     * element is available.\n     */\n    fnCreatedCell: null,\n\n    /**\n     * This property can be used to read data from any data source property,\n     * including deeply nested objects / properties. `data` can be given in a\n     * number of different ways which effect its behaviour:\n     *\n     * * `integer` - treated as an array index for the data source. This is the\n     *   default that DataTables uses (incrementally increased for each column).\n     * * `string` - read an object property from the data source. There are\n     *   three 'special' options that can be used in the string to alter how\n     *   DataTables reads the data from the source object:\n     *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n     *      Javascript to read from nested objects, so to can the options\n     *      specified in `data`. For example: `browser.version` or\n     *      `browser.name`. If your object parameter name contains a period, use\n     *      `\\\\` to escape it - i.e. `first\\\\.name`.\n     *    * `[]` - Array notation. DataTables can automatically combine data\n     *      from and array source, joining the data with the characters provided\n     *      between the two brackets. For example: `name[, ]` would provide a\n     *      comma-space separated list from the source array. If no characters\n     *      are provided between the brackets, the original array source is\n     *      returned.\n     *    * `()` - Function notation. Adding `()` to the end of a parameter will\n     *      execute a function of the name given. For example: `browser()` for a\n     *      simple function on the data source, `browser.version()` for a\n     *      function in a nested property or even `browser().version` to get an\n     *      object property if the function called returns an object. Note that\n     *      function notation is recommended for use in `render` rather than\n     *      `data` as it is much simpler to use as a renderer.\n     * * `null` - use the original data source for the row rather than plucking\n     *   data directly from it. This action has effects on two other\n     *   initialisation options:\n     *    * `defaultContent` - When null is given as the `data` option and\n     *      `defaultContent` is specified for the column, the value defined by\n     *      `defaultContent` will be used for the cell.\n     *    * `render` - When null is used for the `data` option and the `render`\n     *      option is specified for the column, the whole data source for the\n     *      row is used for the renderer.\n     * * `function` - the function given will be executed whenever DataTables\n     *   needs to set or get the data for a cell in the column. The function\n     *   takes three parameters:\n     *    * Parameters:\n     *      * `{array|object}` The data source for the row\n     *      * `{string}` The type call data requested - this will be 'set' when\n     *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n     *        when gathering data. Note that when `undefined` is given for the\n     *        type DataTables expects to get the raw data for the object back<\n     *      * `{*}` Data to set when the second parameter is 'set'.\n     *    * Return:\n     *      * The return value from the function is not required when 'set' is\n     *        the type of call, but otherwise the return is what will be used\n     *        for the data requested.\n     *\n     * Note that `data` is a getter and setter option. If you just require\n     * formatting of data for output, you will likely want to use `render` which\n     * is simply a getter and thus simpler to use.\n     *\n     * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n     * name change reflects the flexibility of this property and is consistent\n     * with the naming of mRender. If 'mDataProp' is given, then it will still\n     * be used by DataTables, as it automatically maps the old name to the new\n     * if required.\n     */\n    mData: null,\n\n    /**\n     * This property is the rendering partner to `data` and it is suggested that\n     * when you want to manipulate data for display (including filtering,\n     * sorting etc) without altering the underlying data for the table, use this\n     * property. `render` can be considered to be the the read only companion to\n     * `data` which is read / write (then as such more complex). Like `data`\n     * this option can be given in a number of different ways to effect its\n     * behaviour:\n     *\n     * * `integer` - treated as an array index for the data source. This is the\n     *   default that DataTables uses (incrementally increased for each column).\n     * * `string` - read an object property from the data source. There are\n     *   three 'special' options that can be used in the string to alter how\n     *   DataTables reads the data from the source object:\n     *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n     *      Javascript to read from nested objects, so to can the options\n     *      specified in `data`. For example: `browser.version` or\n     *      `browser.name`. If your object parameter name contains a period, use\n     *      `\\\\` to escape it - i.e. `first\\\\.name`.\n     *    * `[]` - Array notation. DataTables can automatically combine data\n     *      from and array source, joining the data with the characters provided\n     *      between the two brackets. For example: `name[, ]` would provide a\n     *      comma-space separated list from the source array. If no characters\n     *      are provided between the brackets, the original array source is\n     *      returned.\n     *    * `()` - Function notation. Adding `()` to the end of a parameter will\n     *      execute a function of the name given. For example: `browser()` for a\n     *      simple function on the data source, `browser.version()` for a\n     *      function in a nested property or even `browser().version` to get an\n     *      object property if the function called returns an object.\n     * * `object` - use different data for the different data types requested by\n     *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n     *   of the object is the data type the property refers to and the value can\n     *   defined using an integer, string or function using the same rules as\n     *   `render` normally does. Note that an `_` option _must_ be specified.\n     *   This is the default value to use if you haven't specified a value for\n     *   the data type requested by DataTables.\n     * * `function` - the function given will be executed whenever DataTables\n     *   needs to set or get the data for a cell in the column. The function\n     *   takes three parameters:\n     *    * Parameters:\n     *      * {array|object} The data source for the row (based on `data`)\n     *      * {string} The type call data requested - this will be 'filter',\n     *        'display', 'type' or 'sort'.\n     *      * {array|object} The full data source for the row (not based on\n     *        `data`)\n     *    * Return:\n     *      * The return value from the function is what will be used for the\n     *        data requested.\n     */\n    mRender: null,\n\n    /**\n     * Change the cell type created for the column - either TD cells or TH cells. This\n     * can be useful as TH cells have semantic meaning in the table body, allowing them\n     * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n     */\n    sCellType: \"td\",\n\n    /**\n     * Class to give to each cell in this column.\n     */\n    sClass: \"\",\n\n    /**\n     * When DataTables calculates the column widths to assign to each column,\n     * it finds the longest string in each column and then constructs a\n     * temporary table and reads the widths from that. The problem with this\n     * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n     * string - thus the calculation can go wrong (doing it properly and putting\n     * it into an DOM object and measuring that is horribly(!) slow). Thus as\n     * a \"work around\" we provide this option. It will append its value to the\n     * text that is found to be the longest string for the column - i.e. padding.\n     * Generally you shouldn't need this!\n     */\n    sContentPadding: \"\",\n\n    /**\n     * Allows a default value to be given for a column's data, and will be used\n     * whenever a null data source is encountered (this can be because `data`\n     * is set to null, or because the data source itself is null).\n     */\n    sDefaultContent: null,\n\n    /**\n     * This parameter is only used in DataTables' server-side processing. It can\n     * be exceptionally useful to know what columns are being displayed on the\n     * client side, and to map these to database fields. When defined, the names\n     * also allow DataTables to reorder information from the server if it comes\n     * back in an unexpected order (i.e. if you switch your columns around on the\n     * client-side, your server-side code does not also need updating).\n     */\n    sName: \"\",\n\n    /**\n     * Defines a data source type for the ordering which can be used to read\n     * real-time information from the table (updating the internally cached\n     * version) prior to ordering. This allows ordering to occur on user\n     * editable elements such as form inputs.\n     */\n    sSortDataType: \"std\",\n\n    /**\n     * The title of this column.\n     */\n    sTitle: null,\n\n    /**\n     * The type allows you to specify how the data for this column will be\n     * ordered. Four types (string, numeric, date and html (which will strip\n     * HTML tags before ordering)) are currently available. Note that only date\n     * formats understood by Javascript's Date() object will be accepted as type\n     * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n     * 'numeric', 'date' or 'html' (by default). Further types can be adding\n     * through plug-ins.\n     */\n    sType: null,\n\n    /**\n     * Defining the width of the column, this parameter may take any CSS value\n     * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n     * been given a specific width through this interface ensuring that the table\n     * remains readable.\n     */\n    sWidth: null,\n  };\n\n  _fnHungarianMap(DataTable.defaults.column);\n\n  /**\n   * DataTables settings object - this holds all the information needed for a\n   * given table, including configuration, data and current application of the\n   * table options. DataTables does not have a single instance for each DataTable\n   * with the settings attached to that instance, but rather instances of the\n   * DataTable \"class\" are created on-the-fly as needed (typically by a\n   * $().dataTable() call) and the settings object is then applied to that\n   * instance.\n   *\n   * Note that this object is related to {@link DataTable.defaults} but this\n   * one is the internal data store for DataTables's cache of columns. It should\n   * NOT be manipulated outside of DataTables. Any configuration should be done\n   * through the initialisation options.\n   */\n  DataTable.models.oSettings = {\n    /**\n     * Primary features of DataTables and their enablement state.\n     */\n    oFeatures: {\n      /**\n       * Flag to say if DataTables should automatically try to calculate the\n       * optimum table and columns widths (true) or not (false).\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      bAutoWidth: null,\n\n      /**\n       * Delay the creation of TR and TD elements until they are actually\n       * needed by a driven page draw. This can give a significant speed\n       * increase for Ajax source and Javascript source data, but makes no\n       * difference at all for DOM and server-side processing tables.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      bDeferRender: null,\n\n      /**\n       * Enable filtering on the table or not. Note that if this is disabled\n       * then there is no filtering at all on the table, including fnFilter.\n       * To just remove the filtering input use sDom and remove the 'f' option.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      bFilter: null,\n\n      /**\n       * Used only for compatiblity with DT1\n       * @deprecated\n       */\n      bInfo: true,\n\n      /**\n       * Used only for compatiblity with DT1\n       * @deprecated\n       */\n      bLengthChange: true,\n\n      /**\n       * Pagination enabled or not. Note that if this is disabled then length\n       * changing must also be disabled.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      bPaginate: null,\n\n      /**\n       * Processing indicator enable flag whenever DataTables is enacting a\n       * user request - typically an Ajax request for server-side processing.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      bProcessing: null,\n\n      /**\n       * Server-side processing enabled flag - when enabled DataTables will\n       * get all data from the server for every draw - there is no filtering,\n       * sorting or paging done on the client-side.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      bServerSide: null,\n\n      /**\n       * Sorting enablement flag.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      bSort: null,\n\n      /**\n       * Multi-column sorting\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      bSortMulti: null,\n\n      /**\n       * Apply a class to the columns which are being sorted to provide a\n       * visual highlight or not. This can slow things down when enabled since\n       * there is a lot of DOM interaction.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      bSortClasses: null,\n\n      /**\n       * State saving enablement flag.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      bStateSave: null,\n    },\n\n    /**\n     * Scrolling settings for a table.\n     */\n    oScroll: {\n      /**\n       * When the table is shorter in height than sScrollY, collapse the\n       * table container down to the height of the table (when true).\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      bCollapse: null,\n\n      /**\n       * Width of the scrollbar for the web-browser's platform. Calculated\n       * during table initialisation.\n       */\n      iBarWidth: 0,\n\n      /**\n       * Viewport width for horizontal scrolling. Horizontal scrolling is\n       * disabled if an empty string.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      sX: null,\n\n      /**\n       * Width to expand the table to when using x-scrolling. Typically you\n       * should not need to use this.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @deprecated\n       */\n      sXInner: null,\n\n      /**\n       * Viewport height for vertical scrolling. Vertical scrolling is disabled\n       * if an empty string.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       */\n      sY: null,\n    },\n\n    /**\n     * Language information for the table.\n     */\n    oLanguage: {\n      /**\n       * Information callback function. See\n       * {@link DataTable.defaults.fnInfoCallback}\n       */\n      fnInfoCallback: null,\n    },\n\n    /**\n     * Browser support parameters\n     */\n    oBrowser: {\n      /**\n       * Determine if the vertical scrollbar is on the right or left of the\n       * scrolling container - needed for rtl language layout, although not\n       * all browsers move the scrollbar (Safari).\n       */\n      bScrollbarLeft: false,\n\n      /**\n       * Browser scrollbar width\n       */\n      barWidth: 0,\n    },\n\n    ajax: null,\n\n    /**\n     * Array referencing the nodes which are used for the features. The\n     * parameters of this object match what is allowed by sDom - i.e.\n     *   <ul>\n     *     <li>'l' - Length changing</li>\n     *     <li>'f' - Filtering input</li>\n     *     <li>'t' - The table!</li>\n     *     <li>'i' - Information</li>\n     *     <li>'p' - Pagination</li>\n     *     <li>'r' - pRocessing</li>\n     *   </ul>\n     */\n    aanFeatures: [],\n\n    /**\n     * Store data information - see {@link DataTable.models.oRow} for detailed\n     * information.\n     */\n    aoData: [],\n\n    /**\n     * Array of indexes which are in the current display (after filtering etc)\n     */\n    aiDisplay: [],\n\n    /**\n     * Array of indexes for display - no filtering\n     */\n    aiDisplayMaster: [],\n\n    /**\n     * Map of row ids to data indexes\n     */\n    aIds: {},\n\n    /**\n     * Store information about each column that is in use\n     */\n    aoColumns: [],\n\n    /**\n     * Store information about the table's header\n     */\n    aoHeader: [],\n\n    /**\n     * Store information about the table's footer\n     */\n    aoFooter: [],\n\n    /**\n     * Store the applied global search information in case we want to force a\n     * research or compare the old search to a new one.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    oPreviousSearch: {},\n\n    /**\n     * Store for named searches\n     */\n    searchFixed: {},\n\n    /**\n     * Store the applied search for each column - see\n     * {@link DataTable.models.oSearch} for the format that is used for the\n     * filtering information for each column.\n     */\n    aoPreSearchCols: [],\n\n    /**\n     * Sorting that is applied to the table. Note that the inner arrays are\n     * used in the following manner:\n     * <ul>\n     *   <li>Index 0 - column number</li>\n     *   <li>Index 1 - current sorting direction</li>\n     * </ul>\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    aaSorting: null,\n\n    /**\n     * Sorting that is always applied to the table (i.e. prefixed in front of\n     * aaSorting).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    aaSortingFixed: [],\n\n    /**\n     * If restoring a table - we should restore its width\n     */\n    sDestroyWidth: 0,\n\n    /**\n     * Callback functions array for every time a row is inserted (i.e. on a draw).\n     */\n    aoRowCallback: [],\n\n    /**\n     * Callback functions for the header on each draw.\n     */\n    aoHeaderCallback: [],\n\n    /**\n     * Callback function for the footer on each draw.\n     */\n    aoFooterCallback: [],\n\n    /**\n     * Array of callback functions for draw callback functions\n     */\n    aoDrawCallback: [],\n\n    /**\n     * Array of callback functions for row created function\n     */\n    aoRowCreatedCallback: [],\n\n    /**\n     * Callback functions for just before the table is redrawn. A return of\n     * false will be used to cancel the draw.\n     */\n    aoPreDrawCallback: [],\n\n    /**\n     * Callback functions for when the table has been initialised.\n     */\n    aoInitComplete: [],\n\n    /**\n     * Callbacks for modifying the settings to be stored for state saving, prior to\n     * saving state.\n     */\n    aoStateSaveParams: [],\n\n    /**\n     * Callbacks for modifying the settings that have been stored for state saving\n     * prior to using the stored values to restore the state.\n     */\n    aoStateLoadParams: [],\n\n    /**\n     * Callbacks for operating on the settings object once the saved state has been\n     * loaded\n     */\n    aoStateLoaded: [],\n\n    /**\n     * Cache the table ID for quick access\n     */\n    sTableId: \"\",\n\n    /**\n     * The TABLE node for the main table\n     */\n    nTable: null,\n\n    /**\n     * Permanent ref to the thead element\n     */\n    nTHead: null,\n\n    /**\n     * Permanent ref to the tfoot element - if it exists\n     */\n    nTFoot: null,\n\n    /**\n     * Permanent ref to the tbody element\n     */\n    nTBody: null,\n\n    /**\n     * Cache the wrapper node (contains all DataTables controlled elements)\n     */\n    nTableWrapper: null,\n\n    /**\n     * Indicate if all required information has been read in\n     */\n    bInitialised: false,\n\n    /**\n     * Information about open rows. Each object in the array has the parameters\n     * 'nTr' and 'nParent'\n     */\n    aoOpenRows: [],\n\n    /**\n     * Dictate the positioning of DataTables' control elements - see\n     * {@link DataTable.model.oInit.sDom}.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    sDom: null,\n\n    /**\n     * Search delay (in mS)\n     */\n    searchDelay: null,\n\n    /**\n     * Which type of pagination should be used.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    sPaginationType: \"two_button\",\n\n    /**\n     * Number of paging controls on the page. Only used for backwards compatibility\n     */\n    pagingControls: 0,\n\n    /**\n     * The state duration (for `stateSave`) in seconds.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    iStateDuration: 0,\n\n    /**\n     * Array of callback functions for state saving. Each array element is an\n     * object with the following parameters:\n     *   <ul>\n     *     <li>function:fn - function to call. Takes two parameters, oSettings\n     *       and the JSON string to save that has been thus far created. Returns\n     *       a JSON string to be inserted into a json object\n     *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n     *     <li>string:sName - name of callback</li>\n     *   </ul>\n     */\n    aoStateSave: [],\n\n    /**\n     * Array of callback functions for state loading. Each array element is an\n     * object with the following parameters:\n     *   <ul>\n     *     <li>function:fn - function to call. Takes two parameters, oSettings\n     *       and the object stored. May return false to cancel state loading</li>\n     *     <li>string:sName - name of callback</li>\n     *   </ul>\n     */\n    aoStateLoad: [],\n\n    /**\n     * State that was saved. Useful for back reference\n     */\n    oSavedState: null,\n\n    /**\n     * State that was loaded. Useful for back reference\n     */\n    oLoadedState: null,\n\n    /**\n     * Note if draw should be blocked while getting data\n     */\n    bAjaxDataGet: true,\n\n    /**\n     * The last jQuery XHR object that was used for server-side data gathering.\n     * This can be used for working with the XHR information in one of the\n     * callbacks\n     */\n    jqXHR: null,\n\n    /**\n     * JSON returned from the server in the last Ajax request\n     */\n    json: undefined,\n\n    /**\n     * Data submitted as part of the last Ajax request\n     */\n    oAjaxData: undefined,\n\n    /**\n     * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n     * required).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    sServerMethod: null,\n\n    /**\n     * Format numbers for display.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    fnFormatNumber: null,\n\n    /**\n     * List of options that can be used for the user selectable length menu.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    aLengthMenu: null,\n\n    /**\n     * Counter for the draws that the table does. Also used as a tracker for\n     * server-side processing\n     */\n    iDraw: 0,\n\n    /**\n     * Indicate if a redraw is being done - useful for Ajax\n     */\n    bDrawing: false,\n\n    /**\n     * Draw index (iDraw) of the last error when parsing the returned data\n     */\n    iDrawError: -1,\n\n    /**\n     * Paging display length\n     */\n    _iDisplayLength: 10,\n\n    /**\n     * Paging start point - aiDisplay index\n     */\n    _iDisplayStart: 0,\n\n    /**\n     * Server-side processing - number of records in the result set\n     * (i.e. before filtering), Use fnRecordsTotal rather than\n     * this property to get the value of the number of records, regardless of\n     * the server-side processing setting.\n     */\n    _iRecordsTotal: 0,\n\n    /**\n     * Server-side processing - number of records in the current display set\n     * (i.e. after filtering). Use fnRecordsDisplay rather than\n     * this property to get the value of the number of records, regardless of\n     * the server-side processing setting.\n     */\n    _iRecordsDisplay: 0,\n\n    /**\n     * The classes to use for the table\n     */\n    oClasses: {},\n\n    /**\n     * Flag attached to the settings object so you can check in the draw\n     * callback if filtering has been done in the draw. Deprecated in favour of\n     * events.\n     *  @deprecated\n     */\n    bFiltered: false,\n\n    /**\n     * Flag attached to the settings object so you can check in the draw\n     * callback if sorting has been done in the draw. Deprecated in favour of\n     * events.\n     *  @deprecated\n     */\n    bSorted: false,\n\n    /**\n     * Indicate that if multiple rows are in the header and there is more than\n     * one unique cell per column, if the top one (true) or bottom one (false)\n     * should be used for sorting / title by DataTables.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    bSortCellsTop: null,\n\n    /**\n     * Initialisation object that is used for the table\n     */\n    oInit: null,\n\n    /**\n     * Destroy callback functions - for plug-ins to attach themselves to the\n     * destroy so they can clean up markup and events.\n     */\n    aoDestroyCallback: [],\n\n    /**\n     * Get the number of records in the current record set, before filtering\n     */\n    fnRecordsTotal: function () {\n      return _fnDataSource(this) == \"ssp\"\n        ? this._iRecordsTotal * 1\n        : this.aiDisplayMaster.length;\n    },\n\n    /**\n     * Get the number of records in the current record set, after filtering\n     */\n    fnRecordsDisplay: function () {\n      return _fnDataSource(this) == \"ssp\"\n        ? this._iRecordsDisplay * 1\n        : this.aiDisplay.length;\n    },\n\n    /**\n     * Get the display end point - aiDisplay index\n     */\n    fnDisplayEnd: function () {\n      var len = this._iDisplayLength,\n        start = this._iDisplayStart,\n        calc = start + len,\n        records = this.aiDisplay.length,\n        features = this.oFeatures,\n        paginate = features.bPaginate;\n\n      if (features.bServerSide) {\n        return paginate === false || len === -1\n          ? start + records\n          : Math.min(start + len, this._iRecordsDisplay);\n      } else {\n        return !paginate || calc > records || len === -1 ? records : calc;\n      }\n    },\n\n    /**\n     * The DataTables object for this table\n     */\n    oInstance: null,\n\n    /**\n     * Unique identifier for each instance of the DataTables object. If there\n     * is an ID on the table node, then it takes that value, otherwise an\n     * incrementing internal counter is used.\n     */\n    sInstance: null,\n\n    /**\n     * tabindex attribute value that is added to DataTables control elements, allowing\n     * keyboard navigation of the table and its controls.\n     */\n    iTabIndex: 0,\n\n    /**\n     * DIV container for the footer scrolling table if scrolling\n     */\n    nScrollHead: null,\n\n    /**\n     * DIV container for the footer scrolling table if scrolling\n     */\n    nScrollFoot: null,\n\n    /**\n     * Last applied sort\n     */\n    aLastSort: [],\n\n    /**\n     * Stored plug-in instances\n     */\n    oPlugins: {},\n\n    /**\n     * Function used to get a row's id from the row's data\n     */\n    rowIdFn: null,\n\n    /**\n     * Data location where to store a row's id\n     */\n    rowId: null,\n\n    caption: \"\",\n\n    captionNode: null,\n\n    colgroup: null,\n\n    /** Delay loading of data */\n    deferLoading: null,\n  };\n\n  /**\n   * Extension object for DataTables that is used to provide all extension\n   * options.\n   *\n   * Note that the `DataTable.ext` object is available through\n   * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n   * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n   *  @namespace\n   *  @extends DataTable.models.ext\n   */\n\n  var extPagination = DataTable.ext.pager;\n\n  // Paging buttons configuration\n  $.extend(extPagination, {\n    simple: function () {\n      return [\"previous\", \"next\"];\n    },\n\n    full: function () {\n      return [\"first\", \"previous\", \"next\", \"last\"];\n    },\n\n    numbers: function () {\n      return [\"numbers\"];\n    },\n\n    simple_numbers: function () {\n      return [\"previous\", \"numbers\", \"next\"];\n    },\n\n    full_numbers: function () {\n      return [\"first\", \"previous\", \"numbers\", \"next\", \"last\"];\n    },\n\n    first_last: function () {\n      return [\"first\", \"last\"];\n    },\n\n    first_last_numbers: function () {\n      return [\"first\", \"numbers\", \"last\"];\n    },\n\n    // For testing and plug-ins to use\n    _numbers: _pagingNumbers,\n\n    // Number of number buttons - legacy, use `numbers` option for paging feature\n    numbers_length: 7,\n  });\n\n  $.extend(true, DataTable.ext.renderer, {\n    pagingButton: {\n      _: function (settings, buttonType, content, active, disabled) {\n        var classes = settings.oClasses.paging;\n        var btnClasses = [classes.button];\n        var btn;\n\n        if (active) {\n          btnClasses.push(classes.active);\n        }\n\n        if (disabled) {\n          btnClasses.push(classes.disabled);\n        }\n\n        if (buttonType === \"ellipsis\") {\n          btn = $('<span class=\"ellipsis\"></span>').html(content)[0];\n        } else {\n          btn = $(\"<button>\", {\n            class: btnClasses.join(\" \"),\n            role: \"link\",\n            type: \"button\",\n          }).html(content);\n        }\n\n        return {\n          display: btn,\n          clicker: btn,\n        };\n      },\n    },\n\n    pagingContainer: {\n      _: function (settings, buttons) {\n        // No wrapping element - just append directly to the host\n        return buttons;\n      },\n    },\n  });\n\n  // Common function to remove new lines, strip HTML and diacritic control\n  var _filterString = function (stripHtml, normalize) {\n    return function (str) {\n      if (_empty(str) || typeof str !== \"string\") {\n        return str;\n      }\n\n      str = str.replace(_re_new_lines, \" \");\n\n      if (stripHtml) {\n        str = _stripHtml(str);\n      }\n\n      if (normalize) {\n        str = _normalize(str, false);\n      }\n\n      return str;\n    };\n  };\n\n  /*\n   * Public helper functions. These aren't used internally by DataTables, or\n   * called by any of the options passed into DataTables, but they can be used\n   * externally by developers working with DataTables. They are helper functions\n   * to make working with DataTables a little bit easier.\n   */\n\n  /**\n   * Common logic for moment, luxon or a date action.\n   *\n   * Happens after __mldObj, so don't need to call `resolveWindowsLibs` again\n   */\n  function __mld(dtLib, momentFn, luxonFn, dateFn, arg1) {\n    if (__moment) {\n      return dtLib[momentFn](arg1);\n    } else if (__luxon) {\n      return dtLib[luxonFn](arg1);\n    }\n\n    return dateFn ? dtLib[dateFn](arg1) : dtLib;\n  }\n\n  var __mlWarning = false;\n  var __luxon; // Can be assigned in DateTeble.use()\n  var __moment; // Can be assigned in DateTeble.use()\n\n  /**\n   *\n   */\n  function resolveWindowLibs() {\n    if (window.luxon && !__luxon) {\n      __luxon = window.luxon;\n    }\n\n    if (window.moment && !__moment) {\n      __moment = window.moment;\n    }\n  }\n\n  function __mldObj(d, format, locale) {\n    var dt;\n\n    resolveWindowLibs();\n\n    if (__moment) {\n      dt = __moment.utc(d, format, locale, true);\n\n      if (!dt.isValid()) {\n        return null;\n      }\n    } else if (__luxon) {\n      dt =\n        format && typeof d === \"string\"\n          ? __luxon.DateTime.fromFormat(d, format)\n          : __luxon.DateTime.fromISO(d);\n\n      if (!dt.isValid) {\n        return null;\n      }\n\n      dt.setLocale(locale);\n    } else if (!format) {\n      // No format given, must be ISO\n      dt = new Date(d);\n    } else {\n      if (!__mlWarning) {\n        alert(\n          \"DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17\"\n        );\n      }\n\n      __mlWarning = true;\n    }\n\n    return dt;\n  }\n\n  // Wrapper for date, datetime and time which all operate the same way with the exception of\n  // the output string for auto locale support\n  function __mlHelper(localeString) {\n    return function (from, to, locale, def) {\n      // Luxon and Moment support\n      // Argument shifting\n      if (arguments.length === 0) {\n        locale = \"en\";\n        to = null; // means toLocaleString\n        from = null; // means iso8601\n      } else if (arguments.length === 1) {\n        locale = \"en\";\n        to = from;\n        from = null;\n      } else if (arguments.length === 2) {\n        locale = to;\n        to = from;\n        from = null;\n      }\n\n      var typeName = \"datetime\" + (to ? \"-\" + to : \"\");\n\n      // Add type detection and sorting specific to this date format - we need to be able to identify\n      // date type columns as such, rather than as numbers in extensions. Hence the need for this.\n      if (!DataTable.ext.type.order[typeName]) {\n        DataTable.type(typeName, {\n          detect: function (d) {\n            // The renderer will give the value to type detect as the type!\n            return d === typeName ? typeName : false;\n          },\n          order: {\n            pre: function (d) {\n              // The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n              // `valueOf` which gives milliseconds epoch\n              return d.valueOf();\n            },\n          },\n          className: \"dt-right\",\n        });\n      }\n\n      return function (d, type) {\n        // Allow for a default value\n        if (d === null || d === undefined) {\n          if (def === \"--now\") {\n            // We treat everything as UTC further down, so no changes are\n            // made, as such need to get the local date / time as if it were\n            // UTC\n            var local = new Date();\n            d = new Date(\n              Date.UTC(\n                local.getFullYear(),\n                local.getMonth(),\n                local.getDate(),\n                local.getHours(),\n                local.getMinutes(),\n                local.getSeconds()\n              )\n            );\n          } else {\n            d = \"\";\n          }\n        }\n\n        if (type === \"type\") {\n          // Typing uses the type name for fast matching\n          return typeName;\n        }\n\n        if (d === \"\") {\n          return type !== \"sort\"\n            ? \"\"\n            : __mldObj(\"0000-01-01 00:00:00\", null, locale);\n        }\n\n        // Shortcut. If `from` and `to` are the same, we are using the renderer to\n        // format for ordering, not display - its already in the display format.\n        if (\n          to !== null &&\n          from === to &&\n          type !== \"sort\" &&\n          type !== \"type\" &&\n          !(d instanceof Date)\n        ) {\n          return d;\n        }\n\n        var dt = __mldObj(d, from, locale);\n\n        if (dt === null) {\n          return d;\n        }\n\n        if (type === \"sort\") {\n          return dt;\n        }\n\n        var formatted =\n          to === null\n            ? __mld(dt, \"toDate\", \"toJSDate\", \"\")[localeString]()\n            : __mld(dt, \"format\", \"toFormat\", \"toISOString\", to);\n\n        // XSS protection\n        return type === \"display\" ? _escapeHtml(formatted) : formatted;\n      };\n    };\n  }\n\n  // Based on locale, determine standard number formatting\n  // Fallback for legacy browsers is US English\n  var __thousands = \",\";\n  var __decimal = \".\";\n\n  if (window.Intl !== undefined) {\n    try {\n      var num = new Intl.NumberFormat().formatToParts(100000.1);\n\n      for (var i = 0; i < num.length; i++) {\n        if (num[i].type === \"group\") {\n          __thousands = num[i].value;\n        } else if (num[i].type === \"decimal\") {\n          __decimal = num[i].value;\n        }\n      }\n    } catch (e) {\n      // noop\n    }\n  }\n\n  // Formatted date time detection - use by declaring the formats you are going to use\n  DataTable.datetime = function (format, locale) {\n    var typeName = \"datetime-\" + format;\n\n    if (!locale) {\n      locale = \"en\";\n    }\n\n    if (!DataTable.ext.type.order[typeName]) {\n      DataTable.type(typeName, {\n        detect: function (d) {\n          var dt = __mldObj(d, format, locale);\n          return d === \"\" || dt ? typeName : false;\n        },\n        order: {\n          pre: function (d) {\n            return __mldObj(d, format, locale) || 0;\n          },\n        },\n        className: \"dt-right\",\n      });\n    }\n  };\n\n  /**\n   * Helpers for `columns.render`.\n   *\n   * The options defined here can be used with the `columns.render` initialisation\n   * option to provide a display renderer. The following functions are defined:\n   *\n   * * `moment` - Uses the MomentJS library to convert from a given format into another.\n   * This renderer has three overloads:\n   *   * 1 parameter:\n   *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\n   *   * 2 parameters:\n   *     * `string` - Format to convert from\n   *     * `string` - Format to convert to. Assumes `en` locale\n   *   * 3 parameters:\n   *     * `string` - Format to convert from\n   *     * `string` - Format to convert to\n   *     * `string` - Locale\n   * * `number` - Will format numeric data (defined by `columns.data`) for\n   *   display, retaining the original unformatted data for sorting and filtering.\n   *   It takes 5 parameters:\n   *   * `string` - Thousands grouping separator\n   *   * `string` - Decimal point indicator\n   *   * `integer` - Number of decimal points to show\n   *   * `string` (optional) - Prefix.\n   *   * `string` (optional) - Postfix (/suffix).\n   * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n   *   parameters.\n   *\n   * @example\n   *   // Column definition using the number renderer\n   *   {\n   *     data: \"salary\",\n   *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n   *   }\n   *\n   * @namespace\n   */\n  DataTable.render = {\n    date: __mlHelper(\"toLocaleDateString\"),\n    datetime: __mlHelper(\"toLocaleString\"),\n    time: __mlHelper(\"toLocaleTimeString\"),\n    number: function (thousands, decimal, precision, prefix, postfix) {\n      // Auto locale detection\n      if (thousands === null || thousands === undefined) {\n        thousands = __thousands;\n      }\n\n      if (decimal === null || decimal === undefined) {\n        decimal = __decimal;\n      }\n\n      return {\n        display: function (d) {\n          if (typeof d !== \"number\" && typeof d !== \"string\") {\n            return d;\n          }\n\n          if (d === \"\" || d === null) {\n            return d;\n          }\n\n          var negative = d < 0 ? \"-\" : \"\";\n          var flo = parseFloat(d);\n          var abs = Math.abs(flo);\n\n          // Scientific notation for large and small numbers\n          if (abs >= 100000000000 || (abs < 0.0001 && abs !== 0)) {\n            var exp = flo.toExponential(precision).split(/e\\+?/);\n            return exp[0] + \" x 10<sup>\" + exp[1] + \"</sup>\";\n          }\n\n          // If NaN then there isn't much formatting that we can do - just\n          // return immediately, escaping any HTML (this was supposed to\n          // be a number after all)\n          if (isNaN(flo)) {\n            return _escapeHtml(d);\n          }\n\n          flo = flo.toFixed(precision);\n          d = Math.abs(flo);\n\n          var intPart = parseInt(d, 10);\n          var floatPart = precision\n            ? decimal + (d - intPart).toFixed(precision).substring(2)\n            : \"\";\n\n          // If zero, then can't have a negative prefix\n          if (intPart === 0 && parseFloat(floatPart) === 0) {\n            negative = \"\";\n          }\n\n          return (\n            negative +\n            (prefix || \"\") +\n            intPart.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands) +\n            floatPart +\n            (postfix || \"\")\n          );\n        },\n      };\n    },\n\n    text: function () {\n      return {\n        display: _escapeHtml,\n        filter: _escapeHtml,\n      };\n    },\n  };\n\n  var _extTypes = DataTable.ext.type;\n\n  // Get / set type\n  DataTable.type = function (name, prop, val) {\n    if (!prop) {\n      return {\n        className: _extTypes.className[name],\n        detect: _extTypes.detect.find(function (fn) {\n          return fn.name === name;\n        }),\n        order: {\n          pre: _extTypes.order[name + \"-pre\"],\n          asc: _extTypes.order[name + \"-asc\"],\n          desc: _extTypes.order[name + \"-desc\"],\n        },\n        render: _extTypes.render[name],\n        search: _extTypes.search[name],\n      };\n    }\n\n    var setProp = function (prop, propVal) {\n      _extTypes[prop][name] = propVal;\n    };\n    var setDetect = function (detect) {\n      // `detect` can be a function or an object - we set a name\n      // property for either - that is used for the detection\n      Object.defineProperty(detect, \"name\", { value: name });\n\n      var idx = _extTypes.detect.findIndex(function (item) {\n        return item.name === name;\n      });\n\n      if (idx === -1) {\n        _extTypes.detect.unshift(detect);\n      } else {\n        _extTypes.detect.splice(idx, 1, detect);\n      }\n    };\n    var setOrder = function (obj) {\n      _extTypes.order[name + \"-pre\"] = obj.pre; // can be undefined\n      _extTypes.order[name + \"-asc\"] = obj.asc; // can be undefined\n      _extTypes.order[name + \"-desc\"] = obj.desc; // can be undefined\n    };\n\n    // prop is optional\n    if (val === undefined) {\n      val = prop;\n      prop = null;\n    }\n\n    if (prop === \"className\") {\n      setProp(\"className\", val);\n    } else if (prop === \"detect\") {\n      setDetect(val);\n    } else if (prop === \"order\") {\n      setOrder(val);\n    } else if (prop === \"render\") {\n      setProp(\"render\", val);\n    } else if (prop === \"search\") {\n      setProp(\"search\", val);\n    } else if (!prop) {\n      if (val.className) {\n        setProp(\"className\", val.className);\n      }\n\n      if (val.detect !== undefined) {\n        setDetect(val.detect);\n      }\n\n      if (val.order) {\n        setOrder(val.order);\n      }\n\n      if (val.render !== undefined) {\n        setProp(\"render\", val.render);\n      }\n\n      if (val.search !== undefined) {\n        setProp(\"search\", val.search);\n      }\n    }\n  };\n\n  // Get a list of types\n  DataTable.types = function () {\n    return _extTypes.detect.map(function (fn) {\n      return fn.name;\n    });\n  };\n\n  var __diacriticSort = function (a, b) {\n    a = a.toString().toLowerCase();\n    b = b.toString().toLowerCase();\n\n    // Checked for `navigator.languages` support in `oneOf` so this code can't execute in old\n    // Safari and thus can disable this check\n    // eslint-disable-next-line compat/compat\n    return a.localeCompare(b, navigator.languages[0] || navigator.language, {\n      numeric: true,\n      ignorePunctuation: true,\n    });\n  };\n\n  //\n  // Built in data types\n  //\n\n  DataTable.type(\"string\", {\n    detect: function () {\n      return \"string\";\n    },\n    order: {\n      pre: function (a) {\n        // This is a little complex, but faster than always calling toString,\n        // http://jsperf.com/tostring-v-check\n        return _empty(a) && typeof a !== \"boolean\"\n          ? \"\"\n          : typeof a === \"string\"\n          ? a.toLowerCase()\n          : !a.toString\n          ? \"\"\n          : a.toString();\n      },\n    },\n    search: _filterString(false, true),\n  });\n\n  DataTable.type(\"string-utf8\", {\n    detect: {\n      allOf: function (d) {\n        return true;\n      },\n      oneOf: function (d) {\n        // At least one data point must contain a non-ASCII character\n        // This line will also check if navigator.languages is supported or not. If not (Safari 10.0-)\n        // this data type won't be supported.\n        // eslint-disable-next-line compat/compat\n        return (\n          !_empty(d) &&\n          navigator.languages &&\n          typeof d === \"string\" &&\n          d.match(/[^\\x00-\\x7F]/)\n        );\n      },\n    },\n    order: {\n      asc: __diacriticSort,\n      desc: function (a, b) {\n        return __diacriticSort(a, b) * -1;\n      },\n    },\n    search: _filterString(false, true),\n  });\n\n  DataTable.type(\"html\", {\n    detect: {\n      allOf: function (d) {\n        return _empty(d) || (typeof d === \"string\" && d.indexOf(\"<\") !== -1);\n      },\n      oneOf: function (d) {\n        // At least one data point must contain a `<`\n        return !_empty(d) && typeof d === \"string\" && d.indexOf(\"<\") !== -1;\n      },\n    },\n    order: {\n      pre: function (a) {\n        return _empty(a)\n          ? \"\"\n          : a.replace\n          ? _stripHtml(a).trim().toLowerCase()\n          : a + \"\";\n      },\n    },\n    search: _filterString(true, true),\n  });\n\n  DataTable.type(\"date\", {\n    className: \"dt-type-date\",\n    detect: {\n      allOf: function (d) {\n        // V8 tries _very_ hard to make a string passed into `Date.parse()`\n        // valid, so we need to use a regex to restrict date formats. Use a\n        // plug-in for anything other than ISO8601 style strings\n        if (d && !(d instanceof Date) && !_re_date.test(d)) {\n          return null;\n        }\n        var parsed = Date.parse(d);\n        return (parsed !== null && !isNaN(parsed)) || _empty(d);\n      },\n      oneOf: function (d) {\n        // At least one entry must be a date or a string with a date\n        return d instanceof Date || (typeof d === \"string\" && _re_date.test(d));\n      },\n    },\n    order: {\n      pre: function (d) {\n        var ts = Date.parse(d);\n        return isNaN(ts) ? -Infinity : ts;\n      },\n    },\n  });\n\n  DataTable.type(\"html-num-fmt\", {\n    className: \"dt-type-numeric\",\n    detect: {\n      allOf: function (d, settings) {\n        var decimal = settings.oLanguage.sDecimal;\n        return _htmlNumeric(d, decimal, true, false);\n      },\n      oneOf: function (d, settings) {\n        // At least one data point must contain a numeric value\n        var decimal = settings.oLanguage.sDecimal;\n        return _htmlNumeric(d, decimal, true, false);\n      },\n    },\n    order: {\n      pre: function (d, s) {\n        var dp = s.oLanguage.sDecimal;\n        return __numericReplace(d, dp, _re_html, _re_formatted_numeric);\n      },\n    },\n    search: _filterString(true, true),\n  });\n\n  DataTable.type(\"html-num\", {\n    className: \"dt-type-numeric\",\n    detect: {\n      allOf: function (d, settings) {\n        var decimal = settings.oLanguage.sDecimal;\n        return _htmlNumeric(d, decimal, false, true);\n      },\n      oneOf: function (d, settings) {\n        // At least one data point must contain a numeric value\n        var decimal = settings.oLanguage.sDecimal;\n        return _htmlNumeric(d, decimal, false, false);\n      },\n    },\n    order: {\n      pre: function (d, s) {\n        var dp = s.oLanguage.sDecimal;\n        return __numericReplace(d, dp, _re_html);\n      },\n    },\n    search: _filterString(true, true),\n  });\n\n  DataTable.type(\"num-fmt\", {\n    className: \"dt-type-numeric\",\n    detect: {\n      allOf: function (d, settings) {\n        var decimal = settings.oLanguage.sDecimal;\n        return _isNumber(d, decimal, true, true);\n      },\n      oneOf: function (d, settings) {\n        // At least one data point must contain a numeric value\n        var decimal = settings.oLanguage.sDecimal;\n        return _isNumber(d, decimal, true, false);\n      },\n    },\n    order: {\n      pre: function (d, s) {\n        var dp = s.oLanguage.sDecimal;\n        return __numericReplace(d, dp, _re_formatted_numeric);\n      },\n    },\n  });\n\n  DataTable.type(\"num\", {\n    className: \"dt-type-numeric\",\n    detect: {\n      allOf: function (d, settings) {\n        var decimal = settings.oLanguage.sDecimal;\n        return _isNumber(d, decimal, false, true);\n      },\n      oneOf: function (d, settings) {\n        // At least one data point must contain a numeric value\n        var decimal = settings.oLanguage.sDecimal;\n        return _isNumber(d, decimal, false, false);\n      },\n    },\n    order: {\n      pre: function (d, s) {\n        var dp = s.oLanguage.sDecimal;\n        return __numericReplace(d, dp);\n      },\n    },\n  });\n\n  var __numericReplace = function (d, decimalPlace, re1, re2) {\n    if (d !== 0 && (!d || d === \"-\")) {\n      return -Infinity;\n    }\n\n    var type = typeof d;\n\n    if (type === \"number\" || type === \"bigint\") {\n      return d;\n    }\n\n    // If a decimal place other than `.` is used, it needs to be given to the\n    // function so we can detect it and replace with a `.` which is the only\n    // decimal place Javascript recognises - it is not locale aware.\n    if (decimalPlace) {\n      d = _numToDecimal(d, decimalPlace);\n    }\n\n    if (d.replace) {\n      if (re1) {\n        d = d.replace(re1, \"\");\n      }\n\n      if (re2) {\n        d = d.replace(re2, \"\");\n      }\n    }\n\n    return d * 1;\n  };\n\n  $.extend(true, DataTable.ext.renderer, {\n    footer: {\n      _: function (settings, cell, classes) {\n        cell.addClass(classes.tfoot.cell);\n      },\n    },\n\n    header: {\n      _: function (settings, cell, classes) {\n        cell.addClass(classes.thead.cell);\n\n        if (!settings.oFeatures.bSort) {\n          cell.addClass(classes.order.none);\n        }\n\n        var legacyTop = settings.bSortCellsTop;\n        var headerRows = cell.closest(\"thead\").find(\"tr\");\n        var rowIdx = cell.parent().index();\n\n        // Conditions to not apply the ordering icons\n        if (\n          // Cells and rows which have the attribute to disable the icons\n          cell.attr(\"data-dt-order\") === \"disable\" ||\n          cell.parent().attr(\"data-dt-order\") === \"disable\" ||\n          // Legacy support for `orderCellsTop`. If it is set, then cells\n          // which are not in the top or bottom row of the header (depending\n          // on the value) do not get the sorting classes applied to them\n          (legacyTop === true && rowIdx !== 0) ||\n          (legacyTop === false && rowIdx !== headerRows.length - 1)\n        ) {\n          return;\n        }\n\n        // No additional mark-up required\n        // Attach a sort listener to update on sort - note that using the\n        // `DT` namespace will allow the event to be removed automatically\n        // on destroy, while the `dt` namespaced event is the one we are\n        // listening for\n        $(settings.nTable).on(\n          \"order.dt.DT column-visibility.dt.DT\",\n          function (e, ctx) {\n            if (settings !== ctx) {\n              // need to check this this is the host\n              return; // table, not a nested one\n            }\n\n            var sorting = ctx.sortDetails;\n\n            if (!sorting) {\n              return;\n            }\n\n            var i;\n            var orderClasses = classes.order;\n            var columns = ctx.api.columns(cell);\n            var col = settings.aoColumns[columns.flatten()[0]];\n            var orderable = columns.orderable().includes(true);\n            var ariaType = \"\";\n            var indexes = columns.indexes();\n            var sortDirs = columns.orderable(true).flatten();\n            var orderedColumns = _pluck(sorting, \"col\");\n\n            cell\n              .removeClass(orderClasses.isAsc + \" \" + orderClasses.isDesc)\n              .toggleClass(orderClasses.none, !orderable)\n              .toggleClass(\n                orderClasses.canAsc,\n                orderable && sortDirs.includes(\"asc\")\n              )\n              .toggleClass(\n                orderClasses.canDesc,\n                orderable && sortDirs.includes(\"desc\")\n              );\n\n            // Determine if all of the columns that this cell covers are included in the\n            // current ordering\n            var isOrdering = true;\n\n            for (i = 0; i < indexes.length; i++) {\n              if (!orderedColumns.includes(indexes[i])) {\n                isOrdering = false;\n              }\n            }\n\n            if (isOrdering) {\n              // Get the ordering direction for the columns under this cell\n              // Note that it is possible for a cell to be asc and desc sorting\n              // (column spanning cells)\n              var orderDirs = columns.order();\n\n              cell.addClass(\n                orderDirs.includes(\"asc\")\n                  ? orderClasses.isAsc\n                  : \"\" + orderDirs.includes(\"desc\")\n                  ? orderClasses.isDesc\n                  : \"\"\n              );\n            }\n\n            // Find the first visible column that has ordering applied to it - it get's\n            // the aria information, as the ARIA spec says that only one column should\n            // be marked with aria-sort\n            var firstVis = -1; // column index\n\n            for (i = 0; i < orderedColumns.length; i++) {\n              if (settings.aoColumns[orderedColumns[i]].bVisible) {\n                firstVis = orderedColumns[i];\n                break;\n              }\n            }\n\n            if (indexes[0] == firstVis) {\n              var firstSort = sorting[0];\n              var sortOrder = col.asSorting;\n\n              cell.attr(\n                \"aria-sort\",\n                firstSort.dir === \"asc\" ? \"ascending\" : \"descending\"\n              );\n\n              // Determine if the next click will remove sorting or change the sort\n              ariaType = !sortOrder[firstSort.index + 1] ? \"Remove\" : \"Reverse\";\n            } else {\n              cell.removeAttr(\"aria-sort\");\n            }\n\n            cell.attr(\n              \"aria-label\",\n              orderable\n                ? col.ariaTitle + ctx.api.i18n(\"oAria.orderable\" + ariaType)\n                : col.ariaTitle\n            );\n\n            // Make the headers tab-able for keyboard navigation\n            if (orderable) {\n              cell.find(\".dt-column-title\").attr(\"role\", \"button\");\n              cell.attr(\"tabindex\", 0);\n            }\n          }\n        );\n      },\n    },\n\n    layout: {\n      _: function (settings, container, items) {\n        var classes = settings.oClasses.layout;\n        var row = $(\"<div/>\")\n          .attr(\"id\", items.id || null)\n          .addClass(items.className || classes.row)\n          .appendTo(container);\n\n        $.each(items, function (key, val) {\n          if (key === \"id\" || key === \"className\") {\n            return;\n          }\n\n          var klass = \"\";\n\n          if (val.table) {\n            row.addClass(classes.tableRow);\n            klass += classes.tableCell + \" \";\n          }\n\n          if (key === \"start\") {\n            klass += classes.start;\n          } else if (key === \"end\") {\n            klass += classes.end;\n          } else {\n            klass += classes.full;\n          }\n\n          $(\"<div/>\")\n            .attr({\n              id: val.id || null,\n              class: val.className ? val.className : classes.cell + \" \" + klass,\n            })\n            .append(val.contents)\n            .appendTo(row);\n        });\n      },\n    },\n  });\n\n  DataTable.feature = {};\n\n  // Third parameter is internal only!\n  DataTable.feature.register = function (name, cb, legacy) {\n    DataTable.ext.features[name] = cb;\n\n    if (legacy) {\n      _ext.feature.push({\n        cFeature: legacy,\n        fnInit: cb,\n      });\n    }\n  };\n\n  function _divProp(el, prop, val) {\n    if (val) {\n      el[prop] = val;\n    }\n  }\n\n  DataTable.feature.register(\"div\", function (settings, opts) {\n    var n = $(\"<div>\")[0];\n\n    if (opts) {\n      _divProp(n, \"className\", opts.className);\n      _divProp(n, \"id\", opts.id);\n      _divProp(n, \"innerHTML\", opts.html);\n      _divProp(n, \"textContent\", opts.text);\n    }\n\n    return n;\n  });\n\n  DataTable.feature.register(\n    \"info\",\n    function (settings, opts) {\n      // For compatibility with the legacy `info` top level option\n      if (!settings.oFeatures.bInfo) {\n        return null;\n      }\n\n      var lang = settings.oLanguage,\n        tid = settings.sTableId,\n        n = $(\"<div/>\", {\n          class: settings.oClasses.info.container,\n        });\n\n      opts = $.extend(\n        {\n          callback: lang.fnInfoCallback,\n          empty: lang.sInfoEmpty,\n          postfix: lang.sInfoPostFix,\n          search: lang.sInfoFiltered,\n          text: lang.sInfo,\n        },\n        opts\n      );\n\n      // Update display on each draw\n      settings.aoDrawCallback.push(function (s) {\n        _fnUpdateInfo(s, opts, n);\n      });\n\n      // For the first info display in the table, we add a callback and aria information.\n      if (!settings._infoEl) {\n        n.attr({\n          \"aria-live\": \"polite\",\n          id: tid + \"_info\",\n          role: \"status\",\n        });\n\n        // Table is described by our info div\n        $(settings.nTable).attr(\"aria-describedby\", tid + \"_info\");\n\n        settings._infoEl = n;\n      }\n\n      return n;\n    },\n    \"i\"\n  );\n\n  /**\n   * Update the information elements in the display\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n  function _fnUpdateInfo(settings, opts, node) {\n    var start = settings._iDisplayStart + 1,\n      end = settings.fnDisplayEnd(),\n      max = settings.fnRecordsTotal(),\n      total = settings.fnRecordsDisplay(),\n      out = total ? opts.text : opts.empty;\n\n    if (total !== max) {\n      // Record set after filtering\n      out += \" \" + opts.search;\n    }\n\n    // Convert the macros\n    out += opts.postfix;\n    out = _fnMacros(settings, out);\n\n    if (opts.callback) {\n      out = opts.callback.call(\n        settings.oInstance,\n        settings,\n        start,\n        end,\n        max,\n        total,\n        out\n      );\n    }\n\n    node.html(out);\n\n    _fnCallbackFire(settings, null, \"info\", [settings, node[0], out]);\n  }\n\n  var __searchCounter = 0;\n\n  // opts\n  // - text\n  // - placeholder\n  DataTable.feature.register(\n    \"search\",\n    function (settings, opts) {\n      // Don't show the input if filtering isn't available on the table\n      if (!settings.oFeatures.bFilter) {\n        return null;\n      }\n\n      var classes = settings.oClasses.search;\n      var tableId = settings.sTableId;\n      var language = settings.oLanguage;\n      var previousSearch = settings.oPreviousSearch;\n      var input = '<input type=\"search\" class=\"' + classes.input + '\"/>';\n\n      opts = $.extend(\n        {\n          placeholder: language.sSearchPlaceholder,\n          processing: false,\n          text: language.sSearch,\n        },\n        opts\n      );\n\n      // The _INPUT_ is optional - is appended if not present\n      if (opts.text.indexOf(\"_INPUT_\") === -1) {\n        opts.text += \"_INPUT_\";\n      }\n\n      opts.text = _fnMacros(settings, opts.text);\n\n      // We can put the <input> outside of the label if it is at the start or end\n      // which helps improve accessability (not all screen readers like implicit\n      // for elements).\n      var end = opts.text.match(/_INPUT_$/);\n      var start = opts.text.match(/^_INPUT_/);\n      var removed = opts.text.replace(/_INPUT_/, \"\");\n      var str = \"<label>\" + opts.text + \"</label>\";\n\n      if (start) {\n        str = \"_INPUT_<label>\" + removed + \"</label>\";\n      } else if (end) {\n        str = \"<label>\" + removed + \"</label>_INPUT_\";\n      }\n\n      var filter = $(\"<div>\")\n        .addClass(classes.container)\n        .append(str.replace(/_INPUT_/, input));\n\n      // add for and id to label and input\n      filter.find(\"label\").attr(\"for\", \"dt-search-\" + __searchCounter);\n      filter.find(\"input\").attr(\"id\", \"dt-search-\" + __searchCounter);\n      __searchCounter++;\n\n      var searchFn = function (event) {\n        var val = this.value;\n\n        if (previousSearch.return && event.key !== \"Enter\") {\n          return;\n        }\n\n        /* Now do the filter */\n        if (val != previousSearch.search) {\n          _fnProcessingRun(settings, opts.processing, function () {\n            previousSearch.search = val;\n\n            _fnFilterComplete(settings, previousSearch);\n\n            // Need to redraw, without resorting\n            settings._iDisplayStart = 0;\n            _fnDraw(settings);\n          });\n        }\n      };\n\n      var searchDelay =\n        settings.searchDelay !== null ? settings.searchDelay : 0;\n\n      var jqFilter = $(\"input\", filter)\n        .val(previousSearch.search)\n        .attr(\"placeholder\", opts.placeholder)\n        .on(\n          \"keyup.DT search.DT input.DT paste.DT cut.DT\",\n          searchDelay\n            ? DataTable.util.debounce(searchFn, searchDelay)\n            : searchFn\n        )\n        .on(\"mouseup.DT\", function (e) {\n          // Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n          // on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n          // checks the value to see if it has changed. In other browsers it won't have.\n          setTimeout(function () {\n            searchFn.call(jqFilter[0], e);\n          }, 10);\n        })\n        .on(\"keypress.DT\", function (e) {\n          /* Prevent form submission */\n          if (e.keyCode == 13) {\n            return false;\n          }\n        })\n        .attr(\"aria-controls\", tableId);\n\n      // Update the input elements whenever the table is filtered\n      $(settings.nTable).on(\"search.dt.DT\", function (ev, s) {\n        if (settings === s && jqFilter[0] !== document.activeElement) {\n          jqFilter.val(\n            typeof previousSearch.search !== \"function\"\n              ? previousSearch.search\n              : \"\"\n          );\n        }\n      });\n\n      return filter;\n    },\n    \"f\"\n  );\n\n  // opts\n  // - type - button configuration\n  // - buttons - number of buttons to show - must be odd\n  DataTable.feature.register(\n    \"paging\",\n    function (settings, opts) {\n      // Don't show the paging input if the table doesn't have paging enabled\n      if (!settings.oFeatures.bPaginate) {\n        return null;\n      }\n\n      opts = $.extend(\n        {\n          buttons: DataTable.ext.pager.numbers_length,\n          type: settings.sPaginationType,\n          boundaryNumbers: true,\n          firstLast: true,\n          previousNext: true,\n          numbers: true,\n        },\n        opts\n      );\n\n      var host = $(\"<div/>\")\n        .addClass(\n          settings.oClasses.paging.container +\n            (opts.type ? \" paging_\" + opts.type : \"\")\n        )\n        .append(\"<nav>\");\n      var draw = function () {\n        _pagingDraw(settings, host.children(), opts);\n      };\n\n      settings.aoDrawCallback.push(draw);\n\n      // Responsive redraw of paging control\n      $(settings.nTable).on(\"column-sizing.dt.DT\", draw);\n\n      return host;\n    },\n    \"p\"\n  );\n\n  /**\n   * Dynamically create the button type array based on the configuration options.\n   * This will only happen if the paging type is not defined.\n   */\n  function _pagingDynamic(opts) {\n    var out = [];\n\n    if (opts.numbers) {\n      out.push(\"numbers\");\n    }\n\n    if (opts.previousNext) {\n      out.unshift(\"previous\");\n      out.push(\"next\");\n    }\n\n    if (opts.firstLast) {\n      out.unshift(\"first\");\n      out.push(\"last\");\n    }\n\n    return out;\n  }\n\n  function _pagingDraw(settings, host, opts) {\n    if (!settings._bInitComplete) {\n      return;\n    }\n\n    var plugin = opts.type ? DataTable.ext.pager[opts.type] : _pagingDynamic,\n      aria = settings.oLanguage.oAria.paginate || {},\n      start = settings._iDisplayStart,\n      len = settings._iDisplayLength,\n      visRecords = settings.fnRecordsDisplay(),\n      all = len === -1,\n      page = all ? 0 : Math.ceil(start / len),\n      pages = all ? 1 : Math.ceil(visRecords / len),\n      buttons = plugin(opts)\n        .map(function (val) {\n          return val === \"numbers\"\n            ? _pagingNumbers(page, pages, opts.buttons, opts.boundaryNumbers)\n            : val;\n        })\n        .flat();\n\n    var buttonEls = [];\n\n    for (var i = 0; i < buttons.length; i++) {\n      var button = buttons[i];\n\n      var btnInfo = _pagingButtonInfo(settings, button, page, pages);\n      var btn = _fnRenderer(settings, \"pagingButton\")(\n        settings,\n        button,\n        btnInfo.display,\n        btnInfo.active,\n        btnInfo.disabled\n      );\n\n      var ariaLabel =\n        typeof button === \"string\"\n          ? aria[button]\n          : aria.number\n          ? aria.number + (button + 1)\n          : null;\n\n      // Common attributes\n      $(btn.clicker).attr({\n        \"aria-controls\": settings.sTableId,\n        \"aria-disabled\": btnInfo.disabled ? \"true\" : null,\n        \"aria-current\": btnInfo.active ? \"page\" : null,\n        \"aria-label\": ariaLabel,\n        \"data-dt-idx\": button,\n        tabIndex: btnInfo.disabled\n          ? -1\n          : settings.iTabIndex\n          ? settings.iTabIndex\n          : null, // `0` doesn't need a tabIndex since it is the default\n      });\n\n      if (typeof button !== \"number\") {\n        $(btn.clicker).addClass(button);\n      }\n\n      _fnBindAction(btn.clicker, { action: button }, function (e) {\n        e.preventDefault();\n\n        _fnPageChange(settings, e.data.action, true);\n      });\n\n      buttonEls.push(btn.display);\n    }\n\n    var wrapped = _fnRenderer(settings, \"pagingContainer\")(settings, buttonEls);\n\n    var activeEl = host.find(document.activeElement).data(\"dt-idx\");\n\n    host.empty().append(wrapped);\n\n    if (activeEl !== undefined) {\n      host.find(\"[data-dt-idx=\" + activeEl + \"]\").trigger(\"focus\");\n    }\n\n    // Responsive - check if the buttons are over two lines based on the\n    // height of the buttons and the container.\n    if (\n      buttonEls.length && // any buttons\n      opts.buttons > 1 && // prevent infinite\n      $(host).height() >= $(buttonEls[0]).outerHeight() * 2 - 10\n    ) {\n      _pagingDraw(\n        settings,\n        host,\n        $.extend({}, opts, { buttons: opts.buttons - 2 })\n      );\n    }\n  }\n\n  /**\n   * Get properties for a button based on the current paging state of the table\n   *\n   * @param {*} settings DT settings object\n   * @param {*} button The button type in question\n   * @param {*} page Table's current page\n   * @param {*} pages Number of pages\n   * @returns Info object\n   */\n  function _pagingButtonInfo(settings, button, page, pages) {\n    var lang = settings.oLanguage.oPaginate;\n    var o = {\n      display: \"\",\n      active: false,\n      disabled: false,\n    };\n\n    switch (button) {\n      case \"ellipsis\":\n        o.display = \"&#x2026;\";\n        o.disabled = true;\n        break;\n\n      case \"first\":\n        o.display = lang.sFirst;\n\n        if (page === 0) {\n          o.disabled = true;\n        }\n        break;\n\n      case \"previous\":\n        o.display = lang.sPrevious;\n\n        if (page === 0) {\n          o.disabled = true;\n        }\n        break;\n\n      case \"next\":\n        o.display = lang.sNext;\n\n        if (pages === 0 || page === pages - 1) {\n          o.disabled = true;\n        }\n        break;\n\n      case \"last\":\n        o.display = lang.sLast;\n\n        if (pages === 0 || page === pages - 1) {\n          o.disabled = true;\n        }\n        break;\n\n      default:\n        if (typeof button === \"number\") {\n          o.display = settings.fnFormatNumber(button + 1);\n\n          if (page === button) {\n            o.active = true;\n          }\n        }\n        break;\n    }\n\n    return o;\n  }\n\n  /**\n   * Compute what number buttons to show in the paging control\n   *\n   * @param {*} page Current page\n   * @param {*} pages Total number of pages\n   * @param {*} buttons Target number of number buttons\n   * @param {boolean} addFirstLast Indicate if page 1 and end should be included\n   * @returns Buttons to show\n   */\n  function _pagingNumbers(page, pages, buttons, addFirstLast) {\n    var numbers = [],\n      half = Math.floor(buttons / 2),\n      before = addFirstLast ? 2 : 1,\n      after = addFirstLast ? 1 : 0;\n\n    if (pages <= buttons) {\n      numbers = _range(0, pages);\n    } else if (buttons === 1) {\n      // Single button - current page only\n      numbers = [page];\n    } else if (buttons === 3) {\n      // Special logic for just three buttons\n      if (page <= 1) {\n        numbers = [0, 1, \"ellipsis\"];\n      } else if (page >= pages - 2) {\n        numbers = _range(pages - 2, pages);\n        numbers.unshift(\"ellipsis\");\n      } else {\n        numbers = [\"ellipsis\", page, \"ellipsis\"];\n      }\n    } else if (page <= half) {\n      numbers = _range(0, buttons - before);\n      numbers.push(\"ellipsis\");\n\n      if (addFirstLast) {\n        numbers.push(pages - 1);\n      }\n    } else if (page >= pages - 1 - half) {\n      numbers = _range(pages - (buttons - before), pages);\n      numbers.unshift(\"ellipsis\");\n\n      if (addFirstLast) {\n        numbers.unshift(0);\n      }\n    } else {\n      numbers = _range(page - half + before, page + half - after);\n      numbers.push(\"ellipsis\");\n      numbers.unshift(\"ellipsis\");\n\n      if (addFirstLast) {\n        numbers.push(pages - 1);\n        numbers.unshift(0);\n      }\n    }\n\n    return numbers;\n  }\n\n  var __lengthCounter = 0;\n\n  // opts\n  // - menu\n  // - text\n  DataTable.feature.register(\n    \"pageLength\",\n    function (settings, opts) {\n      var features = settings.oFeatures;\n\n      // For compatibility with the legacy `pageLength` top level option\n      if (!features.bPaginate || !features.bLengthChange) {\n        return null;\n      }\n\n      opts = $.extend(\n        {\n          menu: settings.aLengthMenu,\n          text: settings.oLanguage.sLengthMenu,\n        },\n        opts\n      );\n\n      var classes = settings.oClasses.length,\n        tableId = settings.sTableId,\n        menu = opts.menu,\n        lengths = [],\n        language = [],\n        i;\n\n      // Options can be given in a number of ways\n      if (Array.isArray(menu[0])) {\n        // Old 1.x style - 2D array\n        lengths = menu[0];\n        language = menu[1];\n      } else {\n        for (i = 0; i < menu.length; i++) {\n          // An object with different label and value\n          if ($.isPlainObject(menu[i])) {\n            lengths.push(menu[i].value);\n            language.push(menu[i].label);\n          } else {\n            // Or just a number to display and use\n            lengths.push(menu[i]);\n            language.push(menu[i]);\n          }\n        }\n      }\n\n      // We can put the <select> outside of the label if it is at the start or\n      // end which helps improve accessability (not all screen readers like\n      // implicit for elements).\n      var end = opts.text.match(/_MENU_$/);\n      var start = opts.text.match(/^_MENU_/);\n      var removed = opts.text.replace(/_MENU_/, \"\");\n      var str = \"<label>\" + opts.text + \"</label>\";\n\n      if (start) {\n        str = \"_MENU_<label>\" + removed + \"</label>\";\n      } else if (end) {\n        str = \"<label>\" + removed + \"</label>_MENU_\";\n      }\n\n      // Wrapper element - use a span as a holder for where the select will go\n      var tmpId = \"tmp-\" + +new Date();\n      var div = $(\"<div/>\")\n        .addClass(classes.container)\n        .append(str.replace(\"_MENU_\", '<span id=\"' + tmpId + '\"></span>'));\n\n      // Save text node content for macro updating\n      var textNodes = [];\n      div.find(\"label\")[0].childNodes.forEach(function (el) {\n        if (el.nodeType === Node.TEXT_NODE) {\n          textNodes.push({\n            el: el,\n            text: el.textContent,\n          });\n        }\n      });\n\n      // Update the label text in case it has an entries value\n      var updateEntries = function (len) {\n        textNodes.forEach(function (node) {\n          node.el.textContent = _fnMacros(settings, node.text, len);\n        });\n      };\n\n      // Next, the select itself, along with the options\n      var select = $(\"<select/>\", {\n        name: tableId + \"_length\",\n        \"aria-controls\": tableId,\n        class: classes.select,\n      });\n\n      for (i = 0; i < lengths.length; i++) {\n        select[0][i] = new Option(\n          typeof language[i] === \"number\"\n            ? settings.fnFormatNumber(language[i])\n            : language[i],\n          lengths[i]\n        );\n      }\n\n      // add for and id to label and input\n      div.find(\"label\").attr(\"for\", \"dt-length-\" + __lengthCounter);\n      select.attr(\"id\", \"dt-length-\" + __lengthCounter);\n      __lengthCounter++;\n\n      // Swap in the select list\n      div.find(\"#\" + tmpId).replaceWith(select);\n\n      // Can't use `select` variable as user might provide their own and the\n      // reference is broken by the use of outerHTML\n      $(\"select\", div)\n        .val(settings._iDisplayLength)\n        .on(\"change.DT\", function () {\n          _fnLengthChange(settings, $(this).val());\n          _fnDraw(settings);\n        });\n\n      // Update node value whenever anything changes the table's length\n      $(settings.nTable).on(\"length.dt.DT\", function (e, s, len) {\n        if (settings === s) {\n          $(\"select\", div).val(len);\n\n          // Resolve plurals in the text for the new length\n          updateEntries(len);\n        }\n      });\n\n      updateEntries(settings._iDisplayLength);\n\n      return div;\n    },\n    \"l\"\n  );\n\n  // jQuery access\n  $.fn.dataTable = DataTable;\n\n  // Provide access to the host jQuery object (circular reference)\n  DataTable.$ = $;\n\n  // Legacy aliases\n  $.fn.dataTableSettings = DataTable.settings;\n  $.fn.dataTableExt = DataTable.ext;\n\n  // With a capital `D` we return a DataTables API instance rather than a\n  // jQuery object\n  $.fn.DataTable = function (opts) {\n    return $(this).dataTable(opts).api();\n  };\n\n  // All properties that are available to $.fn.dataTable should also be\n  // available on $.fn.DataTable\n  $.each(DataTable, function (prop, val) {\n    $.fn.DataTable[prop] = val;\n  });\n\n  return DataTable;\n});"],"names":["factory","define","amd","$","window","document","exports","jq","require","module","root","DataTable","jQuery","_ext","_Api","_api_register","_api_registerPlural","selector","options","this","_that","emptyInit","undefined","len","length","api","each","iLen","oInit","_fnExtend","i","sId","getAttribute","defaults","$this","nodeName","toLowerCase","trigger","_fnCompatOpts","_fnCompatCols","column","_fnCamelToHungarian","extend","data","allSettings","settings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","Api","destroy","_fnLog","sTableId","id","splice","ext","_unique","oSettings","models","sDestroyWidth","style","width","sInstance","colgroup","prependTo","fastData","row","type","_fnGetCellData","push","dataTable","aLengthMenu","iDisplayLength","Array","isArray","isPlainObject","value","_fnMap","oFeatures","oScroll","oLanguage","_fnCallbackReg","fnDrawCallback","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","__browser","browser","n","css","position","top","left","pageXOffset","height","overflow","append","appendTo","outer","children","inner","barWidth","offsetWidth","clientWidth","bScrollbarLeft","Math","round","offset","remove","oBrowser","iBarWidth","_fnBrowserDetect","oClasses","classes","addClass","table","bPaginate","iDisplayStart","iInitDisplayStart","_iDisplayStart","defer","iDeferLoading","deferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","columnsInit","thead","getElementsByTagName","initHeaderLayout","_fnDetectHeader","aoColumns","_fnAddColumn","aoColDefs","aoCols","headerLayout","fn","j","jLen","k","kLen","def","columns","name","sName","aTargets","target","targets","indexOf","replace","forEach","cell","match","is","_fnApplyColumnDefs","aoColumnDefs","iCol","oDef","_fnColumnOptions","rowOne","find","eq","a","col","mData","sort","filter","_","_isArrayHost","_fnSaveState","features","bStateSave","aaSorting","sorting","asSorting","_fnSortingClasses","bSorted","_fnDataSource","bDeferRender","caption","html","_captionSide","captionNode","tbody","insertAfter","nTBody","tfoot","aiDisplay","aiDisplayMaster","slice","bInitialised","sUrl","ajax","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","buttons","builder","errMode","feature","search","legacy","pager","renderer","pageButton","header","order","className","detect","render","fnVersionCheck","iApiIndex","sVersion","version","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","aoFeatures","oStdClasses","oPagination","container","empty","info","layout","tableRow","tableCell","start","end","full","select","canAsc","canDesc","isAsc","isDesc","none","processing","scrolling","body","footer","self","input","paging","active","button","disabled","_re_dic","_re_new_lines","_re_html","_max_str_len","pow","_re_date","_re_escape_regex","RegExp","join","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","_isNumber","formatted","allowEmpty","strType","parseFloat","_htmlNumeric","_isHtml","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","_removeEmpty","Error","previous","_escapeHtml","_normalize","str","both","res","normalize","src","from","Set","sorted","last","_areAllUnique","val","again","_flatten","_addClass","el","split","classList","add","_fnHungarianMap","o","newKey","map","key","_hungarianMap","user","force","hungarianKey","charAt","util","diacritics","mixed","debounce","timeout","timer","that","args","arguments","clearTimeout","setTimeout","apply","throttle","freq","frequency","now","Date","escapeRegex","set","source","meta","setData","b","arrayNotation","funcNotation","innerSrc","_fnSplitObjNotation","aLast","__reArray","__reFn","get","t","fetchData","substring","stripHtml","escapeHtml","unique","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","serverSide","searchDelay","dataSort","aDataSort","oDefaults","oCol","oColumn","idx","searchFixed","colEl","attr","aoPreSearchCols","oOptions","mDataProp","sType","_sManualType","sClass","origClass","iDataSort","mDataSrc","mRender","copy","shift","_render","attrTest","_bAttrSrc","_setter","fnGetData","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSort","bSortable","_fnAdjustColumnSizing","bAutoWidth","columnIdx","scroll","scrollY","sY","sX","scrollXInner","sXInner","visibleColumns","_fnGetColumns","tableWidthAttr","tableContainer","styleWidth","visible","tmpTable","cloneNode","removeAttr","tr","clone","_fnColumnsSumWidth","margin","padding","border","longest","_fnGetMaxLenString","autoClass","text","sContentPadding","insert","createTextNode","holder","right","total","bodyCells","bounding","getBoundingClientRect","sWidth","_fnStringToCss","_reszEvt","on","bDestroying","bindResize","_fnCalculateColumnWidths","cols","_fnColumnSizes","_fnScrollDraw","_fnVisibleToColumnIndex","iMatch","aiVis","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","aoHeader","vis","bVisible","sParam","_typeResult","typeDetect","_fnColumnTypes","jen","ken","detectedType","cache","aoData","types","oneOf","allOf","one","_columnAutoClass","aoFooter","_columnAutoRender","colIdx","nTr","display","displayData","_fnWriteCell","anCells","original","incVisible","_fnColumnsFromHeader","unit","sum","definedWidth","sWidthOrig","matched","closest","_fnAddData","dataIn","tds","rowIdx","rowModel","oRow","_aData","aIds","_fnCreateTr","_fnAddTr","trs","_fnGetRowElements","cells","draw","iDraw","defaultContent","sDefaultContent","cellData","innerHTML","iDrawError","call","fomatters","td","_fnGetDataMaster","_fnClearTable","_fnInvalidate","_aSortData","_aFilterData","_fnGetRowDisplay","maxLenString","_fnRowAttributes","contents","firstChild","objectRead","setter","cellProcess","trim","toUpperCase","nextSibling","rowNode","rowModal","iRow","nTrIn","anTds","nTd","create","trClass","createElement","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","removeChild","fnCreatedCell","DT_RowClass","__rowc","concat","removeClass","DT_RowAttr","DT_RowData","_fnBuildHead","side","titleProp","detected","_fnRenderer","_fnHeaderLayout","incColumns","rowspan","colspan","local","structure","columnCount","includes","titleSpan","title","_fnDrawHead","point","_fnDraw","ajaxComplete","bServerSide","fnRecordsDisplay","_fnStart","anRows","iRowCount","iDisplayEnd","fnDisplayEnd","bDrawing","_fnProcessingDisplay","_emptyRow","_fnBuildAjax","preSearch","oPreviousSearch","preColSearch","colData","searchable","bSearchable","orderable","regex","fixed","Object","keys","term","toString","_fnSortFlatten","dir","_iDisplayLength","_fnAjaxParameters","_fnAjaxDataSrc","_fnAjaxDataSrcParam","recordsTotal","recordsFiltered","_fnInitComplete","_fnAjaxUpdateDraw","iStart","iEnd","iDataIndex","nRow","replaceChildren","detach","nTableWrapper","toggleClass","bFiltered","_fnReDraw","holdPosition","recompute","bFilter","_fnSort","_fnFilterComplete","_drawHold","oLang","zero","sZeroRecords","dataSrc","sLoadingRecords","sEmptyTable","fnRecordsTotal","colSpan","class","_layoutItems","align","items","rowCell","rowClass","opts","_layoutArray","rows","pos","parts","rowNum","_layoutGetRow","order1","order2","ret","reverse","_layoutResolve","getFeature","resolve","item","line","node","inst","_fnAddOptionsHtml","insertBefore","sDom","dom","featureNode","option","newNode","next","parent","_fnFeatureHtmlTable","cFeature","fnInit","_fnLayoutDom","bottom","bProcessing","role","sProcessing","e","show","_processingHtml","write","l","shifted","isHeader","columnDef","sTitle","autoTitle","ariaTitle","childNodes","setAttribute","ajaxData","instance","callback","status","jqXHR","sError","JSON","parse","newData","baseAjax","sServerMethod","xhr","readyState","oAjaxData","dataProp","aaData","param","columnsSearch","filterData","wasInvalidated","__filter_div","__filter_div_textContent","textContent","innerText","_sFilterRow","_fnFilterData","_fnFilter","filters","displayRows","_fnFilterCustom","searchRows","searchFunc","rpSearch","inOpts","not","boundary","caseInsensitive","exact","smart","word","m","negative","_fnFilterCreateSearch","test","loaded","state","_fnImplementState","fnStateLoadCallback","_fnLoadState","iAjaxStart","headerRows","querySelectorAll","legacyTop","bSortCellsTop","notSelector","_fnSortAttachListener","_fnSortResolve","_fnSortInit","_colGroup","aData","_bInitComplete","_fnLengthChange","_fnLengthOverflow","_fnPageChange","action","redraw","records","floor","changed","_fnProcessingRun","enable","run","captionSide","headerClone","footerClone","_div","size","scroller","scrollHead","scrollBody","scrollFoot","scrollLeft","bCollapse","nScrollHead","nScrollBody","nScrollFoot","aoDrawCallback","headerCopy","footerCopy","divHeaderInner","divHeaderTable","divBodyEl","divBody","divFooterInner","divFooterTable","scrollBarVis","scrollHeight","clientHeight","colSizes","outerWidth","wrapAll","isScrolling","paddingSide","scrollTop","max","maxLen","cellString","nodeType","_fnBindAction","_fnSortAdd","shiftKey","_fnSortDisplay","master","masterMap","nestedSort","z","srcCol","aSort","extSort","aaSortingFixed","fixedObj","pre","post","_idx","index","formatter","sorter","aiOrig","displayMaster","_fnSortData","orderDescReverse","x","y","dataA","dataB","sortDetails","addIndex","nextSortIdx","bSortMulti","sortIdx","oldSort","aLastSort","sortClass","bSortClasses","customData","customSort","sSortDataType","_bLoadingState","time","oSavedState","fnStateSaveCallback","duration","iStateDuration","oLoadedState","page","adjust","level","msg","tn","console","log","sErrMode","alert","mappedName","extender","breakRefs","prototype","hasOwnProperty","which","preventDefault","store","callbackArr","eventName","bubbles","Event","dt","parents","result","host","_fnMacros","entries","fnFormatNumber","all","ceil","i18n","__apiStruct","__arrayProto","_api_scope","scope","struc","methodExt","_api_find","context","ctxSettings","tables","toArray","v","_toSettings","any","count","flatten","ctx","iterator","alwaysNew","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","to$","toJQuery","unshift","obj","struct","__dt_wrapper","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","sel","nodes","indexes","prepend","visRecords","pages","recordsDisplay","__reload","abort","resetPaging","_selector_run","selectFn","selectorType","_selector_opts","_selector_first","displayFiltered","displayFilteredMap","ordered","selInt","cellIdx","rowObj","__row_selector","r","hash","newRows","modRows","idFn","ids","_detailsShow","childRows","__details_state_load","every","__details_state","__details_remove","_details","__details_display","__details_events","off","drawEvent","_child_obj","klass","child","addRow","created","__details_add","_child_mth","__re_column_selector","__columnData","r1","r2","__column_header","names","titles","visColumns","jqResult","__column_selector","span","calc","__setColumnVis","widths","visIdx","rowSelector","columnSelector","allCells","fnSelector","__cell_selector","internalOpts","cellsNoOpts","selected","columnVisible","directions","caseInsen","ignoreTime","setMutate","use","arg1","arg2","DateTime","__luxon","__moment","jquery","FixedOffsetZone","isMoment","versionCheck","version2","iThis","iThat","aThis","aThat","isDataTable","head","foot","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orderClasses","orig","removedMethod","counter","selectedIdx","tableIdx","token","plural","resolved","return","sSortingClass","bInfo","bLengthChange","bScrollCollapse","toFormat","sThousands","fnInfoCallback","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","iTabIndex","oAria","orderableReverse","orderableRemove","paginate","first","number","oPaginate","sFirst","sLast","sNext","sPrevious","sInfo","sInfoEmpty","sInfoFiltered","sInfoPostFix","sDecimal","sLengthMenu","sSearch","sSearchPlaceholder","topStart","topEnd","bottomStart","bottomEnd","sPaginationType","sScrollXInner","sScrollY","aanFeatures","aoRowCallback","aoHeaderCallback","aoFooterCallback","aoRowCreatedCallback","aoPreDrawCallback","aoInitComplete","aoStateSaveParams","aoStateLoadParams","aoStateLoaded","aoOpenRows","pagingControls","aoStateSave","aoStateLoad","bAjaxDataGet","aoDestroyCallback","min","oPlugins","extPagination","simple","numbers","simple_numbers","full_numbers","first_last","first_last_numbers","_numbers","_pagingNumbers","numbers_length","pagingButton","buttonType","content","btn","btnClasses","clicker","pagingContainer","_filterString","__mld","dtLib","momentFn","luxonFn","dateFn","__mlWarning","__mldObj","format","locale","luxon","moment","utc","isValid","fromFormat","fromISO","setLocale","__mlHelper","localeString","to","typeName","valueOf","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","date","thousands","decimal","precision","prefix","postfix","flo","abs","exp","toExponential","toFixed","intPart","floatPart","_extTypes","asc","desc","setProp","propVal","setDetect","defineProperty","findIndex","setOrder","__diacriticSort","localeCompare","navigator","languages","language","numeric","ignorePunctuation","parsed","ts","Infinity","dp","__numericReplace","decimalPlace","re1","re2","_divProp","ariaType","sortDirs","orderedColumns","isOrdering","orderDirs","firstVis","firstSort","sortOrder","cb","lang","tid","_fnUpdateInfo","_infoEl","__searchCounter","_pagingDynamic","previousNext","firstLast","_pagingDraw","plugin","aria","boundaryNumbers","flat","buttonEls","btnInfo","_pagingButtonInfo","ariaLabel","tabIndex","wrapped","activeEl","activeElement","outerHeight","addFirstLast","half","before","after","tableId","previousSearch","placeholder","removed","searchFn","event","jqFilter","keyCode","ev","__lengthCounter","menu","lengths","label","tmpId","div","textNodes","Node","TEXT_NODE","updateEntries","Option","replaceWith","dataTableSettings","dataTableExt"],"mappings":"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"}