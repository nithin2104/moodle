{"version":3,"file":"examples.min.js","sources":["../src/examples.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Dynamic forms examples\n *\n * @module     local_modalformexamples/examples\n * @copyright  2021 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport DynamicForm from 'core_form/dynamicform';\nimport Notification from 'core/notification';\nimport ModalForm from 'core_form/modalform';\nimport {add as addToast} from 'core/toast';\n\nconst addNotification = msg => {\n    addToast(msg);\n    // eslint-disable-next-line no-console\n    console.log(msg);\n};\n\n\nexport const test2 = (linkSelector, formClass, resultSelector, addArgs = false) => {\n    document.querySelector(linkSelector).addEventListener('click', (e) => {\n        e.preventDefault();\n        const form = new ModalForm({\n            formClass,\n            args: addArgs ? {hidebuttons: 1, option: ['green', 'yellow'], name: 'Test2'} : {hidebuttons: 1},\n            modalConfig: {title: 'Test2'},\n            returnFocus: e.currentTarget\n        });\n        // If necessary extend functionality by overriding class methods, for example:\n        form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n            const response = e.detail;\n            addNotification('Form submitted...');\n            document.querySelector(resultSelector).innerHTML = '<pre>' + JSON.stringify(response) + '</pre>';\n        });\n\n        // Demo of different events.\n        form.addEventListener(form.events.LOADED, () => addNotification('Form loaded'));\n        form.addEventListener(form.events.NOSUBMIT_BUTTON_PRESSED,\n            (e) => addNotification('No submit button pressed ' + e.detail.getAttribute('name')));\n        form.addEventListener(form.events.CLIENT_VALIDATION_ERROR, () => addNotification('Client-side validation error'));\n        form.addEventListener(form.events.SERVER_VALIDATION_ERROR, () => addNotification('Server-side validation error'));\n        form.addEventListener(form.events.ERROR, (e) => addNotification('Oopsie - ' + e.detail.message));\n        form.addEventListener(form.events.SUBMIT_BUTTON_PRESSED, () => addNotification('Submit button pressed'));\n        form.addEventListener(form.events.CANCEL_BUTTON_PRESSED, () => addNotification('Cancel button pressed'));\n\n        form.show();\n    });\n\n};\n\nexport const test3 = (selector, formClass) => {\n    const form = new DynamicForm(document.querySelector(selector), formClass);\n    const formargs = {arg1: 'val1'};\n    form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n        e.preventDefault();\n        const response = e.detail;\n        form.load({...formargs, name: response.name});\n        addNotification('Form submitted');\n        Notification.addNotification({message: 'Form submitted: ' + JSON.stringify(response), type: 'success'});\n    });\n\n    // Cancel button does not make much sense in such forms but since it's there we'll just reload.\n    form.addEventListener(form.events.FORM_CANCELLED, (e) => {\n        e.preventDefault();\n        form.notifyResetFormChanges()\n        .then(() => form.load(formargs));\n        addNotification('Form cancelled');\n    });\n\n    // Demo of different events.\n    form.addEventListener(form.events.NOSUBMIT_BUTTON_PRESSED, () => addNotification('No submit button pressed'));\n    form.addEventListener(form.events.CLIENT_VALIDATION_ERROR, () => addNotification('Client-side validation error'));\n    form.addEventListener(form.events.SERVER_VALIDATION_ERROR, () => addNotification('Server-side validation error'));\n    form.addEventListener(form.events.ERROR, (e) => addNotification('Oopsie - ' + e.detail.message));\n    form.addEventListener(form.events.SUBMIT_BUTTON_PRESSED, () => addNotification('Submit button pressed'));\n    form.addEventListener(form.events.CANCEL_BUTTON_PRESSED, () => addNotification('Cancel button pressed'));\n};\n\nexport const test4 = (selector, formClass, linkSelector, addArgs) => {\n    const form = new DynamicForm(document.querySelector(selector), formClass);\n    form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n        e.preventDefault();\n        const response = e.detail;\n        form.container.innerHTML = JSON.stringify(response);\n    });\n\n    document.querySelector(linkSelector).addEventListener('click', (e) => {\n        e.preventDefault();\n        form.load(addArgs ? {option: ['blue', 'red'], name: 'hello'} : {arg1: 'val1'});\n    });\n\n    // Add confirmation for the Cancel button.\n    form.addEventListener(form.events.CANCEL_BUTTON_PRESSED, (e) => {\n        e.preventDefault();\n        Notification.confirm(\n            'Confirm',\n            'Are you sure you want to cancel?',\n            'Yes', // Delete.\n            'No', // Cancel.\n            form.processCancelButton.bind(form)\n        );\n    });\n};"],"names":["_interopRequireDefault","obj","__esModule","default","_dynamicform","_notification","_modalform","addNotification","msg","addToast","console","log","_exports","test2","linkSelector","formClass","resultSelector","addArgs","arguments","length","undefined","document","querySelector","addEventListener","e","preventDefault","form","ModalForm","args","hidebuttons","option","name","modalConfig","title","returnFocus","currentTarget","events","FORM_SUBMITTED","response","detail","innerHTML","JSON","stringify","LOADED","NOSUBMIT_BUTTON_PRESSED","getAttribute","CLIENT_VALIDATION_ERROR","SERVER_VALIDATION_ERROR","ERROR","message","SUBMIT_BUTTON_PRESSED","CANCEL_BUTTON_PRESSED","show","test3","selector","DynamicForm","formargs","arg1","load","Notification","type","FORM_CANCELLED","notifyResetFormChanges","then","test4","container","confirm","processCancelButton","bind"],"mappings":"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"}