{"version":3,"file":"messageform.min.js","sources":["../src/messageform.js"],"sourcesContent":["/* eslint-disable promise/always-return */\n/* eslint-disable promise/catch-or-return */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module messageform\n *\n * @module     local_message/messageform\n * @copyright  2024 LMSCloud.io\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ModalForm from 'core_form/modalform';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Fragment from 'core/fragment';\nimport Ajax from 'core/ajax';\nimport {get_string as getString} from 'core/str';\nimport * as Str from 'core/str';\n\nconst Selectors = {\n    actions: {\n        updatemodal: '[data-action=\"updatemodal\"]',\n        viewmodal: '[data-action=\"viewmodal\"]',\n        deletemodal: '[data-action=\"deletemodal\"]',\n    },\n};\n\nexport const init = () => {\n    // In this example we will open the modal dialogue with the form when user clicks on the edit link:\n    document.addEventListener('click', e => {\n        let updatemodal = e.target.closest(Selectors.actions.updatemodal);\n        if (updatemodal) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            const title = updatemodal.getAttribute('data-id') ?\n                getString('edittitle', 'local_message', updatemodal.getAttribute('data-name')) :\n                getString('addtitle', 'local_message', updatemodal.getAttribute('data-name'));\n            const modalForm = new ModalForm({\n                // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n                formClass: \"local_message\\\\form\\\\message_form\",\n                // Add as many arguments as you need, they will be passed to the form:\n                args: {id: updatemodal.getAttribute('data-id')},\n                // Pass any configuration settings to the modal dialogue, for example, the title:\n                modalConfig: {title},\n                // DOM element that should get the focus after the modal dialogue is closed:\n                returnFocus: updatemodal,\n            });\n            // Listen to events if you want to execute something on form submit. Event detail will contain everything the process().\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => window.location.reload());\n            modalForm.show();\n        }\n        let viewmodal = e.target.closest(Selectors.actions.viewmodal);\n        if (viewmodal) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            const id = viewmodal.getAttribute(\"data-id\");\n            const args = {id: id};\n            Str.get_string('viewdetails', 'local_message', args).then(function() {\n                ModalFactory.create({\n                    title: getString('viewdetails', 'local_message'),\n                    body: detailpage(args),\n                }).done(\n                    function(modal) {\n                        self.modal = modal;\n                        self.modal.setLarge();\n                        self.modal.getRoot().on(ModalEvents.hidden, function() {\n                            self.modal.hide();\n                            self.modal.destroy();\n                        });\n                        self.modal.getRoot().on(ModalEvents.cancel, function() {\n                            self.modal.hide();\n                            self.destroy();\n                        });\n                        self.modal.show();\n                    }\n                );\n            });\n        }\n        const detailpage = function(args) {\n            return Fragment.loadFragment('local_message', 'message', 1, args);\n        };\n        let deletemodal = e.target.closest(Selectors.actions.deletemodal);\n        if (deletemodal) {\n            const id = deletemodal.getAttribute('data-id');\n            const firstname = deletemodal.getAttribute('data-name');\n            const a = {\n\n                'type': 'record',\n                'name': firstname,\n            };\n            ModalFactory.create({\n                title: getString('deletecheck', 'moodle', 'Record'),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getString('deletechecktypename', 'moodle', a),\n            }).done(\n                function(modal) {\n                    this.modal = modal;\n                    modal.setSaveButtonText(getString('delete'));\n                    modal.getRoot().on(\n                        ModalEvents.save,\n                        function(e) {\n                            e.preventDefault();\n                            var params = {};\n                            params.confirm = true;\n                            params.id = id;\n                            var promise = Ajax.call([{\n                                methodname: \"local_message_delete_record\",\n                                args: params,\n                            }]);\n                            promise[0]\n                                .done(function() {\n                                    window.location.reload(true);\n                                })\n                                .fail(function() {\n                                    // Failed.\n                                });\n                        }\n                    );\n                    modal.getRoot().on(ModalEvents.cancel, function() {\n                        window.location.reload(this);\n                    });\n                    modal.show();\n                }\n            );\n        }\n    });\n\n};\n\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireDefault","obj","__esModule","default","_modalform","_modal_factory","_modal_events","_fragment","_ajax","Str","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","Selectors","updatemodal","viewmodal","deletemodal","_exports","init","document","addEventListener","e","target","closest","preventDefault","stopImmediatePropagation","title","getAttribute","getString","modalForm","ModalForm","formClass","args","id","modalConfig","returnFocus","events","FORM_SUBMITTED","window","location","reload","show","get_string","then","ModalFactory","create","body","detailpage","done","modal","self","setLarge","getRoot","on","ModalEvents","hidden","hide","destroy","cancel","Fragment","loadFragment","a","type","name","types","SAVE_CANCEL","this","setSaveButtonText","save","params","Ajax","methodname","fail"],"mappings":"qOA6BiD,SAAAA,yBAAAC,mCAAAC,wBAAAC,sBAAAD,QAAAE,qBAAAF,eAAAF,kCAAAC,oBAAAA,YAAAG,iBAAAD,oBAAAF,aAAA,SAAAI,uBAAAC,YAAAA,KAAAA,IAAAC,WAAAD,KAAAE,QAAAF;;;;;;;kFALjDG,WAAAJ,uBAAAI,YACAC,eAAAL,uBAAAK,gBACAC,cAAAN,uBAAAM,eACAC,UAAAP,uBAAAO,WACAC,MAAAR,uBAAAQ,OACAC,IAAiD,SAAAR,IAAAL,iBAAAA,aAAAK,KAAAA,IAAAC,kBAAAD,cAAAA,sBAAAA,wBAAAA,WAAAE,QAAAF,SAAAS,MAAAf,yBAAAC,gBAAAc,OAAAA,MAAAC,IAAAV,YAAAS,MAAAE,IAAAX,SAAAY,UAAAC,sBAAAC,OAAAC,gBAAAD,OAAAE,iCAAAC,OAAAjB,mBAAAiB,KAAAH,OAAAI,UAAAC,eAAAC,KAAApB,IAAAiB,UAAAI,KAAAR,sBAAAC,OAAAE,yBAAAhB,IAAAiB,UAAAI,OAAAA,KAAAV,KAAAU,KAAAC,KAAAR,OAAAC,eAAAH,OAAAK,IAAAI,MAAAT,OAAAK,KAAAjB,IAAAiB,KAAAL,OAAAV,QAAAF,IAAAS,OAAAA,MAAAa,IAAAtB,IAAAY,eAAAA,OAAjDW,CAAAf,KAGA,MAAMgB,kBACO,CACLC,YAAa,8BACbC,UAAW,4BACXC,YAAa,+BAwGnBC,SAAAC,KApGkBA,KAEhBC,SAASC,iBAAiB,SAASC,IAC/B,IAAIP,YAAcO,EAAEC,OAAOC,QAAQV,kBAAkBC,aACrD,GAAIA,YAAa,CACbO,EAAEG,iBACFH,EAAEI,2BACF,MAAMC,MAAQZ,YAAYa,aAAa,YACnC,EAAAC,gBAAU,YAAa,gBAAiBd,YAAYa,aAAa,eACjE,EAAAC,gBAAU,WAAY,gBAAiBd,YAAYa,aAAa,cAC9DE,UAAY,IAAIC,mBAAU,CAE5BC,UAAW,oCAEXC,KAAM,CAACC,GAAInB,YAAYa,aAAa,YAEpCO,YAAa,CAACR,aAEdS,YAAarB,cAGjBe,UAAUT,iBAAiBS,UAAUO,OAAOC,gBAAgB,IAAMC,OAAOC,SAASC,WAClFX,UAAUY,OAEd,IAAI1B,UAAYM,EAAEC,OAAOC,QAAQV,kBAAkBE,WACnD,GAAIA,UAAW,CACXM,EAAEG,iBACFH,EAAEI,2BACF,MACMO,KAAO,CAACC,GADHlB,UAAUY,aAAa,YAElC9B,IAAI6C,WAAW,cAAe,gBAAiBV,MAAMW,MAAK,WACtDC,uBAAaC,OAAO,CAChBnB,OAAO,EAAAE,gBAAU,cAAe,iBAChCkB,KAAMC,WAAWf,QAClBgB,MACC,SAASC,OACLC,KAAKD,MAAQA,MACbC,KAAKD,MAAME,WACXD,KAAKD,MAAMG,UAAUC,GAAGC,sBAAYC,QAAQ,WACxCL,KAAKD,MAAMO,OACXN,KAAKD,MAAMQ,aAEfP,KAAKD,MAAMG,UAAUC,GAAGC,sBAAYI,QAAQ,WACxCR,KAAKD,MAAMO,OACXN,KAAKO,aAETP,KAAKD,MAAMR,aAK3B,MAAMM,WAAa,SAASf,MACxB,OAAO2B,kBAASC,aAAa,gBAAiB,UAAW,EAAG5B,OAEhE,IAAIhB,YAAcK,EAAEC,OAAOC,QAAQV,kBAAkBG,aACrD,GAAIA,YAAa,CACb,MAAMiB,GAAKjB,YAAYW,aAAa,WAE9BkC,EAAI,CAENC,KAAQ,SACRC,KAJc/C,YAAYW,aAAa,cAM3CiB,uBAAaC,OAAO,CAChBnB,OAAO,EAAAE,gBAAU,cAAe,SAAU,UAC1CkC,KAAMlB,uBAAaoB,MAAMC,YACzBnB,MAAM,EAAAlB,gBAAU,sBAAuB,SAAUiC,KAClDb,MACC,SAASC,OACLiB,KAAKjB,MAAQA,MACbA,MAAMkB,mBAAkB,EAAAvC,gBAAU,WAClCqB,MAAMG,UAAUC,GACZC,sBAAYc,MACZ,SAAS/C,GACLA,EAAEG,iBACF,IAAI6C,OAAS,CACbA,SAAiB,GACjBA,OAAOpC,GAAKA,GACEqC,cAAK7D,KAAK,CAAC,CACrB8D,WAAY,8BACZvC,KAAMqC,UAEF,GACHrB,MAAK,WACFV,OAAOC,SAASC,QAAO,MAE1BgC,MAAK,kBAKlBvB,MAAMG,UAAUC,GAAGC,sBAAYI,QAAQ,WACnCpB,OAAOC,SAASC,OAAO0B,SAE3BjB,MAAMR,aAIpB,CAEJ"}