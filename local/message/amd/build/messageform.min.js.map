{"version":3,"file":"messageform.min.js","sources":["../src/messageform.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module messageform\n *\n * @module     local_message/messageform\n * @copyright  2024 LMSCloud.io\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ModalForm from 'core_form/modalform';\n\nimport {get_string as getString} from 'core/str';\n\nconst Selectors = {\n    actions: {\n        update: '[data-action=\"updatemodal\"]',\n    },\n};\n\nexport const init = () => {\n    // In this example we will open the modal dialogue with the form when user clicks on the edit link:\n    document.addEventListener('click', e => {\n        let update = e.target.closest(Selectors.actions.update);\n        if (update) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            const modalForm = new ModalForm({\n                // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n                formClass: \"local_message\\\\form\\\\message_form\",\n                // Add as many arguments as you need, they will be passed to the form:\n                // Pass any configuration settings to the modal dialogue, for example, the title:\n                modalConfig: {title: getString('addtitle', 'local_message')},\n                // DOM element that should get the focus after the modal dialogue is closed:\n                returnFocus: update,\n            });\n            // Listen to events if you want to execute something on form submit. Event detail will contain everything the process().\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => window.location.reload());\n            modalForm.show();\n        }\n    });\n};\n\n"],"names":["obj","_modalform","__esModule","default","Selectors","update","_exports","init","document","addEventListener","e","target","closest","preventDefault","stopImmediatePropagation","modalForm","ModalForm","formClass","modalConfig","title","getString","returnFocus","events","FORM_SUBMITTED","window","location","reload","show"],"mappings":"oHAsB4C,IAAAA;;;;;;;kFAA5CC,YAA4CD,IAA5CC,aAA4CD,IAAAE,WAAAF,KAAAG,QAAAH,KAI5C,MAAMI,kBACO,CACLC,OAAQ,+BAyBdC,SAAAC,KArBkBA,KAEhBC,SAASC,iBAAiB,SAASC,IAC/B,IAAIL,OAASK,EAAEC,OAAOC,QAAQR,kBAAkBC,QAChD,GAAIA,OAAQ,CACRK,EAAEG,iBACFH,EAAEI,2BACF,MAAMC,UAAY,IAAIC,mBAAU,CAE5BC,UAAW,oCAGXC,YAAa,CAACC,OAAO,EAAAC,iBAAU,WAAY,kBAE3CC,YAAahB,SAGjBU,UAAUN,iBAAiBM,UAAUO,OAAOC,gBAAgB,IAAMC,OAAOC,SAASC,WAClFX,UAAUY,UAEhB,CACJ"}